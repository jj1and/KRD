This documents explains recv_buff_v2_xxxxxxx.bin data format.
The data format is divided to 2 sections.

If you read the file by binary file reader (Ex. Stirling)
you can see the file like below.

----------------------------------------------

[ [ data_header ,       data_line_0   ],
  [ data_line_2 ,       data_line_1   ],
  [ data_line_4 ,       data_line_3   ],
  [ data_line_6 ,       data_line_5   ],
            ..........
  [ data_line_n-2,      data_line_n-1 ],
  [ data_line_n ,       data_footer   ],
  [ data_header ,       data_line_0   ],
  [ data_line_2 ,       data_line_1   ],
  [ data_line_4 ,       data_line_3   ],
  [ data_line_6 ,       data_line_5   ],
            ..........
  [ data_line_n-2,      data_line_n-1 ],
  [ data_line_n  ,      data_footer   ],
            ..........
            ..........
            ..........
  [ perf_header ,       perf_line_0   ],
  [ perf_line_2 ,       perf_line_1   ],
  [ perf_line_4 ,       perf_line_3   ],
  [ perf_line_6 ,       perf_line_5   ],
            ..........
  [ perf_line_n-2,      perf_line_n-1 ],
  [ perf_line_n  ,      perf_footer   ],
  [ perf_header,        perf_line_0   ],
  [ perf_line_2 ,       perf_line_1   ],
  [ perf_line_4 ,       perf_line_3   ],
  [ perf_line_6 ,       perf_line_5   ],
            ..........
  [ perf_line_n-2,  perf_line_n-1     ],
  [ perf_line_n  ,  perf_footer       ] ]

--------------------------------------------
*data_header and perf_header = [header[15:0], header[31:16], header[47:32], header[63:48]]
*data_footer and perf_footer = [footer[15:0], footer[31:16], footer[47:32], footer[63:48]]
*data_line_x = [data_3[0:15], data_2[0:15], data_1[0:15], data_0[0:15] ]
*perf_line_x = [unsigned int 64bit in little endian]

PLEASE BE CAREFULL that this is Little endian!!!! (So, "AA 78 00 00 00 00 00 0A" in Big endian will be "0A 00 00 00 00 00 78 AA")
data format in MinimumTrigger_DataFrame.xlsx is written in Big endian.

As you can see, the first half is data section, and the latter half is peformance measurement section.
The data section contains triggered data (which is generated by signal generator).
The performance measurement section contains timing data of command excuted at RFSoC.

"data_header" at data section contains data like "B8 F0 0B C2 7B 0B AA AA" (detail is on project_tcl\ZCU111\MinimumTrigger\MinimumTrigger_DataFrame.xlsx)
valid header has "AA AA" at the "data_header[47:32] data_header[63 : 48]"
error header has "EE AA" at the "data_header[47:32] data_header[63 : 48]"
valid footer has "55 55" at the "data_footer[15: 0] data_footer[31 : 16]"
error footer has "55 55" at the "data_footer[15: 0] data_footer[31 : 16]"


"perf_header" at performance measurement section contains data like "0A 00 00 00 00 00 78 AA"
performance measurement header has "78 AA" at "perf_header[47:32] perf_header[63 : 48]"
performance measurement footer has "78 55" at "perf_footer[15: 0] perf_footer[31 : 16]"

performance measurement header has "TYPE CODE" at "perf_header[15:0]" as its command type. Types are like below.
--------------------
DMA_START     : 0A
DMA_INTR_END  : 0B
DMA_END       : 0C
SEND2PC_END   : 0D
QUEUE_RECV    : 0E
--------------------

You can refer read_bin.py as decode data.
