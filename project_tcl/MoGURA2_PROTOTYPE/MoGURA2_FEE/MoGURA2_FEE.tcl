#*****************************************************************************************
# Vivado (TM) v2019.1.3_AR73068 (64-bit)
#
# MoGURA2_FEE.tcl: Tcl script for re-creating project 'MoGURA2_FEE'
#
# Generated by Vivado on Tue Dec 15 23:04:19 +0900 2020
# IP Build 2633630 on Wed Sep  4 12:30:14 MDT 2019
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (MoGURA2_FEE.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    <none>
#
# 3. The following remote source files that were added to the original project:-
#
#    "E:/KRD/project_tcl/MoGURA2_PROTOTYPE/MoGURA2_FEE/sync.v"
#    "E:/KRD/proto_ip_code/axi_dma_connector/axi_dma_connector.v"
#    "E:/KRD/common_source/led_chika.v"
#    "E:/KRD/project_tcl/MoGURA2_PROTOTYPE/MoGURA2_FEE/spi_ladc_customif.v"
#    "E:/KRD/project_tcl/MoGURA2_PROTOTYPE/MoGURA2_FEE/iic_cdci6214_customif.v"
#    "E:/KRD/proto_ip_code/peripheral_controler/peripheral_controler.v"
#    "E:/KRD/project_tcl/MoGURA2_PROTOTYPE/MoGURA2_FEE/mogura2_fee_wrapper.v"
#    "E:/KRD/project_tcl/MoGURA2_PROTOTYPE/MoGURA2_FEE/mogura2_fee_constraints.xdc"
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "MoGURA2_FEE"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "MoGURA2_FEE.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/MoGURA2_FEE"]"

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xczu29dr-ffvf1760-1-e

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "board_part" -value "" -objects $obj
set_property -name "compxlib.activehdl_compiled_library_dir" -value "$proj_dir/${_xil_proj_name_}.cache/compile_simlib/activehdl" -objects $obj
set_property -name "compxlib.funcsim" -value "1" -objects $obj
set_property -name "compxlib.ies_compiled_library_dir" -value "$proj_dir/${_xil_proj_name_}.cache/compile_simlib/ies" -objects $obj
set_property -name "compxlib.modelsim_compiled_library_dir" -value "$proj_dir/${_xil_proj_name_}.cache/compile_simlib/modelsim" -objects $obj
set_property -name "compxlib.overwrite_libs" -value "0" -objects $obj
set_property -name "compxlib.questa_compiled_library_dir" -value "$proj_dir/${_xil_proj_name_}.cache/compile_simlib/questa" -objects $obj
set_property -name "compxlib.riviera_compiled_library_dir" -value "$proj_dir/${_xil_proj_name_}.cache/compile_simlib/riviera" -objects $obj
set_property -name "compxlib.timesim" -value "1" -objects $obj
set_property -name "compxlib.vcs_compiled_library_dir" -value "$proj_dir/${_xil_proj_name_}.cache/compile_simlib/vcs" -objects $obj
set_property -name "compxlib.xsim_compiled_library_dir" -value "" -objects $obj
set_property -name "corecontainer.enable" -value "0" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "dsa.accelerator_binary_content" -value "bitstream" -objects $obj
set_property -name "dsa.accelerator_binary_format" -value "xclbin2" -objects $obj
set_property -name "dsa.description" -value "Vivado generated DSA" -objects $obj
set_property -name "dsa.dr_bd_base_address" -value "0" -objects $obj
set_property -name "dsa.emu_dir" -value "emu" -objects $obj
set_property -name "dsa.flash_interface_type" -value "bpix16" -objects $obj
set_property -name "dsa.flash_offset_address" -value "0" -objects $obj
set_property -name "dsa.flash_size" -value "1024" -objects $obj
set_property -name "dsa.host_architecture" -value "x86_64" -objects $obj
set_property -name "dsa.host_interface" -value "pcie" -objects $obj
set_property -name "dsa.num_compute_units" -value "60" -objects $obj
set_property -name "dsa.platform_state" -value "pre_synth" -objects $obj
set_property -name "dsa.rom.debug_type" -value "0" -objects $obj
set_property -name "dsa.rom.prom_type" -value "0" -objects $obj
set_property -name "dsa.vendor" -value "xilinx" -objects $obj
set_property -name "dsa.version" -value "0.0" -objects $obj
set_property -name "enable_optional_runs_sta" -value "0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "generate_ip_upgrade_log" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_interface_inference_priority" -value "" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "legacy_ip_repo_paths" -value "" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xczu29dr-ffvf1760-1-e" -objects $obj
set_property -name "project_type" -value "Default" -objects $obj
set_property -name "pr_flow" -value "0" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "sim.use_ip_compiled_libs" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "source_mgmt_mode" -value "All" -objects $obj
set_property -name "target_language" -value "Verilog" -objects $obj
set_property -name "target_simulator" -value "XSim" -objects $obj
set_property -name "tool_flow" -value "Vivado" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj
set_property -name "xsim.array_display_limit" -value "1024" -objects $obj
set_property -name "xsim.radix" -value "hex" -objects $obj
set_property -name "xsim.time_unit" -value "ns" -objects $obj
set_property -name "xsim.trace_limit" -value "65536" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set IP repository paths
set obj [get_filesets sources_1]
set_property "ip_repo_paths" "[file normalize "$origin_dir/../../../ip_repos"]" $obj

# Rebuild user ip_repo's index before adding any source files
update_ip_catalog -rebuild

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/sync.v"] \
 [file normalize "${origin_dir}/../../../proto_ip_code/axi_dma_connector/axi_dma_connector.v"] \
 [file normalize "${origin_dir}/../../../common_source/led_chika.v"] \
 [file normalize "${origin_dir}/spi_ladc_customif.v"] \
 [file normalize "${origin_dir}/iic_cdci6214_customif.v"] \
 [file normalize "${origin_dir}/../../../proto_ip_code/peripheral_controler/peripheral_controler.v"] \
 [file normalize "${origin_dir}/mogura2_fee_wrapper.v"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/sync.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation simulation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_simulation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj

set file "$origin_dir/../../../proto_ip_code/axi_dma_connector/axi_dma_connector.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation simulation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_simulation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj

set file "$origin_dir/../../../common_source/led_chika.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation simulation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_simulation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj

set file "$origin_dir/spi_ladc_customif.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation simulation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_simulation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj

set file "$origin_dir/iic_cdci6214_customif.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation simulation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_simulation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj

set file "$origin_dir/../../../proto_ip_code/peripheral_controler/peripheral_controler.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation simulation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_simulation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj

set file "$origin_dir/mogura2_fee_wrapper.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation simulation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_simulation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "design_mode" -value "RTL" -objects $obj
set_property -name "edif_extra_search_paths" -value "" -objects $obj
set_property -name "elab_link_dcps" -value "1" -objects $obj
set_property -name "elab_load_timing_constraints" -value "1" -objects $obj
set_property -name "generic" -value "" -objects $obj
set_property -name "include_dirs" -value "" -objects $obj
set_property -name "lib_map_file" -value "" -objects $obj
set_property -name "loop_count" -value "1000" -objects $obj
set_property -name "name" -value "sources_1" -objects $obj
set_property -name "top" -value "mogura2_fee_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "verilog_define" -value "" -objects $obj
set_property -name "verilog_uppercase" -value "0" -objects $obj
set_property -name "verilog_version" -value "verilog_2001" -objects $obj
set_property -name "vhdl_version" -value "vhdl_2k" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/mogura2_fee_constraints.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/mogura2_fee_constraints.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "is_enabled" -value "1" -objects $file_obj
set_property -name "is_global_include" -value "0" -objects $file_obj
set_property -name "library" -value "xil_defaultlib" -objects $file_obj
set_property -name "path_mode" -value "RelativeFirst" -objects $file_obj
set_property -name "processing_order" -value "NORMAL" -objects $file_obj
set_property -name "scoped_to_cells" -value "" -objects $file_obj
set_property -name "scoped_to_ref" -value "" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_implementation" -value "1" -objects $file_obj
set_property -name "used_in_synthesis" -value "1" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "constrs_type" -value "XDC" -objects $obj
set_property -name "name" -value "constrs_1" -objects $obj
set_property -name "target_constrs_file" -value "[file normalize "$origin_dir/mogura2_fee_constraints.xdc"]" -objects $obj
set_property -name "target_part" -value "xczu29dr-ffvf1760-1-e" -objects $obj
set_property -name "target_ucf" -value "[file normalize "$origin_dir/mogura2_fee_constraints.xdc"]" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "32bit" -value "0" -objects $obj
set_property -name "generic" -value "" -objects $obj
set_property -name "include_dirs" -value "" -objects $obj
set_property -name "incremental" -value "1" -objects $obj
set_property -name "name" -value "sim_1" -objects $obj
set_property -name "nl.cell" -value "" -objects $obj
set_property -name "nl.incl_unisim_models" -value "0" -objects $obj
set_property -name "nl.process_corner" -value "slow" -objects $obj
set_property -name "nl.rename_top" -value "" -objects $obj
set_property -name "nl.sdf_anno" -value "1" -objects $obj
set_property -name "nl.write_all_overrides" -value "0" -objects $obj
set_property -name "source_set" -value "sources_1" -objects $obj
set_property -name "systemc_include_dirs" -value "" -objects $obj
set_property -name "top" -value "mogura2_fee_wrapper" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
set_property -name "transport_int_delay" -value "0" -objects $obj
set_property -name "transport_path_delay" -value "0" -objects $obj
set_property -name "verilog_define" -value "" -objects $obj
set_property -name "verilog_uppercase" -value "0" -objects $obj
set_property -name "xelab.dll" -value "0" -objects $obj
set_property -name "xsim.compile.tcl.pre" -value "" -objects $obj
set_property -name "xsim.compile.xsc.more_options" -value "" -objects $obj
set_property -name "xsim.compile.xvhdl.more_options" -value "" -objects $obj
set_property -name "xsim.compile.xvhdl.nosort" -value "1" -objects $obj
set_property -name "xsim.compile.xvhdl.relax" -value "1" -objects $obj
set_property -name "xsim.compile.xvlog.more_options" -value "" -objects $obj
set_property -name "xsim.compile.xvlog.nosort" -value "1" -objects $obj
set_property -name "xsim.compile.xvlog.relax" -value "1" -objects $obj
set_property -name "xsim.elaborate.debug_level" -value "typical" -objects $obj
set_property -name "xsim.elaborate.load_glbl" -value "1" -objects $obj
set_property -name "xsim.elaborate.mt_level" -value "auto" -objects $obj
set_property -name "xsim.elaborate.rangecheck" -value "0" -objects $obj
set_property -name "xsim.elaborate.relax" -value "1" -objects $obj
set_property -name "xsim.elaborate.sdf_delay" -value "sdfmax" -objects $obj
set_property -name "xsim.elaborate.snapshot" -value "" -objects $obj
set_property -name "xsim.elaborate.xelab.more_options" -value "" -objects $obj
set_property -name "xsim.elaborate.xsc.more_options" -value "" -objects $obj
set_property -name "xsim.simulate.add_positional" -value "0" -objects $obj
set_property -name "xsim.simulate.custom_tcl" -value "" -objects $obj
set_property -name "xsim.simulate.log_all_signals" -value "0" -objects $obj
set_property -name "xsim.simulate.no_quit" -value "0" -objects $obj
set_property -name "xsim.simulate.runtime" -value "1000ns" -objects $obj
set_property -name "xsim.simulate.saif" -value "" -objects $obj
set_property -name "xsim.simulate.saif_all_signals" -value "0" -objects $obj
set_property -name "xsim.simulate.saif_scope" -value "" -objects $obj
set_property -name "xsim.simulate.tcl.post" -value "" -objects $obj
set_property -name "xsim.simulate.wdb" -value "" -objects $obj
set_property -name "xsim.simulate.xsim.more_options" -value "" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]
set_property -name "name" -value "utils_1" -objects $obj


# Adding sources referenced in BDs, if not already added
if { [get_files sync.v] == "" } {
  import_files -quiet -fileset sources_1 E:/KRD/project_tcl/MoGURA2_PROTOTYPE/MoGURA2_FEE/sync.v
}
if { [get_files sync.v] == "" } {
  import_files -quiet -fileset sources_1 E:/KRD/project_tcl/MoGURA2_PROTOTYPE/MoGURA2_FEE/sync.v
}
if { [get_files sync.v] == "" } {
  import_files -quiet -fileset sources_1 E:/KRD/project_tcl/MoGURA2_PROTOTYPE/MoGURA2_FEE/sync.v
}
if { [get_files axi_dma_connector.v] == "" } {
  import_files -quiet -fileset sources_1 E:/KRD/proto_ip_code/axi_dma_connector/axi_dma_connector.v
}
if { [get_files led_chika.v] == "" } {
  import_files -quiet -fileset sources_1 E:/KRD/common_source/led_chika.v
}
if { [get_files led_chika.v] == "" } {
  import_files -quiet -fileset sources_1 E:/KRD/common_source/led_chika.v
}
if { [get_files spi_ladc_customif.v] == "" } {
  import_files -quiet -fileset sources_1 E:/KRD/project_tcl/MoGURA2_PROTOTYPE/MoGURA2_FEE/spi_ladc_customif.v
}
if { [get_files iic_cdci6214_customif.v] == "" } {
  import_files -quiet -fileset sources_1 E:/KRD/project_tcl/MoGURA2_PROTOTYPE/MoGURA2_FEE/iic_cdci6214_customif.v
}
if { [get_files peripheral_controler.v] == "" } {
  import_files -quiet -fileset sources_1 E:/KRD/proto_ip_code/peripheral_controler/peripheral_controler.v
}
if { [get_files led_chika.v] == "" } {
  import_files -quiet -fileset sources_1 E:/KRD/common_source/led_chika.v
}


# Proc to create BD mogura2_fee
proc cr_bd_mogura2_fee { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# axi_dma_connector, led_chika, led_chika, led_chika, sync, sync, sync, iic_cdci6214_customif, peripheral_controler, spi_ladc_customif



  # CHANGE DESIGN NAME HERE
  set design_name mogura2_fee

  common::send_msg_id "BD_TCL-003" "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:axi_bram_ctrl:4.1\
  xilinx.com:ip:axi_dma:7.1\
  xilinx.com:ip:axi_gpio:2.0\
  xilinx.com:ip:smartconnect:1.0\
  xilinx.com:ip:blk_mem_gen:8.4\
  xilinx.com:ip:proc_sys_reset:5.0\
  xilinx.com:ip:xlconcat:2.1\
  xilinx.com:ip:system_ila:1.1\
  xilinx.com:ip:util_reduced_logic:2.0\
  xilinx.com:ip:zynq_ultra_ps_e:3.3\
  awa.tohoku.ac.jp:mogura2:async_pl_ddr_mmu:1.1\
  xilinx.com:ip:axi_datamover:5.1\
  xilinx.com:ip:axis_dwidth_converter:1.1\
  xilinx.com:ip:c_counter_binary:12.0\
  awa.tohoku.ac.jp:mogura2:trigger_configrator:1.0\
  xilinx.com:ip:util_vector_logic:2.0\
  xilinx.com:ip:clk_wiz:6.0\
  xilinx.com:ip:util_ds_buf:2.1\
  xilinx.com:ip:xlconstant:1.1\
  xilinx.com:ip:axi_iic:2.0\
  xilinx.com:ip:axi_quad_spi:3.2\
  xilinx.com:ip:system_management_wiz:1.3\
  xilinx.com:ip:usp_rf_data_converter:2.1\
  awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1\
  awa.tohoku.ac.jp:mogura2:control_distributer:1.0\
  awa.tohoku.ac.jp:mogura2:data_trigger:1.0\
  awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0\
  awa.tohoku.ac.jp:mogura2:trigger_selector:1.0\
  teldevice.local:user:ADC_IF_TEST:1.0\
  xilinx.com:ip:vio:3.0\
  teldevice.local:user:ADC_IF_TEST_1:1.0\
  teldevice.local:user:ADC_IF_TEST_2:1.0\
  teldevice.local:user:ADC_IF_TEST_3:1.0\
  xilinx.com:ip:axis_clock_converter:1.1\
  xilinx.com:ip:fifo_generator:13.2\
  xilinx.com:ip:xlslice:1.0\
  "

   set list_ips_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  axi_dma_connector\
  led_chika\
  led_chika\
  led_chika\
  sync\
  sync\
  sync\
  iic_cdci6214_customif\
  peripheral_controler\
  spi_ladc_customif\
  "

   set list_mods_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_msg_id "BD_TCL-008" "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_msg_id "BD_TCL-1003" "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  
# Hierarchical cell: hier_3
proc create_hier_cell_hier_3_3 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hier_3_3() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 Din
  create_bd_pin -dir O -from 31 -to 0 dout_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {32} \
 ] $xlconcat_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {9} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create instance: xlslice_10, and set properties
  set xlslice_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {10} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_10

  # Create instance: xlslice_11, and set properties
  set xlslice_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_11 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {11} \
   CONFIG.DIN_TO {11} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_11

  # Create instance: xlslice_12, and set properties
  set xlslice_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_12 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {12} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_12

  # Create instance: xlslice_13, and set properties
  set xlslice_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_13 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {13} \
   CONFIG.DIN_TO {13} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_13

  # Create instance: xlslice_14, and set properties
  set xlslice_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_14 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {14} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_14

  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {15} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_15

  # Create instance: xlslice_16, and set properties
  set xlslice_16 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_16 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_16

  # Create instance: xlslice_17, and set properties
  set xlslice_17 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_17 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_17

  # Create instance: xlslice_18, and set properties
  set xlslice_18 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_18 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_18

  # Create instance: xlslice_19, and set properties
  set xlslice_19 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_19 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {19} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_19

  # Create instance: xlslice_20, and set properties
  set xlslice_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_20 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {20} \
   CONFIG.DIN_TO {20} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_20

  # Create instance: xlslice_21, and set properties
  set xlslice_21 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_21 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {21} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_21

  # Create instance: xlslice_22, and set properties
  set xlslice_22 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_22 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {22} \
   CONFIG.DIN_TO {22} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_22

  # Create instance: xlslice_23, and set properties
  set xlslice_23 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_23 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {23} \
   CONFIG.DIN_TO {23} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_23

  # Create instance: xlslice_24, and set properties
  set xlslice_24 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_24 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {24} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_24

  # Create instance: xlslice_25, and set properties
  set xlslice_25 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_25 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_25

  # Create instance: xlslice_26, and set properties
  set xlslice_26 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_26 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {26} \
   CONFIG.DIN_TO {26} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_26

  # Create instance: xlslice_27, and set properties
  set xlslice_27 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_27 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {27} \
   CONFIG.DIN_TO {27} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_27

  # Create instance: xlslice_28, and set properties
  set xlslice_28 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_28 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {28} \
   CONFIG.DIN_TO {28} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_28

  # Create instance: xlslice_29, and set properties
  set xlslice_29 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_29 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {29} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_29

  # Create instance: xlslice_30, and set properties
  set xlslice_30 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_30 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {30} \
   CONFIG.DIN_TO {30} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_30

  # Create instance: xlslice_31, and set properties
  set xlslice_31 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_31 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {31} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_31

  # Create port connections
  connect_bd_net -net xlconcat_0_dout [get_bd_pins Din] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_10/Din] [get_bd_pins xlslice_11/Din] [get_bd_pins xlslice_12/Din] [get_bd_pins xlslice_13/Din] [get_bd_pins xlslice_14/Din] [get_bd_pins xlslice_15/Din] [get_bd_pins xlslice_16/Din] [get_bd_pins xlslice_17/Din] [get_bd_pins xlslice_18/Din] [get_bd_pins xlslice_19/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_20/Din] [get_bd_pins xlslice_21/Din] [get_bd_pins xlslice_22/Din] [get_bd_pins xlslice_23/Din] [get_bd_pins xlslice_24/Din] [get_bd_pins xlslice_25/Din] [get_bd_pins xlslice_26/Din] [get_bd_pins xlslice_27/Din] [get_bd_pins xlslice_28/Din] [get_bd_pins xlslice_29/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_30/Din] [get_bd_pins xlslice_31/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net xlconcat_0_dout1 [get_bd_pins dout_0] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlconcat_0/In12] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_10_Dout [get_bd_pins xlconcat_0/In5] [get_bd_pins xlslice_10/Dout]
  connect_bd_net -net xlslice_11_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_11/Dout]
  connect_bd_net -net xlslice_12_Dout [get_bd_pins xlconcat_0/In29] [get_bd_pins xlslice_12/Dout]
  connect_bd_net -net xlslice_13_Dout [get_bd_pins xlconcat_0/In25] [get_bd_pins xlslice_13/Dout]
  connect_bd_net -net xlslice_14_Dout [get_bd_pins xlconcat_0/In21] [get_bd_pins xlslice_14/Dout]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins xlconcat_0/In17] [get_bd_pins xlslice_15/Dout]
  connect_bd_net -net xlslice_16_Dout [get_bd_pins xlconcat_0/In14] [get_bd_pins xlslice_16/Dout]
  connect_bd_net -net xlslice_17_Dout [get_bd_pins xlconcat_0/In10] [get_bd_pins xlslice_17/Dout]
  connect_bd_net -net xlslice_18_Dout [get_bd_pins xlconcat_0/In6] [get_bd_pins xlslice_18/Dout]
  connect_bd_net -net xlslice_19_Dout [get_bd_pins xlconcat_0/In2] [get_bd_pins xlslice_19/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlconcat_0/In8] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_20_Dout [get_bd_pins xlconcat_0/In30] [get_bd_pins xlslice_20/Dout]
  connect_bd_net -net xlslice_21_Dout [get_bd_pins xlconcat_0/In26] [get_bd_pins xlslice_21/Dout]
  connect_bd_net -net xlslice_22_Dout [get_bd_pins xlconcat_0/In22] [get_bd_pins xlslice_22/Dout]
  connect_bd_net -net xlslice_23_Dout [get_bd_pins xlconcat_0/In18] [get_bd_pins xlslice_23/Dout]
  connect_bd_net -net xlslice_24_Dout [get_bd_pins xlconcat_0/In15] [get_bd_pins xlslice_24/Dout]
  connect_bd_net -net xlslice_25_Dout [get_bd_pins xlconcat_0/In11] [get_bd_pins xlslice_25/Dout]
  connect_bd_net -net xlslice_26_Dout [get_bd_pins xlconcat_0/In7] [get_bd_pins xlslice_26/Dout]
  connect_bd_net -net xlslice_27_Dout [get_bd_pins xlconcat_0/In3] [get_bd_pins xlslice_27/Dout]
  connect_bd_net -net xlslice_28_Dout [get_bd_pins xlconcat_0/In31] [get_bd_pins xlslice_28/Dout]
  connect_bd_net -net xlslice_29_Dout [get_bd_pins xlconcat_0/In27] [get_bd_pins xlslice_29/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlconcat_0/In4] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_30_Dout [get_bd_pins xlconcat_0/In23] [get_bd_pins xlslice_30/Dout]
  connect_bd_net -net xlslice_31_Dout [get_bd_pins xlconcat_0/In19] [get_bd_pins xlslice_31/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlconcat_0/In0] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlconcat_0/In28] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins xlconcat_0/In24] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins xlconcat_0/In20] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlconcat_0/In16] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_0/In13] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlconcat_0/In9] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hier_1
proc create_hier_cell_hier_1_3 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hier_1_3() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 Din
  create_bd_pin -dir O -from 31 -to 0 dout_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {32} \
 ] $xlconcat_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {9} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create instance: xlslice_10, and set properties
  set xlslice_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {10} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_10

  # Create instance: xlslice_11, and set properties
  set xlslice_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_11 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {11} \
   CONFIG.DIN_TO {11} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_11

  # Create instance: xlslice_12, and set properties
  set xlslice_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_12 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {12} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_12

  # Create instance: xlslice_13, and set properties
  set xlslice_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_13 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {13} \
   CONFIG.DIN_TO {13} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_13

  # Create instance: xlslice_14, and set properties
  set xlslice_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_14 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {14} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_14

  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {15} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_15

  # Create instance: xlslice_16, and set properties
  set xlslice_16 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_16 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_16

  # Create instance: xlslice_17, and set properties
  set xlslice_17 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_17 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_17

  # Create instance: xlslice_18, and set properties
  set xlslice_18 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_18 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_18

  # Create instance: xlslice_19, and set properties
  set xlslice_19 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_19 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {19} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_19

  # Create instance: xlslice_20, and set properties
  set xlslice_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_20 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {20} \
   CONFIG.DIN_TO {20} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_20

  # Create instance: xlslice_21, and set properties
  set xlslice_21 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_21 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {21} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_21

  # Create instance: xlslice_22, and set properties
  set xlslice_22 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_22 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {22} \
   CONFIG.DIN_TO {22} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_22

  # Create instance: xlslice_23, and set properties
  set xlslice_23 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_23 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {23} \
   CONFIG.DIN_TO {23} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_23

  # Create instance: xlslice_24, and set properties
  set xlslice_24 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_24 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {24} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_24

  # Create instance: xlslice_25, and set properties
  set xlslice_25 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_25 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_25

  # Create instance: xlslice_26, and set properties
  set xlslice_26 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_26 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {26} \
   CONFIG.DIN_TO {26} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_26

  # Create instance: xlslice_27, and set properties
  set xlslice_27 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_27 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {27} \
   CONFIG.DIN_TO {27} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_27

  # Create instance: xlslice_28, and set properties
  set xlslice_28 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_28 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {28} \
   CONFIG.DIN_TO {28} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_28

  # Create instance: xlslice_29, and set properties
  set xlslice_29 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_29 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {29} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_29

  # Create instance: xlslice_30, and set properties
  set xlslice_30 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_30 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {30} \
   CONFIG.DIN_TO {30} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_30

  # Create instance: xlslice_31, and set properties
  set xlslice_31 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_31 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {31} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_31

  # Create port connections
  connect_bd_net -net xlconcat_0_dout [get_bd_pins Din] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_10/Din] [get_bd_pins xlslice_11/Din] [get_bd_pins xlslice_12/Din] [get_bd_pins xlslice_13/Din] [get_bd_pins xlslice_14/Din] [get_bd_pins xlslice_15/Din] [get_bd_pins xlslice_16/Din] [get_bd_pins xlslice_17/Din] [get_bd_pins xlslice_18/Din] [get_bd_pins xlslice_19/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_20/Din] [get_bd_pins xlslice_21/Din] [get_bd_pins xlslice_22/Din] [get_bd_pins xlslice_23/Din] [get_bd_pins xlslice_24/Din] [get_bd_pins xlslice_25/Din] [get_bd_pins xlslice_26/Din] [get_bd_pins xlslice_27/Din] [get_bd_pins xlslice_28/Din] [get_bd_pins xlslice_29/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_30/Din] [get_bd_pins xlslice_31/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net xlconcat_0_dout1 [get_bd_pins dout_0] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlconcat_0/In12] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_10_Dout [get_bd_pins xlconcat_0/In5] [get_bd_pins xlslice_10/Dout]
  connect_bd_net -net xlslice_11_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_11/Dout]
  connect_bd_net -net xlslice_12_Dout [get_bd_pins xlconcat_0/In29] [get_bd_pins xlslice_12/Dout]
  connect_bd_net -net xlslice_13_Dout [get_bd_pins xlconcat_0/In25] [get_bd_pins xlslice_13/Dout]
  connect_bd_net -net xlslice_14_Dout [get_bd_pins xlconcat_0/In21] [get_bd_pins xlslice_14/Dout]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins xlconcat_0/In17] [get_bd_pins xlslice_15/Dout]
  connect_bd_net -net xlslice_16_Dout [get_bd_pins xlconcat_0/In14] [get_bd_pins xlslice_16/Dout]
  connect_bd_net -net xlslice_17_Dout [get_bd_pins xlconcat_0/In10] [get_bd_pins xlslice_17/Dout]
  connect_bd_net -net xlslice_18_Dout [get_bd_pins xlconcat_0/In6] [get_bd_pins xlslice_18/Dout]
  connect_bd_net -net xlslice_19_Dout [get_bd_pins xlconcat_0/In2] [get_bd_pins xlslice_19/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlconcat_0/In8] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_20_Dout [get_bd_pins xlconcat_0/In30] [get_bd_pins xlslice_20/Dout]
  connect_bd_net -net xlslice_21_Dout [get_bd_pins xlconcat_0/In26] [get_bd_pins xlslice_21/Dout]
  connect_bd_net -net xlslice_22_Dout [get_bd_pins xlconcat_0/In22] [get_bd_pins xlslice_22/Dout]
  connect_bd_net -net xlslice_23_Dout [get_bd_pins xlconcat_0/In18] [get_bd_pins xlslice_23/Dout]
  connect_bd_net -net xlslice_24_Dout [get_bd_pins xlconcat_0/In15] [get_bd_pins xlslice_24/Dout]
  connect_bd_net -net xlslice_25_Dout [get_bd_pins xlconcat_0/In11] [get_bd_pins xlslice_25/Dout]
  connect_bd_net -net xlslice_26_Dout [get_bd_pins xlconcat_0/In7] [get_bd_pins xlslice_26/Dout]
  connect_bd_net -net xlslice_27_Dout [get_bd_pins xlconcat_0/In3] [get_bd_pins xlslice_27/Dout]
  connect_bd_net -net xlslice_28_Dout [get_bd_pins xlconcat_0/In31] [get_bd_pins xlslice_28/Dout]
  connect_bd_net -net xlslice_29_Dout [get_bd_pins xlconcat_0/In27] [get_bd_pins xlslice_29/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlconcat_0/In4] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_30_Dout [get_bd_pins xlconcat_0/In23] [get_bd_pins xlslice_30/Dout]
  connect_bd_net -net xlslice_31_Dout [get_bd_pins xlconcat_0/In19] [get_bd_pins xlslice_31/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlconcat_0/In0] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlconcat_0/In28] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins xlconcat_0/In24] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins xlconcat_0/In20] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlconcat_0/In16] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_0/In13] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlconcat_0/In9] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hier_2
proc create_hier_cell_hier_2_3 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hier_2_3() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 Din
  create_bd_pin -dir O -from 31 -to 0 dout_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {32} \
 ] $xlconcat_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {9} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create instance: xlslice_10, and set properties
  set xlslice_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {10} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_10

  # Create instance: xlslice_11, and set properties
  set xlslice_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_11 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {11} \
   CONFIG.DIN_TO {11} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_11

  # Create instance: xlslice_12, and set properties
  set xlslice_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_12 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {12} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_12

  # Create instance: xlslice_13, and set properties
  set xlslice_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_13 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {13} \
   CONFIG.DIN_TO {13} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_13

  # Create instance: xlslice_14, and set properties
  set xlslice_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_14 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {14} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_14

  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {15} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_15

  # Create instance: xlslice_16, and set properties
  set xlslice_16 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_16 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_16

  # Create instance: xlslice_17, and set properties
  set xlslice_17 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_17 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_17

  # Create instance: xlslice_18, and set properties
  set xlslice_18 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_18 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_18

  # Create instance: xlslice_19, and set properties
  set xlslice_19 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_19 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {19} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_19

  # Create instance: xlslice_20, and set properties
  set xlslice_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_20 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {20} \
   CONFIG.DIN_TO {20} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_20

  # Create instance: xlslice_21, and set properties
  set xlslice_21 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_21 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {21} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_21

  # Create instance: xlslice_22, and set properties
  set xlslice_22 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_22 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {22} \
   CONFIG.DIN_TO {22} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_22

  # Create instance: xlslice_23, and set properties
  set xlslice_23 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_23 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {23} \
   CONFIG.DIN_TO {23} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_23

  # Create instance: xlslice_24, and set properties
  set xlslice_24 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_24 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {24} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_24

  # Create instance: xlslice_25, and set properties
  set xlslice_25 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_25 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_25

  # Create instance: xlslice_26, and set properties
  set xlslice_26 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_26 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {26} \
   CONFIG.DIN_TO {26} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_26

  # Create instance: xlslice_27, and set properties
  set xlslice_27 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_27 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {27} \
   CONFIG.DIN_TO {27} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_27

  # Create instance: xlslice_28, and set properties
  set xlslice_28 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_28 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {28} \
   CONFIG.DIN_TO {28} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_28

  # Create instance: xlslice_29, and set properties
  set xlslice_29 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_29 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {29} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_29

  # Create instance: xlslice_30, and set properties
  set xlslice_30 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_30 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {30} \
   CONFIG.DIN_TO {30} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_30

  # Create instance: xlslice_31, and set properties
  set xlslice_31 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_31 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {31} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_31

  # Create port connections
  connect_bd_net -net xlconcat_0_dout [get_bd_pins Din] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_10/Din] [get_bd_pins xlslice_11/Din] [get_bd_pins xlslice_12/Din] [get_bd_pins xlslice_13/Din] [get_bd_pins xlslice_14/Din] [get_bd_pins xlslice_15/Din] [get_bd_pins xlslice_16/Din] [get_bd_pins xlslice_17/Din] [get_bd_pins xlslice_18/Din] [get_bd_pins xlslice_19/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_20/Din] [get_bd_pins xlslice_21/Din] [get_bd_pins xlslice_22/Din] [get_bd_pins xlslice_23/Din] [get_bd_pins xlslice_24/Din] [get_bd_pins xlslice_25/Din] [get_bd_pins xlslice_26/Din] [get_bd_pins xlslice_27/Din] [get_bd_pins xlslice_28/Din] [get_bd_pins xlslice_29/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_30/Din] [get_bd_pins xlslice_31/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net xlconcat_0_dout1 [get_bd_pins dout_0] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlconcat_0/In12] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_10_Dout [get_bd_pins xlconcat_0/In5] [get_bd_pins xlslice_10/Dout]
  connect_bd_net -net xlslice_11_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_11/Dout]
  connect_bd_net -net xlslice_12_Dout [get_bd_pins xlconcat_0/In29] [get_bd_pins xlslice_12/Dout]
  connect_bd_net -net xlslice_13_Dout [get_bd_pins xlconcat_0/In25] [get_bd_pins xlslice_13/Dout]
  connect_bd_net -net xlslice_14_Dout [get_bd_pins xlconcat_0/In21] [get_bd_pins xlslice_14/Dout]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins xlconcat_0/In17] [get_bd_pins xlslice_15/Dout]
  connect_bd_net -net xlslice_16_Dout [get_bd_pins xlconcat_0/In14] [get_bd_pins xlslice_16/Dout]
  connect_bd_net -net xlslice_17_Dout [get_bd_pins xlconcat_0/In10] [get_bd_pins xlslice_17/Dout]
  connect_bd_net -net xlslice_18_Dout [get_bd_pins xlconcat_0/In6] [get_bd_pins xlslice_18/Dout]
  connect_bd_net -net xlslice_19_Dout [get_bd_pins xlconcat_0/In2] [get_bd_pins xlslice_19/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlconcat_0/In8] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_20_Dout [get_bd_pins xlconcat_0/In30] [get_bd_pins xlslice_20/Dout]
  connect_bd_net -net xlslice_21_Dout [get_bd_pins xlconcat_0/In26] [get_bd_pins xlslice_21/Dout]
  connect_bd_net -net xlslice_22_Dout [get_bd_pins xlconcat_0/In22] [get_bd_pins xlslice_22/Dout]
  connect_bd_net -net xlslice_23_Dout [get_bd_pins xlconcat_0/In18] [get_bd_pins xlslice_23/Dout]
  connect_bd_net -net xlslice_24_Dout [get_bd_pins xlconcat_0/In15] [get_bd_pins xlslice_24/Dout]
  connect_bd_net -net xlslice_25_Dout [get_bd_pins xlconcat_0/In11] [get_bd_pins xlslice_25/Dout]
  connect_bd_net -net xlslice_26_Dout [get_bd_pins xlconcat_0/In7] [get_bd_pins xlslice_26/Dout]
  connect_bd_net -net xlslice_27_Dout [get_bd_pins xlconcat_0/In3] [get_bd_pins xlslice_27/Dout]
  connect_bd_net -net xlslice_28_Dout [get_bd_pins xlconcat_0/In31] [get_bd_pins xlslice_28/Dout]
  connect_bd_net -net xlslice_29_Dout [get_bd_pins xlconcat_0/In27] [get_bd_pins xlslice_29/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlconcat_0/In4] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_30_Dout [get_bd_pins xlconcat_0/In23] [get_bd_pins xlslice_30/Dout]
  connect_bd_net -net xlslice_31_Dout [get_bd_pins xlconcat_0/In19] [get_bd_pins xlslice_31/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlconcat_0/In0] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlconcat_0/In28] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins xlconcat_0/In24] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins xlconcat_0/In20] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlconcat_0/In16] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_0/In13] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlconcat_0/In9] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hier_0
proc create_hier_cell_hier_0_3 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hier_0_3() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 Din
  create_bd_pin -dir O -from 31 -to 0 dout_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {32} \
 ] $xlconcat_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {9} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create instance: xlslice_10, and set properties
  set xlslice_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {10} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_10

  # Create instance: xlslice_11, and set properties
  set xlslice_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_11 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {11} \
   CONFIG.DIN_TO {11} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_11

  # Create instance: xlslice_12, and set properties
  set xlslice_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_12 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {12} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_12

  # Create instance: xlslice_13, and set properties
  set xlslice_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_13 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {13} \
   CONFIG.DIN_TO {13} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_13

  # Create instance: xlslice_14, and set properties
  set xlslice_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_14 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {14} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_14

  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {15} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_15

  # Create instance: xlslice_16, and set properties
  set xlslice_16 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_16 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_16

  # Create instance: xlslice_17, and set properties
  set xlslice_17 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_17 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_17

  # Create instance: xlslice_18, and set properties
  set xlslice_18 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_18 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_18

  # Create instance: xlslice_19, and set properties
  set xlslice_19 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_19 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {19} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_19

  # Create instance: xlslice_20, and set properties
  set xlslice_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_20 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {20} \
   CONFIG.DIN_TO {20} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_20

  # Create instance: xlslice_21, and set properties
  set xlslice_21 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_21 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {21} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_21

  # Create instance: xlslice_22, and set properties
  set xlslice_22 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_22 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {22} \
   CONFIG.DIN_TO {22} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_22

  # Create instance: xlslice_23, and set properties
  set xlslice_23 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_23 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {23} \
   CONFIG.DIN_TO {23} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_23

  # Create instance: xlslice_24, and set properties
  set xlslice_24 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_24 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {24} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_24

  # Create instance: xlslice_25, and set properties
  set xlslice_25 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_25 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_25

  # Create instance: xlslice_26, and set properties
  set xlslice_26 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_26 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {26} \
   CONFIG.DIN_TO {26} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_26

  # Create instance: xlslice_27, and set properties
  set xlslice_27 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_27 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {27} \
   CONFIG.DIN_TO {27} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_27

  # Create instance: xlslice_28, and set properties
  set xlslice_28 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_28 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {28} \
   CONFIG.DIN_TO {28} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_28

  # Create instance: xlslice_29, and set properties
  set xlslice_29 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_29 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {29} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_29

  # Create instance: xlslice_30, and set properties
  set xlslice_30 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_30 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {30} \
   CONFIG.DIN_TO {30} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_30

  # Create instance: xlslice_31, and set properties
  set xlslice_31 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_31 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {31} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_31

  # Create port connections
  connect_bd_net -net xlconcat_0_dout [get_bd_pins Din] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_10/Din] [get_bd_pins xlslice_11/Din] [get_bd_pins xlslice_12/Din] [get_bd_pins xlslice_13/Din] [get_bd_pins xlslice_14/Din] [get_bd_pins xlslice_15/Din] [get_bd_pins xlslice_16/Din] [get_bd_pins xlslice_17/Din] [get_bd_pins xlslice_18/Din] [get_bd_pins xlslice_19/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_20/Din] [get_bd_pins xlslice_21/Din] [get_bd_pins xlslice_22/Din] [get_bd_pins xlslice_23/Din] [get_bd_pins xlslice_24/Din] [get_bd_pins xlslice_25/Din] [get_bd_pins xlslice_26/Din] [get_bd_pins xlslice_27/Din] [get_bd_pins xlslice_28/Din] [get_bd_pins xlslice_29/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_30/Din] [get_bd_pins xlslice_31/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net xlconcat_0_dout1 [get_bd_pins dout_0] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlconcat_0/In12] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_10_Dout [get_bd_pins xlconcat_0/In5] [get_bd_pins xlslice_10/Dout]
  connect_bd_net -net xlslice_11_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_11/Dout]
  connect_bd_net -net xlslice_12_Dout [get_bd_pins xlconcat_0/In29] [get_bd_pins xlslice_12/Dout]
  connect_bd_net -net xlslice_13_Dout [get_bd_pins xlconcat_0/In25] [get_bd_pins xlslice_13/Dout]
  connect_bd_net -net xlslice_14_Dout [get_bd_pins xlconcat_0/In21] [get_bd_pins xlslice_14/Dout]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins xlconcat_0/In17] [get_bd_pins xlslice_15/Dout]
  connect_bd_net -net xlslice_16_Dout [get_bd_pins xlconcat_0/In14] [get_bd_pins xlslice_16/Dout]
  connect_bd_net -net xlslice_17_Dout [get_bd_pins xlconcat_0/In10] [get_bd_pins xlslice_17/Dout]
  connect_bd_net -net xlslice_18_Dout [get_bd_pins xlconcat_0/In6] [get_bd_pins xlslice_18/Dout]
  connect_bd_net -net xlslice_19_Dout [get_bd_pins xlconcat_0/In2] [get_bd_pins xlslice_19/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlconcat_0/In8] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_20_Dout [get_bd_pins xlconcat_0/In30] [get_bd_pins xlslice_20/Dout]
  connect_bd_net -net xlslice_21_Dout [get_bd_pins xlconcat_0/In26] [get_bd_pins xlslice_21/Dout]
  connect_bd_net -net xlslice_22_Dout [get_bd_pins xlconcat_0/In22] [get_bd_pins xlslice_22/Dout]
  connect_bd_net -net xlslice_23_Dout [get_bd_pins xlconcat_0/In18] [get_bd_pins xlslice_23/Dout]
  connect_bd_net -net xlslice_24_Dout [get_bd_pins xlconcat_0/In15] [get_bd_pins xlslice_24/Dout]
  connect_bd_net -net xlslice_25_Dout [get_bd_pins xlconcat_0/In11] [get_bd_pins xlslice_25/Dout]
  connect_bd_net -net xlslice_26_Dout [get_bd_pins xlconcat_0/In7] [get_bd_pins xlslice_26/Dout]
  connect_bd_net -net xlslice_27_Dout [get_bd_pins xlconcat_0/In3] [get_bd_pins xlslice_27/Dout]
  connect_bd_net -net xlslice_28_Dout [get_bd_pins xlconcat_0/In31] [get_bd_pins xlslice_28/Dout]
  connect_bd_net -net xlslice_29_Dout [get_bd_pins xlconcat_0/In27] [get_bd_pins xlslice_29/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlconcat_0/In4] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_30_Dout [get_bd_pins xlconcat_0/In23] [get_bd_pins xlslice_30/Dout]
  connect_bd_net -net xlslice_31_Dout [get_bd_pins xlconcat_0/In19] [get_bd_pins xlslice_31/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlconcat_0/In0] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlconcat_0/In28] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins xlconcat_0/In24] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins xlconcat_0/In20] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlconcat_0/In16] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_0/In13] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlconcat_0/In9] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hier_0
proc create_hier_cell_hier_0_2 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hier_0_2() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 Din
  create_bd_pin -dir O -from 31 -to 0 dout_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {32} \
 ] $xlconcat_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {9} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create instance: xlslice_10, and set properties
  set xlslice_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {10} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_10

  # Create instance: xlslice_11, and set properties
  set xlslice_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_11 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {11} \
   CONFIG.DIN_TO {11} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_11

  # Create instance: xlslice_12, and set properties
  set xlslice_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_12 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {12} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_12

  # Create instance: xlslice_13, and set properties
  set xlslice_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_13 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {13} \
   CONFIG.DIN_TO {13} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_13

  # Create instance: xlslice_14, and set properties
  set xlslice_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_14 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {14} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_14

  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {15} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_15

  # Create instance: xlslice_16, and set properties
  set xlslice_16 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_16 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_16

  # Create instance: xlslice_17, and set properties
  set xlslice_17 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_17 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_17

  # Create instance: xlslice_18, and set properties
  set xlslice_18 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_18 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_18

  # Create instance: xlslice_19, and set properties
  set xlslice_19 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_19 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {19} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_19

  # Create instance: xlslice_20, and set properties
  set xlslice_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_20 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {20} \
   CONFIG.DIN_TO {20} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_20

  # Create instance: xlslice_21, and set properties
  set xlslice_21 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_21 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {21} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_21

  # Create instance: xlslice_22, and set properties
  set xlslice_22 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_22 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {22} \
   CONFIG.DIN_TO {22} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_22

  # Create instance: xlslice_23, and set properties
  set xlslice_23 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_23 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {23} \
   CONFIG.DIN_TO {23} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_23

  # Create instance: xlslice_24, and set properties
  set xlslice_24 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_24 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {24} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_24

  # Create instance: xlslice_25, and set properties
  set xlslice_25 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_25 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_25

  # Create instance: xlslice_26, and set properties
  set xlslice_26 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_26 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {26} \
   CONFIG.DIN_TO {26} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_26

  # Create instance: xlslice_27, and set properties
  set xlslice_27 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_27 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {27} \
   CONFIG.DIN_TO {27} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_27

  # Create instance: xlslice_28, and set properties
  set xlslice_28 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_28 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {28} \
   CONFIG.DIN_TO {28} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_28

  # Create instance: xlslice_29, and set properties
  set xlslice_29 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_29 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {29} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_29

  # Create instance: xlslice_30, and set properties
  set xlslice_30 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_30 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {30} \
   CONFIG.DIN_TO {30} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_30

  # Create instance: xlslice_31, and set properties
  set xlslice_31 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_31 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {31} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_31

  # Create port connections
  connect_bd_net -net xlconcat_0_dout [get_bd_pins Din] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_10/Din] [get_bd_pins xlslice_11/Din] [get_bd_pins xlslice_12/Din] [get_bd_pins xlslice_13/Din] [get_bd_pins xlslice_14/Din] [get_bd_pins xlslice_15/Din] [get_bd_pins xlslice_16/Din] [get_bd_pins xlslice_17/Din] [get_bd_pins xlslice_18/Din] [get_bd_pins xlslice_19/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_20/Din] [get_bd_pins xlslice_21/Din] [get_bd_pins xlslice_22/Din] [get_bd_pins xlslice_23/Din] [get_bd_pins xlslice_24/Din] [get_bd_pins xlslice_25/Din] [get_bd_pins xlslice_26/Din] [get_bd_pins xlslice_27/Din] [get_bd_pins xlslice_28/Din] [get_bd_pins xlslice_29/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_30/Din] [get_bd_pins xlslice_31/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net xlconcat_0_dout1 [get_bd_pins dout_0] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlconcat_0/In12] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_10_Dout [get_bd_pins xlconcat_0/In5] [get_bd_pins xlslice_10/Dout]
  connect_bd_net -net xlslice_11_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_11/Dout]
  connect_bd_net -net xlslice_12_Dout [get_bd_pins xlconcat_0/In29] [get_bd_pins xlslice_12/Dout]
  connect_bd_net -net xlslice_13_Dout [get_bd_pins xlconcat_0/In25] [get_bd_pins xlslice_13/Dout]
  connect_bd_net -net xlslice_14_Dout [get_bd_pins xlconcat_0/In21] [get_bd_pins xlslice_14/Dout]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins xlconcat_0/In17] [get_bd_pins xlslice_15/Dout]
  connect_bd_net -net xlslice_16_Dout [get_bd_pins xlconcat_0/In14] [get_bd_pins xlslice_16/Dout]
  connect_bd_net -net xlslice_17_Dout [get_bd_pins xlconcat_0/In10] [get_bd_pins xlslice_17/Dout]
  connect_bd_net -net xlslice_18_Dout [get_bd_pins xlconcat_0/In6] [get_bd_pins xlslice_18/Dout]
  connect_bd_net -net xlslice_19_Dout [get_bd_pins xlconcat_0/In2] [get_bd_pins xlslice_19/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlconcat_0/In8] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_20_Dout [get_bd_pins xlconcat_0/In30] [get_bd_pins xlslice_20/Dout]
  connect_bd_net -net xlslice_21_Dout [get_bd_pins xlconcat_0/In26] [get_bd_pins xlslice_21/Dout]
  connect_bd_net -net xlslice_22_Dout [get_bd_pins xlconcat_0/In22] [get_bd_pins xlslice_22/Dout]
  connect_bd_net -net xlslice_23_Dout [get_bd_pins xlconcat_0/In18] [get_bd_pins xlslice_23/Dout]
  connect_bd_net -net xlslice_24_Dout [get_bd_pins xlconcat_0/In15] [get_bd_pins xlslice_24/Dout]
  connect_bd_net -net xlslice_25_Dout [get_bd_pins xlconcat_0/In11] [get_bd_pins xlslice_25/Dout]
  connect_bd_net -net xlslice_26_Dout [get_bd_pins xlconcat_0/In7] [get_bd_pins xlslice_26/Dout]
  connect_bd_net -net xlslice_27_Dout [get_bd_pins xlconcat_0/In3] [get_bd_pins xlslice_27/Dout]
  connect_bd_net -net xlslice_28_Dout [get_bd_pins xlconcat_0/In31] [get_bd_pins xlslice_28/Dout]
  connect_bd_net -net xlslice_29_Dout [get_bd_pins xlconcat_0/In27] [get_bd_pins xlslice_29/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlconcat_0/In4] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_30_Dout [get_bd_pins xlconcat_0/In23] [get_bd_pins xlslice_30/Dout]
  connect_bd_net -net xlslice_31_Dout [get_bd_pins xlconcat_0/In19] [get_bd_pins xlslice_31/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlconcat_0/In0] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlconcat_0/In28] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins xlconcat_0/In24] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins xlconcat_0/In20] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlconcat_0/In16] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_0/In13] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlconcat_0/In9] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hier_1
proc create_hier_cell_hier_1_2 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hier_1_2() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 Din
  create_bd_pin -dir O -from 31 -to 0 dout_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {32} \
 ] $xlconcat_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {9} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create instance: xlslice_10, and set properties
  set xlslice_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {10} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_10

  # Create instance: xlslice_11, and set properties
  set xlslice_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_11 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {11} \
   CONFIG.DIN_TO {11} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_11

  # Create instance: xlslice_12, and set properties
  set xlslice_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_12 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {12} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_12

  # Create instance: xlslice_13, and set properties
  set xlslice_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_13 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {13} \
   CONFIG.DIN_TO {13} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_13

  # Create instance: xlslice_14, and set properties
  set xlslice_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_14 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {14} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_14

  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {15} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_15

  # Create instance: xlslice_16, and set properties
  set xlslice_16 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_16 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_16

  # Create instance: xlslice_17, and set properties
  set xlslice_17 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_17 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_17

  # Create instance: xlslice_18, and set properties
  set xlslice_18 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_18 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_18

  # Create instance: xlslice_19, and set properties
  set xlslice_19 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_19 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {19} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_19

  # Create instance: xlslice_20, and set properties
  set xlslice_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_20 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {20} \
   CONFIG.DIN_TO {20} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_20

  # Create instance: xlslice_21, and set properties
  set xlslice_21 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_21 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {21} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_21

  # Create instance: xlslice_22, and set properties
  set xlslice_22 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_22 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {22} \
   CONFIG.DIN_TO {22} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_22

  # Create instance: xlslice_23, and set properties
  set xlslice_23 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_23 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {23} \
   CONFIG.DIN_TO {23} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_23

  # Create instance: xlslice_24, and set properties
  set xlslice_24 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_24 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {24} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_24

  # Create instance: xlslice_25, and set properties
  set xlslice_25 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_25 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_25

  # Create instance: xlslice_26, and set properties
  set xlslice_26 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_26 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {26} \
   CONFIG.DIN_TO {26} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_26

  # Create instance: xlslice_27, and set properties
  set xlslice_27 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_27 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {27} \
   CONFIG.DIN_TO {27} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_27

  # Create instance: xlslice_28, and set properties
  set xlslice_28 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_28 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {28} \
   CONFIG.DIN_TO {28} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_28

  # Create instance: xlslice_29, and set properties
  set xlslice_29 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_29 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {29} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_29

  # Create instance: xlslice_30, and set properties
  set xlslice_30 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_30 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {30} \
   CONFIG.DIN_TO {30} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_30

  # Create instance: xlslice_31, and set properties
  set xlslice_31 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_31 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {31} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_31

  # Create port connections
  connect_bd_net -net xlconcat_0_dout [get_bd_pins Din] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_10/Din] [get_bd_pins xlslice_11/Din] [get_bd_pins xlslice_12/Din] [get_bd_pins xlslice_13/Din] [get_bd_pins xlslice_14/Din] [get_bd_pins xlslice_15/Din] [get_bd_pins xlslice_16/Din] [get_bd_pins xlslice_17/Din] [get_bd_pins xlslice_18/Din] [get_bd_pins xlslice_19/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_20/Din] [get_bd_pins xlslice_21/Din] [get_bd_pins xlslice_22/Din] [get_bd_pins xlslice_23/Din] [get_bd_pins xlslice_24/Din] [get_bd_pins xlslice_25/Din] [get_bd_pins xlslice_26/Din] [get_bd_pins xlslice_27/Din] [get_bd_pins xlslice_28/Din] [get_bd_pins xlslice_29/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_30/Din] [get_bd_pins xlslice_31/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net xlconcat_0_dout1 [get_bd_pins dout_0] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlconcat_0/In12] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_10_Dout [get_bd_pins xlconcat_0/In5] [get_bd_pins xlslice_10/Dout]
  connect_bd_net -net xlslice_11_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_11/Dout]
  connect_bd_net -net xlslice_12_Dout [get_bd_pins xlconcat_0/In29] [get_bd_pins xlslice_12/Dout]
  connect_bd_net -net xlslice_13_Dout [get_bd_pins xlconcat_0/In25] [get_bd_pins xlslice_13/Dout]
  connect_bd_net -net xlslice_14_Dout [get_bd_pins xlconcat_0/In21] [get_bd_pins xlslice_14/Dout]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins xlconcat_0/In17] [get_bd_pins xlslice_15/Dout]
  connect_bd_net -net xlslice_16_Dout [get_bd_pins xlconcat_0/In14] [get_bd_pins xlslice_16/Dout]
  connect_bd_net -net xlslice_17_Dout [get_bd_pins xlconcat_0/In10] [get_bd_pins xlslice_17/Dout]
  connect_bd_net -net xlslice_18_Dout [get_bd_pins xlconcat_0/In6] [get_bd_pins xlslice_18/Dout]
  connect_bd_net -net xlslice_19_Dout [get_bd_pins xlconcat_0/In2] [get_bd_pins xlslice_19/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlconcat_0/In8] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_20_Dout [get_bd_pins xlconcat_0/In30] [get_bd_pins xlslice_20/Dout]
  connect_bd_net -net xlslice_21_Dout [get_bd_pins xlconcat_0/In26] [get_bd_pins xlslice_21/Dout]
  connect_bd_net -net xlslice_22_Dout [get_bd_pins xlconcat_0/In22] [get_bd_pins xlslice_22/Dout]
  connect_bd_net -net xlslice_23_Dout [get_bd_pins xlconcat_0/In18] [get_bd_pins xlslice_23/Dout]
  connect_bd_net -net xlslice_24_Dout [get_bd_pins xlconcat_0/In15] [get_bd_pins xlslice_24/Dout]
  connect_bd_net -net xlslice_25_Dout [get_bd_pins xlconcat_0/In11] [get_bd_pins xlslice_25/Dout]
  connect_bd_net -net xlslice_26_Dout [get_bd_pins xlconcat_0/In7] [get_bd_pins xlslice_26/Dout]
  connect_bd_net -net xlslice_27_Dout [get_bd_pins xlconcat_0/In3] [get_bd_pins xlslice_27/Dout]
  connect_bd_net -net xlslice_28_Dout [get_bd_pins xlconcat_0/In31] [get_bd_pins xlslice_28/Dout]
  connect_bd_net -net xlslice_29_Dout [get_bd_pins xlconcat_0/In27] [get_bd_pins xlslice_29/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlconcat_0/In4] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_30_Dout [get_bd_pins xlconcat_0/In23] [get_bd_pins xlslice_30/Dout]
  connect_bd_net -net xlslice_31_Dout [get_bd_pins xlconcat_0/In19] [get_bd_pins xlslice_31/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlconcat_0/In0] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlconcat_0/In28] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins xlconcat_0/In24] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins xlconcat_0/In20] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlconcat_0/In16] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_0/In13] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlconcat_0/In9] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hier_2
proc create_hier_cell_hier_2_2 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hier_2_2() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 Din
  create_bd_pin -dir O -from 31 -to 0 dout_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {32} \
 ] $xlconcat_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {9} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create instance: xlslice_10, and set properties
  set xlslice_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {10} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_10

  # Create instance: xlslice_11, and set properties
  set xlslice_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_11 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {11} \
   CONFIG.DIN_TO {11} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_11

  # Create instance: xlslice_12, and set properties
  set xlslice_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_12 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {12} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_12

  # Create instance: xlslice_13, and set properties
  set xlslice_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_13 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {13} \
   CONFIG.DIN_TO {13} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_13

  # Create instance: xlslice_14, and set properties
  set xlslice_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_14 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {14} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_14

  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {15} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_15

  # Create instance: xlslice_16, and set properties
  set xlslice_16 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_16 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_16

  # Create instance: xlslice_17, and set properties
  set xlslice_17 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_17 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_17

  # Create instance: xlslice_18, and set properties
  set xlslice_18 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_18 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_18

  # Create instance: xlslice_19, and set properties
  set xlslice_19 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_19 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {19} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_19

  # Create instance: xlslice_20, and set properties
  set xlslice_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_20 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {20} \
   CONFIG.DIN_TO {20} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_20

  # Create instance: xlslice_21, and set properties
  set xlslice_21 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_21 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {21} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_21

  # Create instance: xlslice_22, and set properties
  set xlslice_22 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_22 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {22} \
   CONFIG.DIN_TO {22} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_22

  # Create instance: xlslice_23, and set properties
  set xlslice_23 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_23 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {23} \
   CONFIG.DIN_TO {23} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_23

  # Create instance: xlslice_24, and set properties
  set xlslice_24 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_24 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {24} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_24

  # Create instance: xlslice_25, and set properties
  set xlslice_25 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_25 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_25

  # Create instance: xlslice_26, and set properties
  set xlslice_26 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_26 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {26} \
   CONFIG.DIN_TO {26} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_26

  # Create instance: xlslice_27, and set properties
  set xlslice_27 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_27 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {27} \
   CONFIG.DIN_TO {27} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_27

  # Create instance: xlslice_28, and set properties
  set xlslice_28 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_28 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {28} \
   CONFIG.DIN_TO {28} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_28

  # Create instance: xlslice_29, and set properties
  set xlslice_29 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_29 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {29} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_29

  # Create instance: xlslice_30, and set properties
  set xlslice_30 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_30 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {30} \
   CONFIG.DIN_TO {30} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_30

  # Create instance: xlslice_31, and set properties
  set xlslice_31 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_31 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {31} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_31

  # Create port connections
  connect_bd_net -net xlconcat_0_dout [get_bd_pins Din] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_10/Din] [get_bd_pins xlslice_11/Din] [get_bd_pins xlslice_12/Din] [get_bd_pins xlslice_13/Din] [get_bd_pins xlslice_14/Din] [get_bd_pins xlslice_15/Din] [get_bd_pins xlslice_16/Din] [get_bd_pins xlslice_17/Din] [get_bd_pins xlslice_18/Din] [get_bd_pins xlslice_19/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_20/Din] [get_bd_pins xlslice_21/Din] [get_bd_pins xlslice_22/Din] [get_bd_pins xlslice_23/Din] [get_bd_pins xlslice_24/Din] [get_bd_pins xlslice_25/Din] [get_bd_pins xlslice_26/Din] [get_bd_pins xlslice_27/Din] [get_bd_pins xlslice_28/Din] [get_bd_pins xlslice_29/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_30/Din] [get_bd_pins xlslice_31/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net xlconcat_0_dout1 [get_bd_pins dout_0] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlconcat_0/In12] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_10_Dout [get_bd_pins xlconcat_0/In5] [get_bd_pins xlslice_10/Dout]
  connect_bd_net -net xlslice_11_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_11/Dout]
  connect_bd_net -net xlslice_12_Dout [get_bd_pins xlconcat_0/In29] [get_bd_pins xlslice_12/Dout]
  connect_bd_net -net xlslice_13_Dout [get_bd_pins xlconcat_0/In25] [get_bd_pins xlslice_13/Dout]
  connect_bd_net -net xlslice_14_Dout [get_bd_pins xlconcat_0/In21] [get_bd_pins xlslice_14/Dout]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins xlconcat_0/In17] [get_bd_pins xlslice_15/Dout]
  connect_bd_net -net xlslice_16_Dout [get_bd_pins xlconcat_0/In14] [get_bd_pins xlslice_16/Dout]
  connect_bd_net -net xlslice_17_Dout [get_bd_pins xlconcat_0/In10] [get_bd_pins xlslice_17/Dout]
  connect_bd_net -net xlslice_18_Dout [get_bd_pins xlconcat_0/In6] [get_bd_pins xlslice_18/Dout]
  connect_bd_net -net xlslice_19_Dout [get_bd_pins xlconcat_0/In2] [get_bd_pins xlslice_19/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlconcat_0/In8] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_20_Dout [get_bd_pins xlconcat_0/In30] [get_bd_pins xlslice_20/Dout]
  connect_bd_net -net xlslice_21_Dout [get_bd_pins xlconcat_0/In26] [get_bd_pins xlslice_21/Dout]
  connect_bd_net -net xlslice_22_Dout [get_bd_pins xlconcat_0/In22] [get_bd_pins xlslice_22/Dout]
  connect_bd_net -net xlslice_23_Dout [get_bd_pins xlconcat_0/In18] [get_bd_pins xlslice_23/Dout]
  connect_bd_net -net xlslice_24_Dout [get_bd_pins xlconcat_0/In15] [get_bd_pins xlslice_24/Dout]
  connect_bd_net -net xlslice_25_Dout [get_bd_pins xlconcat_0/In11] [get_bd_pins xlslice_25/Dout]
  connect_bd_net -net xlslice_26_Dout [get_bd_pins xlconcat_0/In7] [get_bd_pins xlslice_26/Dout]
  connect_bd_net -net xlslice_27_Dout [get_bd_pins xlconcat_0/In3] [get_bd_pins xlslice_27/Dout]
  connect_bd_net -net xlslice_28_Dout [get_bd_pins xlconcat_0/In31] [get_bd_pins xlslice_28/Dout]
  connect_bd_net -net xlslice_29_Dout [get_bd_pins xlconcat_0/In27] [get_bd_pins xlslice_29/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlconcat_0/In4] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_30_Dout [get_bd_pins xlconcat_0/In23] [get_bd_pins xlslice_30/Dout]
  connect_bd_net -net xlslice_31_Dout [get_bd_pins xlconcat_0/In19] [get_bd_pins xlslice_31/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlconcat_0/In0] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlconcat_0/In28] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins xlconcat_0/In24] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins xlconcat_0/In20] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlconcat_0/In16] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_0/In13] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlconcat_0/In9] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hier_3
proc create_hier_cell_hier_3_2 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hier_3_2() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 Din
  create_bd_pin -dir O -from 31 -to 0 dout_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {32} \
 ] $xlconcat_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {9} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create instance: xlslice_10, and set properties
  set xlslice_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {10} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_10

  # Create instance: xlslice_11, and set properties
  set xlslice_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_11 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {11} \
   CONFIG.DIN_TO {11} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_11

  # Create instance: xlslice_12, and set properties
  set xlslice_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_12 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {12} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_12

  # Create instance: xlslice_13, and set properties
  set xlslice_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_13 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {13} \
   CONFIG.DIN_TO {13} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_13

  # Create instance: xlslice_14, and set properties
  set xlslice_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_14 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {14} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_14

  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {15} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_15

  # Create instance: xlslice_16, and set properties
  set xlslice_16 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_16 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_16

  # Create instance: xlslice_17, and set properties
  set xlslice_17 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_17 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_17

  # Create instance: xlslice_18, and set properties
  set xlslice_18 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_18 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_18

  # Create instance: xlslice_19, and set properties
  set xlslice_19 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_19 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {19} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_19

  # Create instance: xlslice_20, and set properties
  set xlslice_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_20 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {20} \
   CONFIG.DIN_TO {20} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_20

  # Create instance: xlslice_21, and set properties
  set xlslice_21 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_21 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {21} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_21

  # Create instance: xlslice_22, and set properties
  set xlslice_22 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_22 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {22} \
   CONFIG.DIN_TO {22} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_22

  # Create instance: xlslice_23, and set properties
  set xlslice_23 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_23 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {23} \
   CONFIG.DIN_TO {23} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_23

  # Create instance: xlslice_24, and set properties
  set xlslice_24 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_24 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {24} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_24

  # Create instance: xlslice_25, and set properties
  set xlslice_25 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_25 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_25

  # Create instance: xlslice_26, and set properties
  set xlslice_26 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_26 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {26} \
   CONFIG.DIN_TO {26} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_26

  # Create instance: xlslice_27, and set properties
  set xlslice_27 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_27 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {27} \
   CONFIG.DIN_TO {27} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_27

  # Create instance: xlslice_28, and set properties
  set xlslice_28 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_28 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {28} \
   CONFIG.DIN_TO {28} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_28

  # Create instance: xlslice_29, and set properties
  set xlslice_29 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_29 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {29} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_29

  # Create instance: xlslice_30, and set properties
  set xlslice_30 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_30 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {30} \
   CONFIG.DIN_TO {30} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_30

  # Create instance: xlslice_31, and set properties
  set xlslice_31 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_31 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {31} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_31

  # Create port connections
  connect_bd_net -net xlconcat_0_dout [get_bd_pins Din] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_10/Din] [get_bd_pins xlslice_11/Din] [get_bd_pins xlslice_12/Din] [get_bd_pins xlslice_13/Din] [get_bd_pins xlslice_14/Din] [get_bd_pins xlslice_15/Din] [get_bd_pins xlslice_16/Din] [get_bd_pins xlslice_17/Din] [get_bd_pins xlslice_18/Din] [get_bd_pins xlslice_19/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_20/Din] [get_bd_pins xlslice_21/Din] [get_bd_pins xlslice_22/Din] [get_bd_pins xlslice_23/Din] [get_bd_pins xlslice_24/Din] [get_bd_pins xlslice_25/Din] [get_bd_pins xlslice_26/Din] [get_bd_pins xlslice_27/Din] [get_bd_pins xlslice_28/Din] [get_bd_pins xlslice_29/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_30/Din] [get_bd_pins xlslice_31/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net xlconcat_0_dout1 [get_bd_pins dout_0] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlconcat_0/In12] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_10_Dout [get_bd_pins xlconcat_0/In5] [get_bd_pins xlslice_10/Dout]
  connect_bd_net -net xlslice_11_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_11/Dout]
  connect_bd_net -net xlslice_12_Dout [get_bd_pins xlconcat_0/In29] [get_bd_pins xlslice_12/Dout]
  connect_bd_net -net xlslice_13_Dout [get_bd_pins xlconcat_0/In25] [get_bd_pins xlslice_13/Dout]
  connect_bd_net -net xlslice_14_Dout [get_bd_pins xlconcat_0/In21] [get_bd_pins xlslice_14/Dout]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins xlconcat_0/In17] [get_bd_pins xlslice_15/Dout]
  connect_bd_net -net xlslice_16_Dout [get_bd_pins xlconcat_0/In14] [get_bd_pins xlslice_16/Dout]
  connect_bd_net -net xlslice_17_Dout [get_bd_pins xlconcat_0/In10] [get_bd_pins xlslice_17/Dout]
  connect_bd_net -net xlslice_18_Dout [get_bd_pins xlconcat_0/In6] [get_bd_pins xlslice_18/Dout]
  connect_bd_net -net xlslice_19_Dout [get_bd_pins xlconcat_0/In2] [get_bd_pins xlslice_19/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlconcat_0/In8] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_20_Dout [get_bd_pins xlconcat_0/In30] [get_bd_pins xlslice_20/Dout]
  connect_bd_net -net xlslice_21_Dout [get_bd_pins xlconcat_0/In26] [get_bd_pins xlslice_21/Dout]
  connect_bd_net -net xlslice_22_Dout [get_bd_pins xlconcat_0/In22] [get_bd_pins xlslice_22/Dout]
  connect_bd_net -net xlslice_23_Dout [get_bd_pins xlconcat_0/In18] [get_bd_pins xlslice_23/Dout]
  connect_bd_net -net xlslice_24_Dout [get_bd_pins xlconcat_0/In15] [get_bd_pins xlslice_24/Dout]
  connect_bd_net -net xlslice_25_Dout [get_bd_pins xlconcat_0/In11] [get_bd_pins xlslice_25/Dout]
  connect_bd_net -net xlslice_26_Dout [get_bd_pins xlconcat_0/In7] [get_bd_pins xlslice_26/Dout]
  connect_bd_net -net xlslice_27_Dout [get_bd_pins xlconcat_0/In3] [get_bd_pins xlslice_27/Dout]
  connect_bd_net -net xlslice_28_Dout [get_bd_pins xlconcat_0/In31] [get_bd_pins xlslice_28/Dout]
  connect_bd_net -net xlslice_29_Dout [get_bd_pins xlconcat_0/In27] [get_bd_pins xlslice_29/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlconcat_0/In4] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_30_Dout [get_bd_pins xlconcat_0/In23] [get_bd_pins xlslice_30/Dout]
  connect_bd_net -net xlslice_31_Dout [get_bd_pins xlconcat_0/In19] [get_bd_pins xlslice_31/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlconcat_0/In0] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlconcat_0/In28] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins xlconcat_0/In24] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins xlconcat_0/In20] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlconcat_0/In16] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_0/In13] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlconcat_0/In9] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hier_0
proc create_hier_cell_hier_0_1 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hier_0_1() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 Din
  create_bd_pin -dir O -from 31 -to 0 dout_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {32} \
 ] $xlconcat_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {9} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create instance: xlslice_10, and set properties
  set xlslice_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {10} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_10

  # Create instance: xlslice_11, and set properties
  set xlslice_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_11 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {11} \
   CONFIG.DIN_TO {11} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_11

  # Create instance: xlslice_12, and set properties
  set xlslice_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_12 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {12} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_12

  # Create instance: xlslice_13, and set properties
  set xlslice_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_13 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {13} \
   CONFIG.DIN_TO {13} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_13

  # Create instance: xlslice_14, and set properties
  set xlslice_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_14 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {14} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_14

  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {15} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_15

  # Create instance: xlslice_16, and set properties
  set xlslice_16 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_16 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_16

  # Create instance: xlslice_17, and set properties
  set xlslice_17 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_17 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_17

  # Create instance: xlslice_18, and set properties
  set xlslice_18 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_18 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_18

  # Create instance: xlslice_19, and set properties
  set xlslice_19 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_19 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {19} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_19

  # Create instance: xlslice_20, and set properties
  set xlslice_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_20 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {20} \
   CONFIG.DIN_TO {20} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_20

  # Create instance: xlslice_21, and set properties
  set xlslice_21 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_21 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {21} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_21

  # Create instance: xlslice_22, and set properties
  set xlslice_22 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_22 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {22} \
   CONFIG.DIN_TO {22} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_22

  # Create instance: xlslice_23, and set properties
  set xlslice_23 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_23 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {23} \
   CONFIG.DIN_TO {23} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_23

  # Create instance: xlslice_24, and set properties
  set xlslice_24 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_24 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {24} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_24

  # Create instance: xlslice_25, and set properties
  set xlslice_25 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_25 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_25

  # Create instance: xlslice_26, and set properties
  set xlslice_26 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_26 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {26} \
   CONFIG.DIN_TO {26} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_26

  # Create instance: xlslice_27, and set properties
  set xlslice_27 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_27 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {27} \
   CONFIG.DIN_TO {27} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_27

  # Create instance: xlslice_28, and set properties
  set xlslice_28 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_28 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {28} \
   CONFIG.DIN_TO {28} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_28

  # Create instance: xlslice_29, and set properties
  set xlslice_29 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_29 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {29} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_29

  # Create instance: xlslice_30, and set properties
  set xlslice_30 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_30 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {30} \
   CONFIG.DIN_TO {30} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_30

  # Create instance: xlslice_31, and set properties
  set xlslice_31 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_31 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {31} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_31

  # Create port connections
  connect_bd_net -net xlconcat_0_dout [get_bd_pins Din] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_10/Din] [get_bd_pins xlslice_11/Din] [get_bd_pins xlslice_12/Din] [get_bd_pins xlslice_13/Din] [get_bd_pins xlslice_14/Din] [get_bd_pins xlslice_15/Din] [get_bd_pins xlslice_16/Din] [get_bd_pins xlslice_17/Din] [get_bd_pins xlslice_18/Din] [get_bd_pins xlslice_19/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_20/Din] [get_bd_pins xlslice_21/Din] [get_bd_pins xlslice_22/Din] [get_bd_pins xlslice_23/Din] [get_bd_pins xlslice_24/Din] [get_bd_pins xlslice_25/Din] [get_bd_pins xlslice_26/Din] [get_bd_pins xlslice_27/Din] [get_bd_pins xlslice_28/Din] [get_bd_pins xlslice_29/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_30/Din] [get_bd_pins xlslice_31/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net xlconcat_0_dout1 [get_bd_pins dout_0] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlconcat_0/In12] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_10_Dout [get_bd_pins xlconcat_0/In5] [get_bd_pins xlslice_10/Dout]
  connect_bd_net -net xlslice_11_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_11/Dout]
  connect_bd_net -net xlslice_12_Dout [get_bd_pins xlconcat_0/In29] [get_bd_pins xlslice_12/Dout]
  connect_bd_net -net xlslice_13_Dout [get_bd_pins xlconcat_0/In25] [get_bd_pins xlslice_13/Dout]
  connect_bd_net -net xlslice_14_Dout [get_bd_pins xlconcat_0/In21] [get_bd_pins xlslice_14/Dout]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins xlconcat_0/In17] [get_bd_pins xlslice_15/Dout]
  connect_bd_net -net xlslice_16_Dout [get_bd_pins xlconcat_0/In14] [get_bd_pins xlslice_16/Dout]
  connect_bd_net -net xlslice_17_Dout [get_bd_pins xlconcat_0/In10] [get_bd_pins xlslice_17/Dout]
  connect_bd_net -net xlslice_18_Dout [get_bd_pins xlconcat_0/In6] [get_bd_pins xlslice_18/Dout]
  connect_bd_net -net xlslice_19_Dout [get_bd_pins xlconcat_0/In2] [get_bd_pins xlslice_19/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlconcat_0/In8] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_20_Dout [get_bd_pins xlconcat_0/In30] [get_bd_pins xlslice_20/Dout]
  connect_bd_net -net xlslice_21_Dout [get_bd_pins xlconcat_0/In26] [get_bd_pins xlslice_21/Dout]
  connect_bd_net -net xlslice_22_Dout [get_bd_pins xlconcat_0/In22] [get_bd_pins xlslice_22/Dout]
  connect_bd_net -net xlslice_23_Dout [get_bd_pins xlconcat_0/In18] [get_bd_pins xlslice_23/Dout]
  connect_bd_net -net xlslice_24_Dout [get_bd_pins xlconcat_0/In15] [get_bd_pins xlslice_24/Dout]
  connect_bd_net -net xlslice_25_Dout [get_bd_pins xlconcat_0/In11] [get_bd_pins xlslice_25/Dout]
  connect_bd_net -net xlslice_26_Dout [get_bd_pins xlconcat_0/In7] [get_bd_pins xlslice_26/Dout]
  connect_bd_net -net xlslice_27_Dout [get_bd_pins xlconcat_0/In3] [get_bd_pins xlslice_27/Dout]
  connect_bd_net -net xlslice_28_Dout [get_bd_pins xlconcat_0/In31] [get_bd_pins xlslice_28/Dout]
  connect_bd_net -net xlslice_29_Dout [get_bd_pins xlconcat_0/In27] [get_bd_pins xlslice_29/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlconcat_0/In4] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_30_Dout [get_bd_pins xlconcat_0/In23] [get_bd_pins xlslice_30/Dout]
  connect_bd_net -net xlslice_31_Dout [get_bd_pins xlconcat_0/In19] [get_bd_pins xlslice_31/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlconcat_0/In0] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlconcat_0/In28] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins xlconcat_0/In24] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins xlconcat_0/In20] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlconcat_0/In16] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_0/In13] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlconcat_0/In9] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hier_1
proc create_hier_cell_hier_1_1 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hier_1_1() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 Din
  create_bd_pin -dir O -from 31 -to 0 dout_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {32} \
 ] $xlconcat_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {9} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create instance: xlslice_10, and set properties
  set xlslice_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {10} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_10

  # Create instance: xlslice_11, and set properties
  set xlslice_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_11 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {11} \
   CONFIG.DIN_TO {11} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_11

  # Create instance: xlslice_12, and set properties
  set xlslice_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_12 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {12} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_12

  # Create instance: xlslice_13, and set properties
  set xlslice_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_13 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {13} \
   CONFIG.DIN_TO {13} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_13

  # Create instance: xlslice_14, and set properties
  set xlslice_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_14 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {14} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_14

  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {15} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_15

  # Create instance: xlslice_16, and set properties
  set xlslice_16 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_16 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_16

  # Create instance: xlslice_17, and set properties
  set xlslice_17 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_17 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_17

  # Create instance: xlslice_18, and set properties
  set xlslice_18 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_18 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_18

  # Create instance: xlslice_19, and set properties
  set xlslice_19 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_19 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {19} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_19

  # Create instance: xlslice_20, and set properties
  set xlslice_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_20 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {20} \
   CONFIG.DIN_TO {20} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_20

  # Create instance: xlslice_21, and set properties
  set xlslice_21 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_21 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {21} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_21

  # Create instance: xlslice_22, and set properties
  set xlslice_22 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_22 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {22} \
   CONFIG.DIN_TO {22} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_22

  # Create instance: xlslice_23, and set properties
  set xlslice_23 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_23 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {23} \
   CONFIG.DIN_TO {23} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_23

  # Create instance: xlslice_24, and set properties
  set xlslice_24 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_24 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {24} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_24

  # Create instance: xlslice_25, and set properties
  set xlslice_25 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_25 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_25

  # Create instance: xlslice_26, and set properties
  set xlslice_26 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_26 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {26} \
   CONFIG.DIN_TO {26} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_26

  # Create instance: xlslice_27, and set properties
  set xlslice_27 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_27 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {27} \
   CONFIG.DIN_TO {27} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_27

  # Create instance: xlslice_28, and set properties
  set xlslice_28 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_28 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {28} \
   CONFIG.DIN_TO {28} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_28

  # Create instance: xlslice_29, and set properties
  set xlslice_29 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_29 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {29} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_29

  # Create instance: xlslice_30, and set properties
  set xlslice_30 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_30 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {30} \
   CONFIG.DIN_TO {30} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_30

  # Create instance: xlslice_31, and set properties
  set xlslice_31 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_31 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {31} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_31

  # Create port connections
  connect_bd_net -net xlconcat_0_dout [get_bd_pins Din] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_10/Din] [get_bd_pins xlslice_11/Din] [get_bd_pins xlslice_12/Din] [get_bd_pins xlslice_13/Din] [get_bd_pins xlslice_14/Din] [get_bd_pins xlslice_15/Din] [get_bd_pins xlslice_16/Din] [get_bd_pins xlslice_17/Din] [get_bd_pins xlslice_18/Din] [get_bd_pins xlslice_19/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_20/Din] [get_bd_pins xlslice_21/Din] [get_bd_pins xlslice_22/Din] [get_bd_pins xlslice_23/Din] [get_bd_pins xlslice_24/Din] [get_bd_pins xlslice_25/Din] [get_bd_pins xlslice_26/Din] [get_bd_pins xlslice_27/Din] [get_bd_pins xlslice_28/Din] [get_bd_pins xlslice_29/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_30/Din] [get_bd_pins xlslice_31/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net xlconcat_0_dout1 [get_bd_pins dout_0] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlconcat_0/In12] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_10_Dout [get_bd_pins xlconcat_0/In5] [get_bd_pins xlslice_10/Dout]
  connect_bd_net -net xlslice_11_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_11/Dout]
  connect_bd_net -net xlslice_12_Dout [get_bd_pins xlconcat_0/In29] [get_bd_pins xlslice_12/Dout]
  connect_bd_net -net xlslice_13_Dout [get_bd_pins xlconcat_0/In25] [get_bd_pins xlslice_13/Dout]
  connect_bd_net -net xlslice_14_Dout [get_bd_pins xlconcat_0/In21] [get_bd_pins xlslice_14/Dout]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins xlconcat_0/In17] [get_bd_pins xlslice_15/Dout]
  connect_bd_net -net xlslice_16_Dout [get_bd_pins xlconcat_0/In14] [get_bd_pins xlslice_16/Dout]
  connect_bd_net -net xlslice_17_Dout [get_bd_pins xlconcat_0/In10] [get_bd_pins xlslice_17/Dout]
  connect_bd_net -net xlslice_18_Dout [get_bd_pins xlconcat_0/In6] [get_bd_pins xlslice_18/Dout]
  connect_bd_net -net xlslice_19_Dout [get_bd_pins xlconcat_0/In2] [get_bd_pins xlslice_19/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlconcat_0/In8] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_20_Dout [get_bd_pins xlconcat_0/In30] [get_bd_pins xlslice_20/Dout]
  connect_bd_net -net xlslice_21_Dout [get_bd_pins xlconcat_0/In26] [get_bd_pins xlslice_21/Dout]
  connect_bd_net -net xlslice_22_Dout [get_bd_pins xlconcat_0/In22] [get_bd_pins xlslice_22/Dout]
  connect_bd_net -net xlslice_23_Dout [get_bd_pins xlconcat_0/In18] [get_bd_pins xlslice_23/Dout]
  connect_bd_net -net xlslice_24_Dout [get_bd_pins xlconcat_0/In15] [get_bd_pins xlslice_24/Dout]
  connect_bd_net -net xlslice_25_Dout [get_bd_pins xlconcat_0/In11] [get_bd_pins xlslice_25/Dout]
  connect_bd_net -net xlslice_26_Dout [get_bd_pins xlconcat_0/In7] [get_bd_pins xlslice_26/Dout]
  connect_bd_net -net xlslice_27_Dout [get_bd_pins xlconcat_0/In3] [get_bd_pins xlslice_27/Dout]
  connect_bd_net -net xlslice_28_Dout [get_bd_pins xlconcat_0/In31] [get_bd_pins xlslice_28/Dout]
  connect_bd_net -net xlslice_29_Dout [get_bd_pins xlconcat_0/In27] [get_bd_pins xlslice_29/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlconcat_0/In4] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_30_Dout [get_bd_pins xlconcat_0/In23] [get_bd_pins xlslice_30/Dout]
  connect_bd_net -net xlslice_31_Dout [get_bd_pins xlconcat_0/In19] [get_bd_pins xlslice_31/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlconcat_0/In0] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlconcat_0/In28] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins xlconcat_0/In24] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins xlconcat_0/In20] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlconcat_0/In16] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_0/In13] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlconcat_0/In9] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hier_2
proc create_hier_cell_hier_2_1 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hier_2_1() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 Din
  create_bd_pin -dir O -from 31 -to 0 dout_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {32} \
 ] $xlconcat_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {9} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create instance: xlslice_10, and set properties
  set xlslice_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {10} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_10

  # Create instance: xlslice_11, and set properties
  set xlslice_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_11 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {11} \
   CONFIG.DIN_TO {11} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_11

  # Create instance: xlslice_12, and set properties
  set xlslice_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_12 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {12} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_12

  # Create instance: xlslice_13, and set properties
  set xlslice_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_13 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {13} \
   CONFIG.DIN_TO {13} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_13

  # Create instance: xlslice_14, and set properties
  set xlslice_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_14 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {14} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_14

  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {15} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_15

  # Create instance: xlslice_16, and set properties
  set xlslice_16 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_16 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_16

  # Create instance: xlslice_17, and set properties
  set xlslice_17 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_17 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_17

  # Create instance: xlslice_18, and set properties
  set xlslice_18 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_18 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_18

  # Create instance: xlslice_19, and set properties
  set xlslice_19 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_19 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {19} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_19

  # Create instance: xlslice_20, and set properties
  set xlslice_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_20 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {20} \
   CONFIG.DIN_TO {20} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_20

  # Create instance: xlslice_21, and set properties
  set xlslice_21 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_21 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {21} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_21

  # Create instance: xlslice_22, and set properties
  set xlslice_22 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_22 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {22} \
   CONFIG.DIN_TO {22} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_22

  # Create instance: xlslice_23, and set properties
  set xlslice_23 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_23 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {23} \
   CONFIG.DIN_TO {23} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_23

  # Create instance: xlslice_24, and set properties
  set xlslice_24 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_24 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {24} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_24

  # Create instance: xlslice_25, and set properties
  set xlslice_25 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_25 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_25

  # Create instance: xlslice_26, and set properties
  set xlslice_26 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_26 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {26} \
   CONFIG.DIN_TO {26} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_26

  # Create instance: xlslice_27, and set properties
  set xlslice_27 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_27 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {27} \
   CONFIG.DIN_TO {27} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_27

  # Create instance: xlslice_28, and set properties
  set xlslice_28 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_28 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {28} \
   CONFIG.DIN_TO {28} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_28

  # Create instance: xlslice_29, and set properties
  set xlslice_29 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_29 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {29} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_29

  # Create instance: xlslice_30, and set properties
  set xlslice_30 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_30 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {30} \
   CONFIG.DIN_TO {30} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_30

  # Create instance: xlslice_31, and set properties
  set xlslice_31 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_31 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {31} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_31

  # Create port connections
  connect_bd_net -net xlconcat_0_dout [get_bd_pins Din] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_10/Din] [get_bd_pins xlslice_11/Din] [get_bd_pins xlslice_12/Din] [get_bd_pins xlslice_13/Din] [get_bd_pins xlslice_14/Din] [get_bd_pins xlslice_15/Din] [get_bd_pins xlslice_16/Din] [get_bd_pins xlslice_17/Din] [get_bd_pins xlslice_18/Din] [get_bd_pins xlslice_19/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_20/Din] [get_bd_pins xlslice_21/Din] [get_bd_pins xlslice_22/Din] [get_bd_pins xlslice_23/Din] [get_bd_pins xlslice_24/Din] [get_bd_pins xlslice_25/Din] [get_bd_pins xlslice_26/Din] [get_bd_pins xlslice_27/Din] [get_bd_pins xlslice_28/Din] [get_bd_pins xlslice_29/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_30/Din] [get_bd_pins xlslice_31/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net xlconcat_0_dout1 [get_bd_pins dout_0] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlconcat_0/In12] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_10_Dout [get_bd_pins xlconcat_0/In5] [get_bd_pins xlslice_10/Dout]
  connect_bd_net -net xlslice_11_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_11/Dout]
  connect_bd_net -net xlslice_12_Dout [get_bd_pins xlconcat_0/In29] [get_bd_pins xlslice_12/Dout]
  connect_bd_net -net xlslice_13_Dout [get_bd_pins xlconcat_0/In25] [get_bd_pins xlslice_13/Dout]
  connect_bd_net -net xlslice_14_Dout [get_bd_pins xlconcat_0/In21] [get_bd_pins xlslice_14/Dout]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins xlconcat_0/In17] [get_bd_pins xlslice_15/Dout]
  connect_bd_net -net xlslice_16_Dout [get_bd_pins xlconcat_0/In14] [get_bd_pins xlslice_16/Dout]
  connect_bd_net -net xlslice_17_Dout [get_bd_pins xlconcat_0/In10] [get_bd_pins xlslice_17/Dout]
  connect_bd_net -net xlslice_18_Dout [get_bd_pins xlconcat_0/In6] [get_bd_pins xlslice_18/Dout]
  connect_bd_net -net xlslice_19_Dout [get_bd_pins xlconcat_0/In2] [get_bd_pins xlslice_19/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlconcat_0/In8] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_20_Dout [get_bd_pins xlconcat_0/In30] [get_bd_pins xlslice_20/Dout]
  connect_bd_net -net xlslice_21_Dout [get_bd_pins xlconcat_0/In26] [get_bd_pins xlslice_21/Dout]
  connect_bd_net -net xlslice_22_Dout [get_bd_pins xlconcat_0/In22] [get_bd_pins xlslice_22/Dout]
  connect_bd_net -net xlslice_23_Dout [get_bd_pins xlconcat_0/In18] [get_bd_pins xlslice_23/Dout]
  connect_bd_net -net xlslice_24_Dout [get_bd_pins xlconcat_0/In15] [get_bd_pins xlslice_24/Dout]
  connect_bd_net -net xlslice_25_Dout [get_bd_pins xlconcat_0/In11] [get_bd_pins xlslice_25/Dout]
  connect_bd_net -net xlslice_26_Dout [get_bd_pins xlconcat_0/In7] [get_bd_pins xlslice_26/Dout]
  connect_bd_net -net xlslice_27_Dout [get_bd_pins xlconcat_0/In3] [get_bd_pins xlslice_27/Dout]
  connect_bd_net -net xlslice_28_Dout [get_bd_pins xlconcat_0/In31] [get_bd_pins xlslice_28/Dout]
  connect_bd_net -net xlslice_29_Dout [get_bd_pins xlconcat_0/In27] [get_bd_pins xlslice_29/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlconcat_0/In4] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_30_Dout [get_bd_pins xlconcat_0/In23] [get_bd_pins xlslice_30/Dout]
  connect_bd_net -net xlslice_31_Dout [get_bd_pins xlconcat_0/In19] [get_bd_pins xlslice_31/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlconcat_0/In0] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlconcat_0/In28] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins xlconcat_0/In24] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins xlconcat_0/In20] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlconcat_0/In16] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_0/In13] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlconcat_0/In9] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hier_3
proc create_hier_cell_hier_3_1 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hier_3_1() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 Din
  create_bd_pin -dir O -from 31 -to 0 dout_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {32} \
 ] $xlconcat_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {9} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create instance: xlslice_10, and set properties
  set xlslice_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {10} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_10

  # Create instance: xlslice_11, and set properties
  set xlslice_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_11 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {11} \
   CONFIG.DIN_TO {11} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_11

  # Create instance: xlslice_12, and set properties
  set xlslice_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_12 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {12} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_12

  # Create instance: xlslice_13, and set properties
  set xlslice_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_13 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {13} \
   CONFIG.DIN_TO {13} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_13

  # Create instance: xlslice_14, and set properties
  set xlslice_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_14 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {14} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_14

  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {15} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_15

  # Create instance: xlslice_16, and set properties
  set xlslice_16 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_16 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_16

  # Create instance: xlslice_17, and set properties
  set xlslice_17 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_17 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_17

  # Create instance: xlslice_18, and set properties
  set xlslice_18 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_18 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_18

  # Create instance: xlslice_19, and set properties
  set xlslice_19 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_19 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {19} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_19

  # Create instance: xlslice_20, and set properties
  set xlslice_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_20 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {20} \
   CONFIG.DIN_TO {20} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_20

  # Create instance: xlslice_21, and set properties
  set xlslice_21 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_21 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {21} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_21

  # Create instance: xlslice_22, and set properties
  set xlslice_22 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_22 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {22} \
   CONFIG.DIN_TO {22} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_22

  # Create instance: xlslice_23, and set properties
  set xlslice_23 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_23 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {23} \
   CONFIG.DIN_TO {23} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_23

  # Create instance: xlslice_24, and set properties
  set xlslice_24 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_24 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {24} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_24

  # Create instance: xlslice_25, and set properties
  set xlslice_25 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_25 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_25

  # Create instance: xlslice_26, and set properties
  set xlslice_26 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_26 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {26} \
   CONFIG.DIN_TO {26} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_26

  # Create instance: xlslice_27, and set properties
  set xlslice_27 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_27 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {27} \
   CONFIG.DIN_TO {27} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_27

  # Create instance: xlslice_28, and set properties
  set xlslice_28 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_28 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {28} \
   CONFIG.DIN_TO {28} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_28

  # Create instance: xlslice_29, and set properties
  set xlslice_29 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_29 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {29} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_29

  # Create instance: xlslice_30, and set properties
  set xlslice_30 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_30 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {30} \
   CONFIG.DIN_TO {30} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_30

  # Create instance: xlslice_31, and set properties
  set xlslice_31 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_31 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {31} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_31

  # Create port connections
  connect_bd_net -net xlconcat_0_dout [get_bd_pins Din] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_10/Din] [get_bd_pins xlslice_11/Din] [get_bd_pins xlslice_12/Din] [get_bd_pins xlslice_13/Din] [get_bd_pins xlslice_14/Din] [get_bd_pins xlslice_15/Din] [get_bd_pins xlslice_16/Din] [get_bd_pins xlslice_17/Din] [get_bd_pins xlslice_18/Din] [get_bd_pins xlslice_19/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_20/Din] [get_bd_pins xlslice_21/Din] [get_bd_pins xlslice_22/Din] [get_bd_pins xlslice_23/Din] [get_bd_pins xlslice_24/Din] [get_bd_pins xlslice_25/Din] [get_bd_pins xlslice_26/Din] [get_bd_pins xlslice_27/Din] [get_bd_pins xlslice_28/Din] [get_bd_pins xlslice_29/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_30/Din] [get_bd_pins xlslice_31/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net xlconcat_0_dout1 [get_bd_pins dout_0] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlconcat_0/In12] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_10_Dout [get_bd_pins xlconcat_0/In5] [get_bd_pins xlslice_10/Dout]
  connect_bd_net -net xlslice_11_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_11/Dout]
  connect_bd_net -net xlslice_12_Dout [get_bd_pins xlconcat_0/In29] [get_bd_pins xlslice_12/Dout]
  connect_bd_net -net xlslice_13_Dout [get_bd_pins xlconcat_0/In25] [get_bd_pins xlslice_13/Dout]
  connect_bd_net -net xlslice_14_Dout [get_bd_pins xlconcat_0/In21] [get_bd_pins xlslice_14/Dout]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins xlconcat_0/In17] [get_bd_pins xlslice_15/Dout]
  connect_bd_net -net xlslice_16_Dout [get_bd_pins xlconcat_0/In14] [get_bd_pins xlslice_16/Dout]
  connect_bd_net -net xlslice_17_Dout [get_bd_pins xlconcat_0/In10] [get_bd_pins xlslice_17/Dout]
  connect_bd_net -net xlslice_18_Dout [get_bd_pins xlconcat_0/In6] [get_bd_pins xlslice_18/Dout]
  connect_bd_net -net xlslice_19_Dout [get_bd_pins xlconcat_0/In2] [get_bd_pins xlslice_19/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlconcat_0/In8] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_20_Dout [get_bd_pins xlconcat_0/In30] [get_bd_pins xlslice_20/Dout]
  connect_bd_net -net xlslice_21_Dout [get_bd_pins xlconcat_0/In26] [get_bd_pins xlslice_21/Dout]
  connect_bd_net -net xlslice_22_Dout [get_bd_pins xlconcat_0/In22] [get_bd_pins xlslice_22/Dout]
  connect_bd_net -net xlslice_23_Dout [get_bd_pins xlconcat_0/In18] [get_bd_pins xlslice_23/Dout]
  connect_bd_net -net xlslice_24_Dout [get_bd_pins xlconcat_0/In15] [get_bd_pins xlslice_24/Dout]
  connect_bd_net -net xlslice_25_Dout [get_bd_pins xlconcat_0/In11] [get_bd_pins xlslice_25/Dout]
  connect_bd_net -net xlslice_26_Dout [get_bd_pins xlconcat_0/In7] [get_bd_pins xlslice_26/Dout]
  connect_bd_net -net xlslice_27_Dout [get_bd_pins xlconcat_0/In3] [get_bd_pins xlslice_27/Dout]
  connect_bd_net -net xlslice_28_Dout [get_bd_pins xlconcat_0/In31] [get_bd_pins xlslice_28/Dout]
  connect_bd_net -net xlslice_29_Dout [get_bd_pins xlconcat_0/In27] [get_bd_pins xlslice_29/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlconcat_0/In4] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_30_Dout [get_bd_pins xlconcat_0/In23] [get_bd_pins xlslice_30/Dout]
  connect_bd_net -net xlslice_31_Dout [get_bd_pins xlconcat_0/In19] [get_bd_pins xlslice_31/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlconcat_0/In0] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlconcat_0/In28] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins xlconcat_0/In24] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins xlconcat_0/In20] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlconcat_0/In16] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_0/In13] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlconcat_0/In9] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hier_0
proc create_hier_cell_hier_0 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hier_0() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 Din
  create_bd_pin -dir O -from 31 -to 0 dout_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {32} \
 ] $xlconcat_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {9} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create instance: xlslice_10, and set properties
  set xlslice_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {10} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_10

  # Create instance: xlslice_11, and set properties
  set xlslice_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_11 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {11} \
   CONFIG.DIN_TO {11} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_11

  # Create instance: xlslice_12, and set properties
  set xlslice_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_12 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {12} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_12

  # Create instance: xlslice_13, and set properties
  set xlslice_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_13 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {13} \
   CONFIG.DIN_TO {13} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_13

  # Create instance: xlslice_14, and set properties
  set xlslice_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_14 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {14} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_14

  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {15} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_15

  # Create instance: xlslice_16, and set properties
  set xlslice_16 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_16 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_16

  # Create instance: xlslice_17, and set properties
  set xlslice_17 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_17 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_17

  # Create instance: xlslice_18, and set properties
  set xlslice_18 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_18 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_18

  # Create instance: xlslice_19, and set properties
  set xlslice_19 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_19 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {19} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_19

  # Create instance: xlslice_20, and set properties
  set xlslice_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_20 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {20} \
   CONFIG.DIN_TO {20} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_20

  # Create instance: xlslice_21, and set properties
  set xlslice_21 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_21 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {21} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_21

  # Create instance: xlslice_22, and set properties
  set xlslice_22 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_22 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {22} \
   CONFIG.DIN_TO {22} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_22

  # Create instance: xlslice_23, and set properties
  set xlslice_23 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_23 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {23} \
   CONFIG.DIN_TO {23} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_23

  # Create instance: xlslice_24, and set properties
  set xlslice_24 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_24 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {24} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_24

  # Create instance: xlslice_25, and set properties
  set xlslice_25 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_25 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_25

  # Create instance: xlslice_26, and set properties
  set xlslice_26 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_26 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {26} \
   CONFIG.DIN_TO {26} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_26

  # Create instance: xlslice_27, and set properties
  set xlslice_27 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_27 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {27} \
   CONFIG.DIN_TO {27} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_27

  # Create instance: xlslice_28, and set properties
  set xlslice_28 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_28 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {28} \
   CONFIG.DIN_TO {28} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_28

  # Create instance: xlslice_29, and set properties
  set xlslice_29 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_29 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {29} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_29

  # Create instance: xlslice_30, and set properties
  set xlslice_30 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_30 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {30} \
   CONFIG.DIN_TO {30} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_30

  # Create instance: xlslice_31, and set properties
  set xlslice_31 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_31 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {31} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_31

  # Create port connections
  connect_bd_net -net xlconcat_0_dout [get_bd_pins Din] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_10/Din] [get_bd_pins xlslice_11/Din] [get_bd_pins xlslice_12/Din] [get_bd_pins xlslice_13/Din] [get_bd_pins xlslice_14/Din] [get_bd_pins xlslice_15/Din] [get_bd_pins xlslice_16/Din] [get_bd_pins xlslice_17/Din] [get_bd_pins xlslice_18/Din] [get_bd_pins xlslice_19/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_20/Din] [get_bd_pins xlslice_21/Din] [get_bd_pins xlslice_22/Din] [get_bd_pins xlslice_23/Din] [get_bd_pins xlslice_24/Din] [get_bd_pins xlslice_25/Din] [get_bd_pins xlslice_26/Din] [get_bd_pins xlslice_27/Din] [get_bd_pins xlslice_28/Din] [get_bd_pins xlslice_29/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_30/Din] [get_bd_pins xlslice_31/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net xlconcat_0_dout1 [get_bd_pins dout_0] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlconcat_0/In12] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_10_Dout [get_bd_pins xlconcat_0/In5] [get_bd_pins xlslice_10/Dout]
  connect_bd_net -net xlslice_11_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_11/Dout]
  connect_bd_net -net xlslice_12_Dout [get_bd_pins xlconcat_0/In29] [get_bd_pins xlslice_12/Dout]
  connect_bd_net -net xlslice_13_Dout [get_bd_pins xlconcat_0/In25] [get_bd_pins xlslice_13/Dout]
  connect_bd_net -net xlslice_14_Dout [get_bd_pins xlconcat_0/In21] [get_bd_pins xlslice_14/Dout]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins xlconcat_0/In17] [get_bd_pins xlslice_15/Dout]
  connect_bd_net -net xlslice_16_Dout [get_bd_pins xlconcat_0/In14] [get_bd_pins xlslice_16/Dout]
  connect_bd_net -net xlslice_17_Dout [get_bd_pins xlconcat_0/In10] [get_bd_pins xlslice_17/Dout]
  connect_bd_net -net xlslice_18_Dout [get_bd_pins xlconcat_0/In6] [get_bd_pins xlslice_18/Dout]
  connect_bd_net -net xlslice_19_Dout [get_bd_pins xlconcat_0/In2] [get_bd_pins xlslice_19/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlconcat_0/In8] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_20_Dout [get_bd_pins xlconcat_0/In30] [get_bd_pins xlslice_20/Dout]
  connect_bd_net -net xlslice_21_Dout [get_bd_pins xlconcat_0/In26] [get_bd_pins xlslice_21/Dout]
  connect_bd_net -net xlslice_22_Dout [get_bd_pins xlconcat_0/In22] [get_bd_pins xlslice_22/Dout]
  connect_bd_net -net xlslice_23_Dout [get_bd_pins xlconcat_0/In18] [get_bd_pins xlslice_23/Dout]
  connect_bd_net -net xlslice_24_Dout [get_bd_pins xlconcat_0/In15] [get_bd_pins xlslice_24/Dout]
  connect_bd_net -net xlslice_25_Dout [get_bd_pins xlconcat_0/In11] [get_bd_pins xlslice_25/Dout]
  connect_bd_net -net xlslice_26_Dout [get_bd_pins xlconcat_0/In7] [get_bd_pins xlslice_26/Dout]
  connect_bd_net -net xlslice_27_Dout [get_bd_pins xlconcat_0/In3] [get_bd_pins xlslice_27/Dout]
  connect_bd_net -net xlslice_28_Dout [get_bd_pins xlconcat_0/In31] [get_bd_pins xlslice_28/Dout]
  connect_bd_net -net xlslice_29_Dout [get_bd_pins xlconcat_0/In27] [get_bd_pins xlslice_29/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlconcat_0/In4] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_30_Dout [get_bd_pins xlconcat_0/In23] [get_bd_pins xlslice_30/Dout]
  connect_bd_net -net xlslice_31_Dout [get_bd_pins xlconcat_0/In19] [get_bd_pins xlslice_31/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlconcat_0/In0] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlconcat_0/In28] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins xlconcat_0/In24] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins xlconcat_0/In20] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlconcat_0/In16] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_0/In13] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlconcat_0/In9] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hier_1
proc create_hier_cell_hier_1 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hier_1() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 Din
  create_bd_pin -dir O -from 31 -to 0 dout_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {32} \
 ] $xlconcat_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {9} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create instance: xlslice_10, and set properties
  set xlslice_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {10} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_10

  # Create instance: xlslice_11, and set properties
  set xlslice_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_11 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {11} \
   CONFIG.DIN_TO {11} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_11

  # Create instance: xlslice_12, and set properties
  set xlslice_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_12 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {12} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_12

  # Create instance: xlslice_13, and set properties
  set xlslice_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_13 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {13} \
   CONFIG.DIN_TO {13} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_13

  # Create instance: xlslice_14, and set properties
  set xlslice_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_14 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {14} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_14

  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {15} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_15

  # Create instance: xlslice_16, and set properties
  set xlslice_16 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_16 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_16

  # Create instance: xlslice_17, and set properties
  set xlslice_17 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_17 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_17

  # Create instance: xlslice_18, and set properties
  set xlslice_18 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_18 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_18

  # Create instance: xlslice_19, and set properties
  set xlslice_19 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_19 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {19} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_19

  # Create instance: xlslice_20, and set properties
  set xlslice_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_20 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {20} \
   CONFIG.DIN_TO {20} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_20

  # Create instance: xlslice_21, and set properties
  set xlslice_21 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_21 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {21} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_21

  # Create instance: xlslice_22, and set properties
  set xlslice_22 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_22 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {22} \
   CONFIG.DIN_TO {22} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_22

  # Create instance: xlslice_23, and set properties
  set xlslice_23 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_23 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {23} \
   CONFIG.DIN_TO {23} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_23

  # Create instance: xlslice_24, and set properties
  set xlslice_24 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_24 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {24} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_24

  # Create instance: xlslice_25, and set properties
  set xlslice_25 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_25 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_25

  # Create instance: xlslice_26, and set properties
  set xlslice_26 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_26 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {26} \
   CONFIG.DIN_TO {26} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_26

  # Create instance: xlslice_27, and set properties
  set xlslice_27 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_27 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {27} \
   CONFIG.DIN_TO {27} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_27

  # Create instance: xlslice_28, and set properties
  set xlslice_28 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_28 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {28} \
   CONFIG.DIN_TO {28} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_28

  # Create instance: xlslice_29, and set properties
  set xlslice_29 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_29 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {29} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_29

  # Create instance: xlslice_30, and set properties
  set xlslice_30 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_30 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {30} \
   CONFIG.DIN_TO {30} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_30

  # Create instance: xlslice_31, and set properties
  set xlslice_31 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_31 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {31} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_31

  # Create port connections
  connect_bd_net -net xlconcat_0_dout [get_bd_pins Din] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_10/Din] [get_bd_pins xlslice_11/Din] [get_bd_pins xlslice_12/Din] [get_bd_pins xlslice_13/Din] [get_bd_pins xlslice_14/Din] [get_bd_pins xlslice_15/Din] [get_bd_pins xlslice_16/Din] [get_bd_pins xlslice_17/Din] [get_bd_pins xlslice_18/Din] [get_bd_pins xlslice_19/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_20/Din] [get_bd_pins xlslice_21/Din] [get_bd_pins xlslice_22/Din] [get_bd_pins xlslice_23/Din] [get_bd_pins xlslice_24/Din] [get_bd_pins xlslice_25/Din] [get_bd_pins xlslice_26/Din] [get_bd_pins xlslice_27/Din] [get_bd_pins xlslice_28/Din] [get_bd_pins xlslice_29/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_30/Din] [get_bd_pins xlslice_31/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net xlconcat_0_dout1 [get_bd_pins dout_0] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlconcat_0/In12] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_10_Dout [get_bd_pins xlconcat_0/In5] [get_bd_pins xlslice_10/Dout]
  connect_bd_net -net xlslice_11_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_11/Dout]
  connect_bd_net -net xlslice_12_Dout [get_bd_pins xlconcat_0/In29] [get_bd_pins xlslice_12/Dout]
  connect_bd_net -net xlslice_13_Dout [get_bd_pins xlconcat_0/In25] [get_bd_pins xlslice_13/Dout]
  connect_bd_net -net xlslice_14_Dout [get_bd_pins xlconcat_0/In21] [get_bd_pins xlslice_14/Dout]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins xlconcat_0/In17] [get_bd_pins xlslice_15/Dout]
  connect_bd_net -net xlslice_16_Dout [get_bd_pins xlconcat_0/In14] [get_bd_pins xlslice_16/Dout]
  connect_bd_net -net xlslice_17_Dout [get_bd_pins xlconcat_0/In10] [get_bd_pins xlslice_17/Dout]
  connect_bd_net -net xlslice_18_Dout [get_bd_pins xlconcat_0/In6] [get_bd_pins xlslice_18/Dout]
  connect_bd_net -net xlslice_19_Dout [get_bd_pins xlconcat_0/In2] [get_bd_pins xlslice_19/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlconcat_0/In8] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_20_Dout [get_bd_pins xlconcat_0/In30] [get_bd_pins xlslice_20/Dout]
  connect_bd_net -net xlslice_21_Dout [get_bd_pins xlconcat_0/In26] [get_bd_pins xlslice_21/Dout]
  connect_bd_net -net xlslice_22_Dout [get_bd_pins xlconcat_0/In22] [get_bd_pins xlslice_22/Dout]
  connect_bd_net -net xlslice_23_Dout [get_bd_pins xlconcat_0/In18] [get_bd_pins xlslice_23/Dout]
  connect_bd_net -net xlslice_24_Dout [get_bd_pins xlconcat_0/In15] [get_bd_pins xlslice_24/Dout]
  connect_bd_net -net xlslice_25_Dout [get_bd_pins xlconcat_0/In11] [get_bd_pins xlslice_25/Dout]
  connect_bd_net -net xlslice_26_Dout [get_bd_pins xlconcat_0/In7] [get_bd_pins xlslice_26/Dout]
  connect_bd_net -net xlslice_27_Dout [get_bd_pins xlconcat_0/In3] [get_bd_pins xlslice_27/Dout]
  connect_bd_net -net xlslice_28_Dout [get_bd_pins xlconcat_0/In31] [get_bd_pins xlslice_28/Dout]
  connect_bd_net -net xlslice_29_Dout [get_bd_pins xlconcat_0/In27] [get_bd_pins xlslice_29/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlconcat_0/In4] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_30_Dout [get_bd_pins xlconcat_0/In23] [get_bd_pins xlslice_30/Dout]
  connect_bd_net -net xlslice_31_Dout [get_bd_pins xlconcat_0/In19] [get_bd_pins xlslice_31/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlconcat_0/In0] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlconcat_0/In28] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins xlconcat_0/In24] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins xlconcat_0/In20] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlconcat_0/In16] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_0/In13] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlconcat_0/In9] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hier_2
proc create_hier_cell_hier_2 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hier_2() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 Din
  create_bd_pin -dir O -from 31 -to 0 dout_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {32} \
 ] $xlconcat_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {9} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create instance: xlslice_10, and set properties
  set xlslice_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {10} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_10

  # Create instance: xlslice_11, and set properties
  set xlslice_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_11 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {11} \
   CONFIG.DIN_TO {11} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_11

  # Create instance: xlslice_12, and set properties
  set xlslice_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_12 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {12} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_12

  # Create instance: xlslice_13, and set properties
  set xlslice_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_13 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {13} \
   CONFIG.DIN_TO {13} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_13

  # Create instance: xlslice_14, and set properties
  set xlslice_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_14 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {14} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_14

  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {15} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_15

  # Create instance: xlslice_16, and set properties
  set xlslice_16 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_16 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_16

  # Create instance: xlslice_17, and set properties
  set xlslice_17 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_17 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_17

  # Create instance: xlslice_18, and set properties
  set xlslice_18 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_18 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_18

  # Create instance: xlslice_19, and set properties
  set xlslice_19 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_19 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {19} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_19

  # Create instance: xlslice_20, and set properties
  set xlslice_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_20 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {20} \
   CONFIG.DIN_TO {20} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_20

  # Create instance: xlslice_21, and set properties
  set xlslice_21 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_21 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {21} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_21

  # Create instance: xlslice_22, and set properties
  set xlslice_22 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_22 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {22} \
   CONFIG.DIN_TO {22} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_22

  # Create instance: xlslice_23, and set properties
  set xlslice_23 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_23 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {23} \
   CONFIG.DIN_TO {23} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_23

  # Create instance: xlslice_24, and set properties
  set xlslice_24 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_24 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {24} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_24

  # Create instance: xlslice_25, and set properties
  set xlslice_25 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_25 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_25

  # Create instance: xlslice_26, and set properties
  set xlslice_26 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_26 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {26} \
   CONFIG.DIN_TO {26} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_26

  # Create instance: xlslice_27, and set properties
  set xlslice_27 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_27 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {27} \
   CONFIG.DIN_TO {27} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_27

  # Create instance: xlslice_28, and set properties
  set xlslice_28 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_28 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {28} \
   CONFIG.DIN_TO {28} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_28

  # Create instance: xlslice_29, and set properties
  set xlslice_29 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_29 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {29} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_29

  # Create instance: xlslice_30, and set properties
  set xlslice_30 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_30 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {30} \
   CONFIG.DIN_TO {30} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_30

  # Create instance: xlslice_31, and set properties
  set xlslice_31 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_31 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {31} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_31

  # Create port connections
  connect_bd_net -net xlconcat_0_dout [get_bd_pins Din] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_10/Din] [get_bd_pins xlslice_11/Din] [get_bd_pins xlslice_12/Din] [get_bd_pins xlslice_13/Din] [get_bd_pins xlslice_14/Din] [get_bd_pins xlslice_15/Din] [get_bd_pins xlslice_16/Din] [get_bd_pins xlslice_17/Din] [get_bd_pins xlslice_18/Din] [get_bd_pins xlslice_19/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_20/Din] [get_bd_pins xlslice_21/Din] [get_bd_pins xlslice_22/Din] [get_bd_pins xlslice_23/Din] [get_bd_pins xlslice_24/Din] [get_bd_pins xlslice_25/Din] [get_bd_pins xlslice_26/Din] [get_bd_pins xlslice_27/Din] [get_bd_pins xlslice_28/Din] [get_bd_pins xlslice_29/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_30/Din] [get_bd_pins xlslice_31/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net xlconcat_0_dout1 [get_bd_pins dout_0] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlconcat_0/In12] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_10_Dout [get_bd_pins xlconcat_0/In5] [get_bd_pins xlslice_10/Dout]
  connect_bd_net -net xlslice_11_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_11/Dout]
  connect_bd_net -net xlslice_12_Dout [get_bd_pins xlconcat_0/In29] [get_bd_pins xlslice_12/Dout]
  connect_bd_net -net xlslice_13_Dout [get_bd_pins xlconcat_0/In25] [get_bd_pins xlslice_13/Dout]
  connect_bd_net -net xlslice_14_Dout [get_bd_pins xlconcat_0/In21] [get_bd_pins xlslice_14/Dout]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins xlconcat_0/In17] [get_bd_pins xlslice_15/Dout]
  connect_bd_net -net xlslice_16_Dout [get_bd_pins xlconcat_0/In14] [get_bd_pins xlslice_16/Dout]
  connect_bd_net -net xlslice_17_Dout [get_bd_pins xlconcat_0/In10] [get_bd_pins xlslice_17/Dout]
  connect_bd_net -net xlslice_18_Dout [get_bd_pins xlconcat_0/In6] [get_bd_pins xlslice_18/Dout]
  connect_bd_net -net xlslice_19_Dout [get_bd_pins xlconcat_0/In2] [get_bd_pins xlslice_19/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlconcat_0/In8] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_20_Dout [get_bd_pins xlconcat_0/In30] [get_bd_pins xlslice_20/Dout]
  connect_bd_net -net xlslice_21_Dout [get_bd_pins xlconcat_0/In26] [get_bd_pins xlslice_21/Dout]
  connect_bd_net -net xlslice_22_Dout [get_bd_pins xlconcat_0/In22] [get_bd_pins xlslice_22/Dout]
  connect_bd_net -net xlslice_23_Dout [get_bd_pins xlconcat_0/In18] [get_bd_pins xlslice_23/Dout]
  connect_bd_net -net xlslice_24_Dout [get_bd_pins xlconcat_0/In15] [get_bd_pins xlslice_24/Dout]
  connect_bd_net -net xlslice_25_Dout [get_bd_pins xlconcat_0/In11] [get_bd_pins xlslice_25/Dout]
  connect_bd_net -net xlslice_26_Dout [get_bd_pins xlconcat_0/In7] [get_bd_pins xlslice_26/Dout]
  connect_bd_net -net xlslice_27_Dout [get_bd_pins xlconcat_0/In3] [get_bd_pins xlslice_27/Dout]
  connect_bd_net -net xlslice_28_Dout [get_bd_pins xlconcat_0/In31] [get_bd_pins xlslice_28/Dout]
  connect_bd_net -net xlslice_29_Dout [get_bd_pins xlconcat_0/In27] [get_bd_pins xlslice_29/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlconcat_0/In4] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_30_Dout [get_bd_pins xlconcat_0/In23] [get_bd_pins xlslice_30/Dout]
  connect_bd_net -net xlslice_31_Dout [get_bd_pins xlconcat_0/In19] [get_bd_pins xlslice_31/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlconcat_0/In0] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlconcat_0/In28] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins xlconcat_0/In24] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins xlconcat_0/In20] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlconcat_0/In16] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_0/In13] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlconcat_0/In9] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hier_3
proc create_hier_cell_hier_3 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hier_3() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 Din
  create_bd_pin -dir O -from 31 -to 0 dout_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {32} \
 ] $xlconcat_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {9} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create instance: xlslice_10, and set properties
  set xlslice_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {10} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_10

  # Create instance: xlslice_11, and set properties
  set xlslice_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_11 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {11} \
   CONFIG.DIN_TO {11} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_11

  # Create instance: xlslice_12, and set properties
  set xlslice_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_12 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {12} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_12

  # Create instance: xlslice_13, and set properties
  set xlslice_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_13 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {13} \
   CONFIG.DIN_TO {13} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_13

  # Create instance: xlslice_14, and set properties
  set xlslice_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_14 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {14} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_14

  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {15} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_15

  # Create instance: xlslice_16, and set properties
  set xlslice_16 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_16 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_16

  # Create instance: xlslice_17, and set properties
  set xlslice_17 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_17 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_17

  # Create instance: xlslice_18, and set properties
  set xlslice_18 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_18 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_18

  # Create instance: xlslice_19, and set properties
  set xlslice_19 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_19 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {19} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_19

  # Create instance: xlslice_20, and set properties
  set xlslice_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_20 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {20} \
   CONFIG.DIN_TO {20} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_20

  # Create instance: xlslice_21, and set properties
  set xlslice_21 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_21 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {21} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_21

  # Create instance: xlslice_22, and set properties
  set xlslice_22 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_22 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {22} \
   CONFIG.DIN_TO {22} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_22

  # Create instance: xlslice_23, and set properties
  set xlslice_23 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_23 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {23} \
   CONFIG.DIN_TO {23} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_23

  # Create instance: xlslice_24, and set properties
  set xlslice_24 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_24 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {24} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_24

  # Create instance: xlslice_25, and set properties
  set xlslice_25 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_25 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_25

  # Create instance: xlslice_26, and set properties
  set xlslice_26 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_26 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {26} \
   CONFIG.DIN_TO {26} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_26

  # Create instance: xlslice_27, and set properties
  set xlslice_27 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_27 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {27} \
   CONFIG.DIN_TO {27} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_27

  # Create instance: xlslice_28, and set properties
  set xlslice_28 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_28 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {28} \
   CONFIG.DIN_TO {28} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_28

  # Create instance: xlslice_29, and set properties
  set xlslice_29 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_29 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {29} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_29

  # Create instance: xlslice_30, and set properties
  set xlslice_30 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_30 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {30} \
   CONFIG.DIN_TO {30} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_30

  # Create instance: xlslice_31, and set properties
  set xlslice_31 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_31 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {31} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_31

  # Create port connections
  connect_bd_net -net xlconcat_0_dout [get_bd_pins Din] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_10/Din] [get_bd_pins xlslice_11/Din] [get_bd_pins xlslice_12/Din] [get_bd_pins xlslice_13/Din] [get_bd_pins xlslice_14/Din] [get_bd_pins xlslice_15/Din] [get_bd_pins xlslice_16/Din] [get_bd_pins xlslice_17/Din] [get_bd_pins xlslice_18/Din] [get_bd_pins xlslice_19/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_20/Din] [get_bd_pins xlslice_21/Din] [get_bd_pins xlslice_22/Din] [get_bd_pins xlslice_23/Din] [get_bd_pins xlslice_24/Din] [get_bd_pins xlslice_25/Din] [get_bd_pins xlslice_26/Din] [get_bd_pins xlslice_27/Din] [get_bd_pins xlslice_28/Din] [get_bd_pins xlslice_29/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_30/Din] [get_bd_pins xlslice_31/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net xlconcat_0_dout1 [get_bd_pins dout_0] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlconcat_0/In12] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_10_Dout [get_bd_pins xlconcat_0/In5] [get_bd_pins xlslice_10/Dout]
  connect_bd_net -net xlslice_11_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_11/Dout]
  connect_bd_net -net xlslice_12_Dout [get_bd_pins xlconcat_0/In29] [get_bd_pins xlslice_12/Dout]
  connect_bd_net -net xlslice_13_Dout [get_bd_pins xlconcat_0/In25] [get_bd_pins xlslice_13/Dout]
  connect_bd_net -net xlslice_14_Dout [get_bd_pins xlconcat_0/In21] [get_bd_pins xlslice_14/Dout]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins xlconcat_0/In17] [get_bd_pins xlslice_15/Dout]
  connect_bd_net -net xlslice_16_Dout [get_bd_pins xlconcat_0/In14] [get_bd_pins xlslice_16/Dout]
  connect_bd_net -net xlslice_17_Dout [get_bd_pins xlconcat_0/In10] [get_bd_pins xlslice_17/Dout]
  connect_bd_net -net xlslice_18_Dout [get_bd_pins xlconcat_0/In6] [get_bd_pins xlslice_18/Dout]
  connect_bd_net -net xlslice_19_Dout [get_bd_pins xlconcat_0/In2] [get_bd_pins xlslice_19/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlconcat_0/In8] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_20_Dout [get_bd_pins xlconcat_0/In30] [get_bd_pins xlslice_20/Dout]
  connect_bd_net -net xlslice_21_Dout [get_bd_pins xlconcat_0/In26] [get_bd_pins xlslice_21/Dout]
  connect_bd_net -net xlslice_22_Dout [get_bd_pins xlconcat_0/In22] [get_bd_pins xlslice_22/Dout]
  connect_bd_net -net xlslice_23_Dout [get_bd_pins xlconcat_0/In18] [get_bd_pins xlslice_23/Dout]
  connect_bd_net -net xlslice_24_Dout [get_bd_pins xlconcat_0/In15] [get_bd_pins xlslice_24/Dout]
  connect_bd_net -net xlslice_25_Dout [get_bd_pins xlconcat_0/In11] [get_bd_pins xlslice_25/Dout]
  connect_bd_net -net xlslice_26_Dout [get_bd_pins xlconcat_0/In7] [get_bd_pins xlslice_26/Dout]
  connect_bd_net -net xlslice_27_Dout [get_bd_pins xlconcat_0/In3] [get_bd_pins xlslice_27/Dout]
  connect_bd_net -net xlslice_28_Dout [get_bd_pins xlconcat_0/In31] [get_bd_pins xlslice_28/Dout]
  connect_bd_net -net xlslice_29_Dout [get_bd_pins xlconcat_0/In27] [get_bd_pins xlslice_29/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlconcat_0/In4] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_30_Dout [get_bd_pins xlconcat_0/In23] [get_bd_pins xlslice_30/Dout]
  connect_bd_net -net xlslice_31_Dout [get_bd_pins xlconcat_0/In19] [get_bd_pins xlslice_31/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlconcat_0/In0] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlconcat_0/In28] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins xlconcat_0/In24] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins xlconcat_0/In20] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlconcat_0/In16] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_0/In13] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlconcat_0/In9] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_15
proc create_hier_cell_lgain_adc_15 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_15() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC


  # Create pins
  create_bd_pin -dir I -from 7 -to 0 In0
  create_bd_pin -dir I -from 7 -to 0 In1
  create_bd_pin -dir I -from 7 -to 0 In2
  create_bd_pin -dir I -from 7 -to 0 In3
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir I S_ACLK
  create_bd_pin -dir I S_ARESETN
  create_bd_pin -dir O -from 31 -to 0 dout_0_3
  create_bd_pin -dir I empty_0
  create_bd_pin -dir I empty_1
  create_bd_pin -dir I empty_2
  create_bd_pin -dir I empty_3

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]

  # Create instance: empty_concat, and set properties
  set empty_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 empty_concat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $empty_concat

  # Create instance: empty_inverse, and set properties
  set empty_inverse [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 empty_inverse ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $empty_inverse

  # Create instance: fifo_generator_0, and set properties
  set fifo_generator_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_generator_0 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TKEEP_WIDTH {4} \
   CONFIG.TSTRB_WIDTH {4} \
   CONFIG.TUSER_WIDTH {0} \
 ] $fifo_generator_0

  # Create instance: hier_3
  create_hier_cell_hier_3_3 $hier_obj hier_3

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_3, and set properties
  set xlconcat_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_3 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $xlconcat_3

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins M_AXIS_LGAIN_ADC] [get_bd_intf_pins axis_clock_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net fifo_generator_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/S_AXIS] [get_bd_intf_pins fifo_generator_0/M_AXIS]

  # Create port connections
  connect_bd_net -net In0_1 [get_bd_pins In0] [get_bd_pins xlconcat_3/In0]
  connect_bd_net -net In1_1 [get_bd_pins In1] [get_bd_pins xlconcat_3/In1]
  connect_bd_net -net In2_1 [get_bd_pins In2] [get_bd_pins xlconcat_3/In2]
  connect_bd_net -net In3_1 [get_bd_pins In3] [get_bd_pins xlconcat_3/In3]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins axis_clock_converter_0/m_axis_aclk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins axis_clock_converter_0/m_axis_aresetn]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins S_ARESETN] [get_bd_pins axis_clock_converter_0/s_axis_aresetn] [get_bd_pins fifo_generator_0/s_aresetn]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_ACLK] [get_bd_pins axis_clock_converter_0/s_axis_aclk] [get_bd_pins fifo_generator_0/s_aclk]
  connect_bd_net -net empty_0_1 [get_bd_pins empty_0] [get_bd_pins empty_concat/In0]
  connect_bd_net -net empty_1_1 [get_bd_pins empty_1] [get_bd_pins empty_concat/In1]
  connect_bd_net -net empty_2_1 [get_bd_pins empty_2] [get_bd_pins empty_concat/In2]
  connect_bd_net -net empty_3_1 [get_bd_pins empty_3] [get_bd_pins empty_concat/In3]
  connect_bd_net -net empty_inverse_Res [get_bd_pins empty_inverse/Res] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net hier_3_dout_0 [get_bd_pins dout_0_3] [get_bd_pins fifo_generator_0/s_axis_tdata] [get_bd_pins hier_3/dout_0]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins fifo_generator_0/s_axis_tvalid] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins empty_concat/dout] [get_bd_pins empty_inverse/Op1]
  connect_bd_net -net xlconcat_3_dout [get_bd_pins hier_3/Din] [get_bd_pins xlconcat_3/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_14
proc create_hier_cell_lgain_adc_14 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_14() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC


  # Create pins
  create_bd_pin -dir I -from 7 -to 0 In0
  create_bd_pin -dir I -from 7 -to 0 In1
  create_bd_pin -dir I -from 7 -to 0 In2
  create_bd_pin -dir I -from 7 -to 0 In3
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir I S_ACLK
  create_bd_pin -dir I S_ARESETN
  create_bd_pin -dir O -from 31 -to 0 dout_0_1
  create_bd_pin -dir I empty_0
  create_bd_pin -dir I empty_1
  create_bd_pin -dir I empty_2
  create_bd_pin -dir I empty_3

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]

  # Create instance: empty_concat, and set properties
  set empty_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 empty_concat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $empty_concat

  # Create instance: empty_inverse, and set properties
  set empty_inverse [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 empty_inverse ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $empty_inverse

  # Create instance: fifo_generator_0, and set properties
  set fifo_generator_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_generator_0 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TKEEP_WIDTH {4} \
   CONFIG.TSTRB_WIDTH {4} \
   CONFIG.TUSER_WIDTH {0} \
 ] $fifo_generator_0

  # Create instance: hier_1
  create_hier_cell_hier_1_3 $hier_obj hier_1

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_1, and set properties
  set xlconcat_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_1 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $xlconcat_1

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins M_AXIS_LGAIN_ADC] [get_bd_intf_pins axis_clock_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net fifo_generator_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/S_AXIS] [get_bd_intf_pins fifo_generator_0/M_AXIS]

  # Create port connections
  connect_bd_net -net In0_1 [get_bd_pins In0] [get_bd_pins xlconcat_1/In0]
  connect_bd_net -net In1_1 [get_bd_pins In1] [get_bd_pins xlconcat_1/In1]
  connect_bd_net -net In2_1 [get_bd_pins In2] [get_bd_pins xlconcat_1/In2]
  connect_bd_net -net In3_1 [get_bd_pins In3] [get_bd_pins xlconcat_1/In3]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins axis_clock_converter_0/m_axis_aclk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins axis_clock_converter_0/m_axis_aresetn]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins S_ARESETN] [get_bd_pins axis_clock_converter_0/s_axis_aresetn] [get_bd_pins fifo_generator_0/s_aresetn]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_ACLK] [get_bd_pins axis_clock_converter_0/s_axis_aclk] [get_bd_pins fifo_generator_0/s_aclk]
  connect_bd_net -net empty_0_1 [get_bd_pins empty_0] [get_bd_pins empty_concat/In0]
  connect_bd_net -net empty_1_1 [get_bd_pins empty_1] [get_bd_pins empty_concat/In1]
  connect_bd_net -net empty_2_1 [get_bd_pins empty_2] [get_bd_pins empty_concat/In2]
  connect_bd_net -net empty_3_1 [get_bd_pins empty_3] [get_bd_pins empty_concat/In3]
  connect_bd_net -net empty_inverse_Res [get_bd_pins empty_inverse/Res] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net hier_1_dout_0 [get_bd_pins dout_0_1] [get_bd_pins fifo_generator_0/s_axis_tdata] [get_bd_pins hier_1/dout_0]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins fifo_generator_0/s_axis_tvalid] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins empty_concat/dout] [get_bd_pins empty_inverse/Op1]
  connect_bd_net -net xlconcat_1_dout [get_bd_pins hier_1/Din] [get_bd_pins xlconcat_1/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_13
proc create_hier_cell_lgain_adc_13 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_13() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC


  # Create pins
  create_bd_pin -dir I -from 7 -to 0 In0
  create_bd_pin -dir I -from 7 -to 0 In1
  create_bd_pin -dir I -from 7 -to 0 In2
  create_bd_pin -dir I -from 7 -to 0 In3
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir I S_ACLK
  create_bd_pin -dir I S_ARESETN
  create_bd_pin -dir O -from 31 -to 0 dout_0_2
  create_bd_pin -dir I empty_0
  create_bd_pin -dir I empty_1
  create_bd_pin -dir I empty_2
  create_bd_pin -dir I empty_3

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]

  # Create instance: empty_concat, and set properties
  set empty_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 empty_concat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $empty_concat

  # Create instance: empty_inverse, and set properties
  set empty_inverse [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 empty_inverse ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $empty_inverse

  # Create instance: fifo_generator_0, and set properties
  set fifo_generator_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_generator_0 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TKEEP_WIDTH {4} \
   CONFIG.TSTRB_WIDTH {4} \
   CONFIG.TUSER_WIDTH {0} \
 ] $fifo_generator_0

  # Create instance: hier_2
  create_hier_cell_hier_2_3 $hier_obj hier_2

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_2, and set properties
  set xlconcat_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_2 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $xlconcat_2

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins M_AXIS_LGAIN_ADC] [get_bd_intf_pins axis_clock_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net fifo_generator_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/S_AXIS] [get_bd_intf_pins fifo_generator_0/M_AXIS]

  # Create port connections
  connect_bd_net -net In0_1 [get_bd_pins In0] [get_bd_pins xlconcat_2/In0]
  connect_bd_net -net In1_1 [get_bd_pins In1] [get_bd_pins xlconcat_2/In1]
  connect_bd_net -net In2_1 [get_bd_pins In2] [get_bd_pins xlconcat_2/In2]
  connect_bd_net -net In3_1 [get_bd_pins In3] [get_bd_pins xlconcat_2/In3]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins axis_clock_converter_0/m_axis_aclk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins axis_clock_converter_0/m_axis_aresetn]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins S_ARESETN] [get_bd_pins axis_clock_converter_0/s_axis_aresetn] [get_bd_pins fifo_generator_0/s_aresetn]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_ACLK] [get_bd_pins axis_clock_converter_0/s_axis_aclk] [get_bd_pins fifo_generator_0/s_aclk]
  connect_bd_net -net empty_0_1 [get_bd_pins empty_0] [get_bd_pins empty_concat/In0]
  connect_bd_net -net empty_1_1 [get_bd_pins empty_1] [get_bd_pins empty_concat/In1]
  connect_bd_net -net empty_2_1 [get_bd_pins empty_2] [get_bd_pins empty_concat/In2]
  connect_bd_net -net empty_3_1 [get_bd_pins empty_3] [get_bd_pins empty_concat/In3]
  connect_bd_net -net empty_inverse_Res [get_bd_pins empty_inverse/Res] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net hier_2_dout_0 [get_bd_pins dout_0_2] [get_bd_pins fifo_generator_0/s_axis_tdata] [get_bd_pins hier_2/dout_0]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins fifo_generator_0/s_axis_tvalid] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins empty_concat/dout] [get_bd_pins empty_inverse/Op1]
  connect_bd_net -net xlconcat_2_dout [get_bd_pins hier_2/Din] [get_bd_pins xlconcat_2/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_12
proc create_hier_cell_lgain_adc_12 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_12() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC


  # Create pins
  create_bd_pin -dir I -from 7 -to 0 In0
  create_bd_pin -dir I -from 7 -to 0 In1
  create_bd_pin -dir I -from 7 -to 0 In2
  create_bd_pin -dir I -from 7 -to 0 In3
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir I S_ACLK
  create_bd_pin -dir I S_ARESETN
  create_bd_pin -dir O -from 31 -to 0 dout_0_0
  create_bd_pin -dir I empty_0
  create_bd_pin -dir I empty_1
  create_bd_pin -dir I empty_2
  create_bd_pin -dir I empty_3

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]

  # Create instance: empty_concat, and set properties
  set empty_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 empty_concat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $empty_concat

  # Create instance: empty_inverse, and set properties
  set empty_inverse [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 empty_inverse ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $empty_inverse

  # Create instance: fifo_generator_0, and set properties
  set fifo_generator_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_generator_0 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TKEEP_WIDTH {4} \
   CONFIG.TSTRB_WIDTH {4} \
   CONFIG.TUSER_WIDTH {0} \
 ] $fifo_generator_0

  # Create instance: hier_0
  create_hier_cell_hier_0_3 $hier_obj hier_0

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $xlconcat_0

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins M_AXIS_LGAIN_ADC] [get_bd_intf_pins axis_clock_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net fifo_generator_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/S_AXIS] [get_bd_intf_pins fifo_generator_0/M_AXIS]

  # Create port connections
  connect_bd_net -net In0_1 [get_bd_pins In0] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net In1_1 [get_bd_pins In1] [get_bd_pins xlconcat_0/In1]
  connect_bd_net -net In2_1 [get_bd_pins In2] [get_bd_pins xlconcat_0/In2]
  connect_bd_net -net In3_1 [get_bd_pins In3] [get_bd_pins xlconcat_0/In3]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins axis_clock_converter_0/m_axis_aclk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins axis_clock_converter_0/m_axis_aresetn]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins S_ARESETN] [get_bd_pins axis_clock_converter_0/s_axis_aresetn] [get_bd_pins fifo_generator_0/s_aresetn]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_ACLK] [get_bd_pins axis_clock_converter_0/s_axis_aclk] [get_bd_pins fifo_generator_0/s_aclk]
  connect_bd_net -net empty_0_1 [get_bd_pins empty_0] [get_bd_pins empty_concat/In0]
  connect_bd_net -net empty_1_1 [get_bd_pins empty_1] [get_bd_pins empty_concat/In1]
  connect_bd_net -net empty_2_1 [get_bd_pins empty_2] [get_bd_pins empty_concat/In2]
  connect_bd_net -net empty_3_1 [get_bd_pins empty_3] [get_bd_pins empty_concat/In3]
  connect_bd_net -net empty_inverse_Res [get_bd_pins empty_inverse/Res] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net hier_0_dout_0 [get_bd_pins dout_0_0] [get_bd_pins fifo_generator_0/s_axis_tdata] [get_bd_pins hier_0/dout_0]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins fifo_generator_0/s_axis_tvalid] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins empty_concat/dout] [get_bd_pins empty_inverse/Op1]
  connect_bd_net -net xlconcat_0_dout_1 [get_bd_pins hier_0/Din] [get_bd_pins xlconcat_0/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_11
proc create_hier_cell_lgain_adc_11 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_11() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC


  # Create pins
  create_bd_pin -dir I -from 7 -to 0 In0
  create_bd_pin -dir I -from 7 -to 0 In1
  create_bd_pin -dir I -from 7 -to 0 In2
  create_bd_pin -dir I -from 7 -to 0 In3
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir I S_ACLK
  create_bd_pin -dir I S_ARESETN
  create_bd_pin -dir O -from 31 -to 0 dout_0_0
  create_bd_pin -dir I empty_0
  create_bd_pin -dir I empty_1
  create_bd_pin -dir I empty_2
  create_bd_pin -dir I empty_3

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]

  # Create instance: empty_concat, and set properties
  set empty_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 empty_concat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $empty_concat

  # Create instance: empty_inverse, and set properties
  set empty_inverse [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 empty_inverse ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $empty_inverse

  # Create instance: fifo_generator_0, and set properties
  set fifo_generator_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_generator_0 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TKEEP_WIDTH {4} \
   CONFIG.TSTRB_WIDTH {4} \
   CONFIG.TUSER_WIDTH {0} \
 ] $fifo_generator_0

  # Create instance: hier_0
  create_hier_cell_hier_0_2 $hier_obj hier_0

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $xlconcat_0

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins M_AXIS_LGAIN_ADC] [get_bd_intf_pins axis_clock_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net fifo_generator_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/S_AXIS] [get_bd_intf_pins fifo_generator_0/M_AXIS]

  # Create port connections
  connect_bd_net -net In0_1 [get_bd_pins In0] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net In1_1 [get_bd_pins In1] [get_bd_pins xlconcat_0/In1]
  connect_bd_net -net In2_1 [get_bd_pins In2] [get_bd_pins xlconcat_0/In2]
  connect_bd_net -net In3_1 [get_bd_pins In3] [get_bd_pins xlconcat_0/In3]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins axis_clock_converter_0/m_axis_aclk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins axis_clock_converter_0/m_axis_aresetn]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins S_ARESETN] [get_bd_pins axis_clock_converter_0/s_axis_aresetn] [get_bd_pins fifo_generator_0/s_aresetn]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_ACLK] [get_bd_pins axis_clock_converter_0/s_axis_aclk] [get_bd_pins fifo_generator_0/s_aclk]
  connect_bd_net -net empty_0_1 [get_bd_pins empty_0] [get_bd_pins empty_concat/In0]
  connect_bd_net -net empty_1_1 [get_bd_pins empty_1] [get_bd_pins empty_concat/In1]
  connect_bd_net -net empty_2_1 [get_bd_pins empty_2] [get_bd_pins empty_concat/In2]
  connect_bd_net -net empty_3_1 [get_bd_pins empty_3] [get_bd_pins empty_concat/In3]
  connect_bd_net -net empty_inverse_Res [get_bd_pins empty_inverse/Res] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net hier_0_dout_0 [get_bd_pins dout_0_0] [get_bd_pins fifo_generator_0/s_axis_tdata] [get_bd_pins hier_0/dout_0]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins fifo_generator_0/s_axis_tvalid] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins empty_concat/dout] [get_bd_pins empty_inverse/Op1]
  connect_bd_net -net xlconcat_0_dout_1 [get_bd_pins hier_0/Din] [get_bd_pins xlconcat_0/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_10
proc create_hier_cell_lgain_adc_10 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_10() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC


  # Create pins
  create_bd_pin -dir I -from 7 -to 0 In0
  create_bd_pin -dir I -from 7 -to 0 In1
  create_bd_pin -dir I -from 7 -to 0 In2
  create_bd_pin -dir I -from 7 -to 0 In3
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir I S_ACLK
  create_bd_pin -dir I S_ARESETN
  create_bd_pin -dir O -from 31 -to 0 dout_0_1
  create_bd_pin -dir I empty_0
  create_bd_pin -dir I empty_1
  create_bd_pin -dir I empty_2
  create_bd_pin -dir I empty_3

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]

  # Create instance: empty_concat, and set properties
  set empty_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 empty_concat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $empty_concat

  # Create instance: empty_inverse, and set properties
  set empty_inverse [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 empty_inverse ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $empty_inverse

  # Create instance: fifo_generator_0, and set properties
  set fifo_generator_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_generator_0 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TKEEP_WIDTH {4} \
   CONFIG.TSTRB_WIDTH {4} \
   CONFIG.TUSER_WIDTH {0} \
 ] $fifo_generator_0

  # Create instance: hier_1
  create_hier_cell_hier_1_2 $hier_obj hier_1

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_1, and set properties
  set xlconcat_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_1 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $xlconcat_1

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins M_AXIS_LGAIN_ADC] [get_bd_intf_pins axis_clock_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net fifo_generator_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/S_AXIS] [get_bd_intf_pins fifo_generator_0/M_AXIS]

  # Create port connections
  connect_bd_net -net In0_1 [get_bd_pins In0] [get_bd_pins xlconcat_1/In0]
  connect_bd_net -net In1_1 [get_bd_pins In1] [get_bd_pins xlconcat_1/In1]
  connect_bd_net -net In2_1 [get_bd_pins In2] [get_bd_pins xlconcat_1/In2]
  connect_bd_net -net In3_1 [get_bd_pins In3] [get_bd_pins xlconcat_1/In3]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins axis_clock_converter_0/m_axis_aclk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins axis_clock_converter_0/m_axis_aresetn]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins S_ARESETN] [get_bd_pins axis_clock_converter_0/s_axis_aresetn] [get_bd_pins fifo_generator_0/s_aresetn]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_ACLK] [get_bd_pins axis_clock_converter_0/s_axis_aclk] [get_bd_pins fifo_generator_0/s_aclk]
  connect_bd_net -net empty_0_1 [get_bd_pins empty_0] [get_bd_pins empty_concat/In0]
  connect_bd_net -net empty_1_1 [get_bd_pins empty_1] [get_bd_pins empty_concat/In1]
  connect_bd_net -net empty_2_1 [get_bd_pins empty_2] [get_bd_pins empty_concat/In2]
  connect_bd_net -net empty_3_1 [get_bd_pins empty_3] [get_bd_pins empty_concat/In3]
  connect_bd_net -net empty_inverse_Res [get_bd_pins empty_inverse/Res] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net hier_1_dout_0 [get_bd_pins dout_0_1] [get_bd_pins fifo_generator_0/s_axis_tdata] [get_bd_pins hier_1/dout_0]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins fifo_generator_0/s_axis_tvalid] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins empty_concat/dout] [get_bd_pins empty_inverse/Op1]
  connect_bd_net -net xlconcat_1_dout [get_bd_pins hier_1/Din] [get_bd_pins xlconcat_1/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_9
proc create_hier_cell_lgain_adc_9 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_9() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC


  # Create pins
  create_bd_pin -dir I -from 7 -to 0 In0
  create_bd_pin -dir I -from 7 -to 0 In1
  create_bd_pin -dir I -from 7 -to 0 In2
  create_bd_pin -dir I -from 7 -to 0 In3
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir I S_ACLK
  create_bd_pin -dir I S_ARESETN
  create_bd_pin -dir O -from 31 -to 0 dout_0_2
  create_bd_pin -dir I empty_0
  create_bd_pin -dir I empty_1
  create_bd_pin -dir I empty_2
  create_bd_pin -dir I empty_3

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]

  # Create instance: empty_concat, and set properties
  set empty_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 empty_concat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $empty_concat

  # Create instance: empty_inverse, and set properties
  set empty_inverse [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 empty_inverse ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $empty_inverse

  # Create instance: fifo_generator_0, and set properties
  set fifo_generator_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_generator_0 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TKEEP_WIDTH {4} \
   CONFIG.TSTRB_WIDTH {4} \
   CONFIG.TUSER_WIDTH {0} \
 ] $fifo_generator_0

  # Create instance: hier_2
  create_hier_cell_hier_2_2 $hier_obj hier_2

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_2, and set properties
  set xlconcat_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_2 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $xlconcat_2

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins M_AXIS_LGAIN_ADC] [get_bd_intf_pins axis_clock_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net fifo_generator_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/S_AXIS] [get_bd_intf_pins fifo_generator_0/M_AXIS]

  # Create port connections
  connect_bd_net -net In0_1 [get_bd_pins In0] [get_bd_pins xlconcat_2/In0]
  connect_bd_net -net In1_1 [get_bd_pins In1] [get_bd_pins xlconcat_2/In1]
  connect_bd_net -net In2_1 [get_bd_pins In2] [get_bd_pins xlconcat_2/In2]
  connect_bd_net -net In3_1 [get_bd_pins In3] [get_bd_pins xlconcat_2/In3]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins axis_clock_converter_0/m_axis_aclk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins axis_clock_converter_0/m_axis_aresetn]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins S_ARESETN] [get_bd_pins axis_clock_converter_0/s_axis_aresetn] [get_bd_pins fifo_generator_0/s_aresetn]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_ACLK] [get_bd_pins axis_clock_converter_0/s_axis_aclk] [get_bd_pins fifo_generator_0/s_aclk]
  connect_bd_net -net empty_0_1 [get_bd_pins empty_0] [get_bd_pins empty_concat/In0]
  connect_bd_net -net empty_1_1 [get_bd_pins empty_1] [get_bd_pins empty_concat/In1]
  connect_bd_net -net empty_2_1 [get_bd_pins empty_2] [get_bd_pins empty_concat/In2]
  connect_bd_net -net empty_3_1 [get_bd_pins empty_3] [get_bd_pins empty_concat/In3]
  connect_bd_net -net empty_inverse_Res [get_bd_pins empty_inverse/Res] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net hier_2_dout_0 [get_bd_pins dout_0_2] [get_bd_pins fifo_generator_0/s_axis_tdata] [get_bd_pins hier_2/dout_0]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins fifo_generator_0/s_axis_tvalid] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins empty_concat/dout] [get_bd_pins empty_inverse/Op1]
  connect_bd_net -net xlconcat_2_dout [get_bd_pins hier_2/Din] [get_bd_pins xlconcat_2/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_8
proc create_hier_cell_lgain_adc_8 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_8() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC


  # Create pins
  create_bd_pin -dir I -from 7 -to 0 In0
  create_bd_pin -dir I -from 7 -to 0 In1
  create_bd_pin -dir I -from 7 -to 0 In2
  create_bd_pin -dir I -from 7 -to 0 In3
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir I S_ACLK
  create_bd_pin -dir I S_ARESETN
  create_bd_pin -dir O -from 31 -to 0 dout_0_3
  create_bd_pin -dir I empty_0
  create_bd_pin -dir I empty_1
  create_bd_pin -dir I empty_2
  create_bd_pin -dir I empty_3

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]

  # Create instance: empty_concat, and set properties
  set empty_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 empty_concat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $empty_concat

  # Create instance: empty_inverse, and set properties
  set empty_inverse [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 empty_inverse ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $empty_inverse

  # Create instance: fifo_generator_0, and set properties
  set fifo_generator_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_generator_0 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TKEEP_WIDTH {4} \
   CONFIG.TSTRB_WIDTH {4} \
   CONFIG.TUSER_WIDTH {0} \
 ] $fifo_generator_0

  # Create instance: hier_3
  create_hier_cell_hier_3_2 $hier_obj hier_3

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_3, and set properties
  set xlconcat_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_3 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $xlconcat_3

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins M_AXIS_LGAIN_ADC] [get_bd_intf_pins axis_clock_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net fifo_generator_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/S_AXIS] [get_bd_intf_pins fifo_generator_0/M_AXIS]

  # Create port connections
  connect_bd_net -net In0_1 [get_bd_pins In0] [get_bd_pins xlconcat_3/In0]
  connect_bd_net -net In1_1 [get_bd_pins In1] [get_bd_pins xlconcat_3/In1]
  connect_bd_net -net In2_1 [get_bd_pins In2] [get_bd_pins xlconcat_3/In2]
  connect_bd_net -net In3_1 [get_bd_pins In3] [get_bd_pins xlconcat_3/In3]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins axis_clock_converter_0/m_axis_aclk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins axis_clock_converter_0/m_axis_aresetn]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins S_ARESETN] [get_bd_pins axis_clock_converter_0/s_axis_aresetn] [get_bd_pins fifo_generator_0/s_aresetn]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_ACLK] [get_bd_pins axis_clock_converter_0/s_axis_aclk] [get_bd_pins fifo_generator_0/s_aclk]
  connect_bd_net -net empty_0_1 [get_bd_pins empty_0] [get_bd_pins empty_concat/In0]
  connect_bd_net -net empty_1_1 [get_bd_pins empty_1] [get_bd_pins empty_concat/In1]
  connect_bd_net -net empty_2_1 [get_bd_pins empty_2] [get_bd_pins empty_concat/In2]
  connect_bd_net -net empty_3_1 [get_bd_pins empty_3] [get_bd_pins empty_concat/In3]
  connect_bd_net -net empty_inverse_Res [get_bd_pins empty_inverse/Res] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net hier_3_dout_0 [get_bd_pins dout_0_3] [get_bd_pins fifo_generator_0/s_axis_tdata] [get_bd_pins hier_3/dout_0]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins fifo_generator_0/s_axis_tvalid] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins empty_concat/dout] [get_bd_pins empty_inverse/Op1]
  connect_bd_net -net xlconcat_3_dout [get_bd_pins hier_3/Din] [get_bd_pins xlconcat_3/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_7
proc create_hier_cell_lgain_adc_7 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_7() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC


  # Create pins
  create_bd_pin -dir I -from 7 -to 0 In0
  create_bd_pin -dir I -from 7 -to 0 In1
  create_bd_pin -dir I -from 7 -to 0 In2
  create_bd_pin -dir I -from 7 -to 0 In3
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir I S_ACLK
  create_bd_pin -dir I S_ARESETN
  create_bd_pin -dir O -from 31 -to 0 dout_0_0
  create_bd_pin -dir I empty_0
  create_bd_pin -dir I empty_1
  create_bd_pin -dir I empty_2
  create_bd_pin -dir I empty_3

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]

  # Create instance: empty_concat, and set properties
  set empty_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 empty_concat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $empty_concat

  # Create instance: empty_inverse, and set properties
  set empty_inverse [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 empty_inverse ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $empty_inverse

  # Create instance: fifo_generator_0, and set properties
  set fifo_generator_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_generator_0 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TKEEP_WIDTH {4} \
   CONFIG.TSTRB_WIDTH {4} \
   CONFIG.TUSER_WIDTH {0} \
 ] $fifo_generator_0

  # Create instance: hier_0
  create_hier_cell_hier_0_1 $hier_obj hier_0

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $xlconcat_0

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins M_AXIS_LGAIN_ADC] [get_bd_intf_pins axis_clock_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net fifo_generator_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/S_AXIS] [get_bd_intf_pins fifo_generator_0/M_AXIS]

  # Create port connections
  connect_bd_net -net In0_1 [get_bd_pins In0] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net In1_1 [get_bd_pins In1] [get_bd_pins xlconcat_0/In1]
  connect_bd_net -net In2_1 [get_bd_pins In2] [get_bd_pins xlconcat_0/In2]
  connect_bd_net -net In3_1 [get_bd_pins In3] [get_bd_pins xlconcat_0/In3]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins axis_clock_converter_0/m_axis_aclk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins axis_clock_converter_0/m_axis_aresetn]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins S_ARESETN] [get_bd_pins axis_clock_converter_0/s_axis_aresetn] [get_bd_pins fifo_generator_0/s_aresetn]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_ACLK] [get_bd_pins axis_clock_converter_0/s_axis_aclk] [get_bd_pins fifo_generator_0/s_aclk]
  connect_bd_net -net empty_0_1 [get_bd_pins empty_0] [get_bd_pins empty_concat/In0]
  connect_bd_net -net empty_1_1 [get_bd_pins empty_1] [get_bd_pins empty_concat/In1]
  connect_bd_net -net empty_2_1 [get_bd_pins empty_2] [get_bd_pins empty_concat/In2]
  connect_bd_net -net empty_3_1 [get_bd_pins empty_3] [get_bd_pins empty_concat/In3]
  connect_bd_net -net empty_inverse_Res [get_bd_pins empty_inverse/Res] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net hier_0_dout_0 [get_bd_pins dout_0_0] [get_bd_pins fifo_generator_0/s_axis_tdata] [get_bd_pins hier_0/dout_0]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins fifo_generator_0/s_axis_tvalid] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins empty_concat/dout] [get_bd_pins empty_inverse/Op1]
  connect_bd_net -net xlconcat_0_dout_1 [get_bd_pins hier_0/Din] [get_bd_pins xlconcat_0/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_6
proc create_hier_cell_lgain_adc_6 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_6() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC


  # Create pins
  create_bd_pin -dir I -from 7 -to 0 In0
  create_bd_pin -dir I -from 7 -to 0 In1
  create_bd_pin -dir I -from 7 -to 0 In2
  create_bd_pin -dir I -from 7 -to 0 In3
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir I S_ACLK
  create_bd_pin -dir I S_ARESETN
  create_bd_pin -dir O -from 31 -to 0 dout_0_1
  create_bd_pin -dir I empty_0
  create_bd_pin -dir I empty_1
  create_bd_pin -dir I empty_2
  create_bd_pin -dir I empty_3

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]

  # Create instance: empty_concat, and set properties
  set empty_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 empty_concat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $empty_concat

  # Create instance: empty_inverse, and set properties
  set empty_inverse [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 empty_inverse ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $empty_inverse

  # Create instance: fifo_generator_0, and set properties
  set fifo_generator_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_generator_0 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TKEEP_WIDTH {4} \
   CONFIG.TSTRB_WIDTH {4} \
   CONFIG.TUSER_WIDTH {0} \
 ] $fifo_generator_0

  # Create instance: hier_1
  create_hier_cell_hier_1_1 $hier_obj hier_1

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_1, and set properties
  set xlconcat_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_1 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $xlconcat_1

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins M_AXIS_LGAIN_ADC] [get_bd_intf_pins axis_clock_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net fifo_generator_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/S_AXIS] [get_bd_intf_pins fifo_generator_0/M_AXIS]

  # Create port connections
  connect_bd_net -net In0_1 [get_bd_pins In0] [get_bd_pins xlconcat_1/In0]
  connect_bd_net -net In1_1 [get_bd_pins In1] [get_bd_pins xlconcat_1/In1]
  connect_bd_net -net In2_1 [get_bd_pins In2] [get_bd_pins xlconcat_1/In2]
  connect_bd_net -net In3_1 [get_bd_pins In3] [get_bd_pins xlconcat_1/In3]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins axis_clock_converter_0/m_axis_aclk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins axis_clock_converter_0/m_axis_aresetn]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins S_ARESETN] [get_bd_pins axis_clock_converter_0/s_axis_aresetn] [get_bd_pins fifo_generator_0/s_aresetn]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_ACLK] [get_bd_pins axis_clock_converter_0/s_axis_aclk] [get_bd_pins fifo_generator_0/s_aclk]
  connect_bd_net -net empty_0_1 [get_bd_pins empty_0] [get_bd_pins empty_concat/In0]
  connect_bd_net -net empty_1_1 [get_bd_pins empty_1] [get_bd_pins empty_concat/In1]
  connect_bd_net -net empty_2_1 [get_bd_pins empty_2] [get_bd_pins empty_concat/In2]
  connect_bd_net -net empty_3_1 [get_bd_pins empty_3] [get_bd_pins empty_concat/In3]
  connect_bd_net -net empty_inverse_Res [get_bd_pins empty_inverse/Res] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net hier_1_dout_0 [get_bd_pins dout_0_1] [get_bd_pins fifo_generator_0/s_axis_tdata] [get_bd_pins hier_1/dout_0]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins fifo_generator_0/s_axis_tvalid] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins empty_concat/dout] [get_bd_pins empty_inverse/Op1]
  connect_bd_net -net xlconcat_1_dout [get_bd_pins hier_1/Din] [get_bd_pins xlconcat_1/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_5
proc create_hier_cell_lgain_adc_5 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_5() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC


  # Create pins
  create_bd_pin -dir I -from 7 -to 0 In0
  create_bd_pin -dir I -from 7 -to 0 In1
  create_bd_pin -dir I -from 7 -to 0 In2
  create_bd_pin -dir I -from 7 -to 0 In3
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir I S_ACLK
  create_bd_pin -dir I S_ARESETN
  create_bd_pin -dir O -from 31 -to 0 dout_0_2
  create_bd_pin -dir I empty_0
  create_bd_pin -dir I empty_1
  create_bd_pin -dir I empty_2
  create_bd_pin -dir I empty_3

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]

  # Create instance: empty_concat, and set properties
  set empty_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 empty_concat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $empty_concat

  # Create instance: empty_inverse, and set properties
  set empty_inverse [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 empty_inverse ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $empty_inverse

  # Create instance: fifo_generator_0, and set properties
  set fifo_generator_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_generator_0 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TKEEP_WIDTH {4} \
   CONFIG.TSTRB_WIDTH {4} \
   CONFIG.TUSER_WIDTH {0} \
 ] $fifo_generator_0

  # Create instance: hier_2
  create_hier_cell_hier_2_1 $hier_obj hier_2

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_2, and set properties
  set xlconcat_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_2 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $xlconcat_2

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins M_AXIS_LGAIN_ADC] [get_bd_intf_pins axis_clock_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net fifo_generator_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/S_AXIS] [get_bd_intf_pins fifo_generator_0/M_AXIS]

  # Create port connections
  connect_bd_net -net In0_1 [get_bd_pins In0] [get_bd_pins xlconcat_2/In0]
  connect_bd_net -net In1_1 [get_bd_pins In1] [get_bd_pins xlconcat_2/In1]
  connect_bd_net -net In2_1 [get_bd_pins In2] [get_bd_pins xlconcat_2/In2]
  connect_bd_net -net In3_1 [get_bd_pins In3] [get_bd_pins xlconcat_2/In3]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins axis_clock_converter_0/m_axis_aclk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins axis_clock_converter_0/m_axis_aresetn]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins S_ARESETN] [get_bd_pins axis_clock_converter_0/s_axis_aresetn] [get_bd_pins fifo_generator_0/s_aresetn]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_ACLK] [get_bd_pins axis_clock_converter_0/s_axis_aclk] [get_bd_pins fifo_generator_0/s_aclk]
  connect_bd_net -net empty_0_1 [get_bd_pins empty_0] [get_bd_pins empty_concat/In0]
  connect_bd_net -net empty_1_1 [get_bd_pins empty_1] [get_bd_pins empty_concat/In1]
  connect_bd_net -net empty_2_1 [get_bd_pins empty_2] [get_bd_pins empty_concat/In2]
  connect_bd_net -net empty_3_1 [get_bd_pins empty_3] [get_bd_pins empty_concat/In3]
  connect_bd_net -net empty_inverse_Res [get_bd_pins empty_inverse/Res] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net hier_2_dout_0 [get_bd_pins dout_0_2] [get_bd_pins fifo_generator_0/s_axis_tdata] [get_bd_pins hier_2/dout_0]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins fifo_generator_0/s_axis_tvalid] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins empty_concat/dout] [get_bd_pins empty_inverse/Op1]
  connect_bd_net -net xlconcat_2_dout [get_bd_pins hier_2/Din] [get_bd_pins xlconcat_2/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_4
proc create_hier_cell_lgain_adc_4 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_4() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC


  # Create pins
  create_bd_pin -dir I -from 7 -to 0 In0
  create_bd_pin -dir I -from 7 -to 0 In1
  create_bd_pin -dir I -from 7 -to 0 In2
  create_bd_pin -dir I -from 7 -to 0 In3
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir I S_ACLK
  create_bd_pin -dir I S_ARESETN
  create_bd_pin -dir O -from 31 -to 0 dout_0_3
  create_bd_pin -dir I empty_0
  create_bd_pin -dir I empty_1
  create_bd_pin -dir I empty_2
  create_bd_pin -dir I empty_3

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]

  # Create instance: empty_concat, and set properties
  set empty_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 empty_concat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $empty_concat

  # Create instance: empty_inverse, and set properties
  set empty_inverse [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 empty_inverse ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $empty_inverse

  # Create instance: fifo_generator_0, and set properties
  set fifo_generator_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_generator_0 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TKEEP_WIDTH {4} \
   CONFIG.TSTRB_WIDTH {4} \
   CONFIG.TUSER_WIDTH {0} \
 ] $fifo_generator_0

  # Create instance: hier_3
  create_hier_cell_hier_3_1 $hier_obj hier_3

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_3, and set properties
  set xlconcat_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_3 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $xlconcat_3

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins M_AXIS_LGAIN_ADC] [get_bd_intf_pins axis_clock_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net fifo_generator_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/S_AXIS] [get_bd_intf_pins fifo_generator_0/M_AXIS]

  # Create port connections
  connect_bd_net -net In0_1 [get_bd_pins In0] [get_bd_pins xlconcat_3/In0]
  connect_bd_net -net In1_1 [get_bd_pins In1] [get_bd_pins xlconcat_3/In1]
  connect_bd_net -net In2_1 [get_bd_pins In2] [get_bd_pins xlconcat_3/In2]
  connect_bd_net -net In3_1 [get_bd_pins In3] [get_bd_pins xlconcat_3/In3]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins axis_clock_converter_0/m_axis_aclk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins axis_clock_converter_0/m_axis_aresetn]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins S_ARESETN] [get_bd_pins axis_clock_converter_0/s_axis_aresetn] [get_bd_pins fifo_generator_0/s_aresetn]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_ACLK] [get_bd_pins axis_clock_converter_0/s_axis_aclk] [get_bd_pins fifo_generator_0/s_aclk]
  connect_bd_net -net empty_0_1 [get_bd_pins empty_0] [get_bd_pins empty_concat/In0]
  connect_bd_net -net empty_1_1 [get_bd_pins empty_1] [get_bd_pins empty_concat/In1]
  connect_bd_net -net empty_2_1 [get_bd_pins empty_2] [get_bd_pins empty_concat/In2]
  connect_bd_net -net empty_3_1 [get_bd_pins empty_3] [get_bd_pins empty_concat/In3]
  connect_bd_net -net empty_inverse_Res [get_bd_pins empty_inverse/Res] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net hier_3_dout_0 [get_bd_pins dout_0_3] [get_bd_pins fifo_generator_0/s_axis_tdata] [get_bd_pins hier_3/dout_0]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins fifo_generator_0/s_axis_tvalid] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins empty_concat/dout] [get_bd_pins empty_inverse/Op1]
  connect_bd_net -net xlconcat_3_dout [get_bd_pins hier_3/Din] [get_bd_pins xlconcat_3/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_3
proc create_hier_cell_lgain_adc_3 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_3() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC


  # Create pins
  create_bd_pin -dir I -from 7 -to 0 In0
  create_bd_pin -dir I -from 7 -to 0 In1
  create_bd_pin -dir I -from 7 -to 0 In2
  create_bd_pin -dir I -from 7 -to 0 In3
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir I S_ACLK
  create_bd_pin -dir I S_ARESETN
  create_bd_pin -dir O -from 31 -to 0 dout_0
  create_bd_pin -dir I empty_0
  create_bd_pin -dir I empty_1
  create_bd_pin -dir I empty_2
  create_bd_pin -dir I empty_3

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]

  # Create instance: empty_concat, and set properties
  set empty_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 empty_concat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $empty_concat

  # Create instance: empty_inverse, and set properties
  set empty_inverse [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 empty_inverse ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $empty_inverse

  # Create instance: fifo_generator_0, and set properties
  set fifo_generator_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_generator_0 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TKEEP_WIDTH {4} \
   CONFIG.TSTRB_WIDTH {4} \
   CONFIG.TUSER_WIDTH {0} \
 ] $fifo_generator_0

  # Create instance: hier_0
  create_hier_cell_hier_0 $hier_obj hier_0

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $xlconcat_0

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins M_AXIS_LGAIN_ADC] [get_bd_intf_pins axis_clock_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net fifo_generator_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/S_AXIS] [get_bd_intf_pins fifo_generator_0/M_AXIS]

  # Create port connections
  connect_bd_net -net In0_1 [get_bd_pins In0] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net In1_1 [get_bd_pins In1] [get_bd_pins xlconcat_0/In1]
  connect_bd_net -net In2_1 [get_bd_pins In2] [get_bd_pins xlconcat_0/In2]
  connect_bd_net -net In3_1 [get_bd_pins In3] [get_bd_pins xlconcat_0/In3]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins axis_clock_converter_0/m_axis_aclk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins axis_clock_converter_0/m_axis_aresetn]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins S_ARESETN] [get_bd_pins axis_clock_converter_0/s_axis_aresetn] [get_bd_pins fifo_generator_0/s_aresetn]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_ACLK] [get_bd_pins axis_clock_converter_0/s_axis_aclk] [get_bd_pins fifo_generator_0/s_aclk]
  connect_bd_net -net empty_0_1 [get_bd_pins empty_0] [get_bd_pins empty_concat/In0]
  connect_bd_net -net empty_1_1 [get_bd_pins empty_1] [get_bd_pins empty_concat/In1]
  connect_bd_net -net empty_2_1 [get_bd_pins empty_2] [get_bd_pins empty_concat/In2]
  connect_bd_net -net empty_3_1 [get_bd_pins empty_3] [get_bd_pins empty_concat/In3]
  connect_bd_net -net empty_inverse_Res [get_bd_pins empty_inverse/Res] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net hier_0_dout_0 [get_bd_pins dout_0] [get_bd_pins fifo_generator_0/s_axis_tdata] [get_bd_pins hier_0/dout_0]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins fifo_generator_0/s_axis_tvalid] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins hier_0/Din] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlconcat_0_dout1 [get_bd_pins empty_concat/dout] [get_bd_pins empty_inverse/Op1]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_2
proc create_hier_cell_lgain_adc_2 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_2() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC


  # Create pins
  create_bd_pin -dir I -from 7 -to 0 In0
  create_bd_pin -dir I -from 7 -to 0 In1
  create_bd_pin -dir I -from 7 -to 0 In2
  create_bd_pin -dir I -from 7 -to 0 In3
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir I S_ACLK
  create_bd_pin -dir I S_ARESETN
  create_bd_pin -dir O -from 31 -to 0 dout_0_0
  create_bd_pin -dir I empty_0
  create_bd_pin -dir I empty_1
  create_bd_pin -dir I empty_2
  create_bd_pin -dir I empty_3

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]

  # Create instance: empty_concat, and set properties
  set empty_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 empty_concat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $empty_concat

  # Create instance: empty_inverse, and set properties
  set empty_inverse [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 empty_inverse ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $empty_inverse

  # Create instance: fifo_generator_0, and set properties
  set fifo_generator_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_generator_0 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TKEEP_WIDTH {4} \
   CONFIG.TSTRB_WIDTH {4} \
   CONFIG.TUSER_WIDTH {0} \
 ] $fifo_generator_0

  # Create instance: hier_1
  create_hier_cell_hier_1 $hier_obj hier_1

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_1, and set properties
  set xlconcat_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_1 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $xlconcat_1

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins M_AXIS_LGAIN_ADC] [get_bd_intf_pins axis_clock_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net fifo_generator_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/S_AXIS] [get_bd_intf_pins fifo_generator_0/M_AXIS]

  # Create port connections
  connect_bd_net -net In0_1 [get_bd_pins In0] [get_bd_pins xlconcat_1/In0]
  connect_bd_net -net In1_1 [get_bd_pins In1] [get_bd_pins xlconcat_1/In1]
  connect_bd_net -net In2_1 [get_bd_pins In2] [get_bd_pins xlconcat_1/In2]
  connect_bd_net -net In3_1 [get_bd_pins In3] [get_bd_pins xlconcat_1/In3]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins axis_clock_converter_0/m_axis_aclk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins axis_clock_converter_0/m_axis_aresetn]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins S_ARESETN] [get_bd_pins axis_clock_converter_0/s_axis_aresetn] [get_bd_pins fifo_generator_0/s_aresetn]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_ACLK] [get_bd_pins axis_clock_converter_0/s_axis_aclk] [get_bd_pins fifo_generator_0/s_aclk]
  connect_bd_net -net empty_0_1 [get_bd_pins empty_0] [get_bd_pins empty_concat/In0]
  connect_bd_net -net empty_1_1 [get_bd_pins empty_1] [get_bd_pins empty_concat/In1]
  connect_bd_net -net empty_2_1 [get_bd_pins empty_2] [get_bd_pins empty_concat/In2]
  connect_bd_net -net empty_3_1 [get_bd_pins empty_3] [get_bd_pins empty_concat/In3]
  connect_bd_net -net empty_inverse_Res [get_bd_pins empty_inverse/Res] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net hier_1_dout_0 [get_bd_pins dout_0_0] [get_bd_pins fifo_generator_0/s_axis_tdata] [get_bd_pins hier_1/dout_0]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins fifo_generator_0/s_axis_tvalid] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins empty_concat/dout] [get_bd_pins empty_inverse/Op1]
  connect_bd_net -net xlconcat_1_dout [get_bd_pins hier_1/Din] [get_bd_pins xlconcat_1/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_1
proc create_hier_cell_lgain_adc_1 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_1() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC


  # Create pins
  create_bd_pin -dir I -from 7 -to 0 In0
  create_bd_pin -dir I -from 7 -to 0 In1
  create_bd_pin -dir I -from 7 -to 0 In2
  create_bd_pin -dir I -from 7 -to 0 In3
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir I S_ACLK
  create_bd_pin -dir I S_ARESETN
  create_bd_pin -dir O -from 31 -to 0 dout_0_1
  create_bd_pin -dir I empty_0
  create_bd_pin -dir I empty_1
  create_bd_pin -dir I empty_2
  create_bd_pin -dir I empty_3

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]

  # Create instance: empty_concat, and set properties
  set empty_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 empty_concat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $empty_concat

  # Create instance: empty_inverse, and set properties
  set empty_inverse [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 empty_inverse ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $empty_inverse

  # Create instance: fifo_generator_0, and set properties
  set fifo_generator_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_generator_0 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TKEEP_WIDTH {4} \
   CONFIG.TSTRB_WIDTH {4} \
   CONFIG.TUSER_WIDTH {0} \
 ] $fifo_generator_0

  # Create instance: hier_2
  create_hier_cell_hier_2 $hier_obj hier_2

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_2, and set properties
  set xlconcat_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_2 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $xlconcat_2

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins M_AXIS_LGAIN_ADC] [get_bd_intf_pins axis_clock_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net fifo_generator_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/S_AXIS] [get_bd_intf_pins fifo_generator_0/M_AXIS]

  # Create port connections
  connect_bd_net -net In0_1 [get_bd_pins In0] [get_bd_pins xlconcat_2/In0]
  connect_bd_net -net In1_1 [get_bd_pins In1] [get_bd_pins xlconcat_2/In1]
  connect_bd_net -net In2_1 [get_bd_pins In2] [get_bd_pins xlconcat_2/In2]
  connect_bd_net -net In3_1 [get_bd_pins In3] [get_bd_pins xlconcat_2/In3]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins axis_clock_converter_0/m_axis_aclk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins axis_clock_converter_0/m_axis_aresetn]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins S_ARESETN] [get_bd_pins axis_clock_converter_0/s_axis_aresetn] [get_bd_pins fifo_generator_0/s_aresetn]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_ACLK] [get_bd_pins axis_clock_converter_0/s_axis_aclk] [get_bd_pins fifo_generator_0/s_aclk]
  connect_bd_net -net empty_0_1 [get_bd_pins empty_0] [get_bd_pins empty_concat/In0]
  connect_bd_net -net empty_1_1 [get_bd_pins empty_1] [get_bd_pins empty_concat/In1]
  connect_bd_net -net empty_2_1 [get_bd_pins empty_2] [get_bd_pins empty_concat/In2]
  connect_bd_net -net empty_3_1 [get_bd_pins empty_3] [get_bd_pins empty_concat/In3]
  connect_bd_net -net empty_inverse_Res [get_bd_pins empty_inverse/Res] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net hier_2_dout_0 [get_bd_pins dout_0_1] [get_bd_pins fifo_generator_0/s_axis_tdata] [get_bd_pins hier_2/dout_0]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins fifo_generator_0/s_axis_tvalid] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins empty_concat/dout] [get_bd_pins empty_inverse/Op1]
  connect_bd_net -net xlconcat_2_dout [get_bd_pins hier_2/Din] [get_bd_pins xlconcat_2/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_0
proc create_hier_cell_lgain_adc_0 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_0() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC


  # Create pins
  create_bd_pin -dir I -from 7 -to 0 In0
  create_bd_pin -dir I -from 7 -to 0 In1
  create_bd_pin -dir I -from 7 -to 0 In2
  create_bd_pin -dir I -from 7 -to 0 In3
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir I S_ACLK
  create_bd_pin -dir I S_ARESETN
  create_bd_pin -dir O -from 31 -to 0 dout_0_2
  create_bd_pin -dir I empty_0
  create_bd_pin -dir I empty_1
  create_bd_pin -dir I empty_2
  create_bd_pin -dir I empty_3

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]

  # Create instance: empty_concat, and set properties
  set empty_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 empty_concat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $empty_concat

  # Create instance: empty_inverse, and set properties
  set empty_inverse [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 empty_inverse ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $empty_inverse

  # Create instance: fifo_generator_0, and set properties
  set fifo_generator_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_generator_0 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TKEEP_WIDTH {4} \
   CONFIG.TSTRB_WIDTH {4} \
   CONFIG.TUSER_WIDTH {0} \
 ] $fifo_generator_0

  # Create instance: hier_3
  create_hier_cell_hier_3 $hier_obj hier_3

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_3, and set properties
  set xlconcat_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_3 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $xlconcat_3

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins M_AXIS_LGAIN_ADC] [get_bd_intf_pins axis_clock_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net fifo_generator_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/S_AXIS] [get_bd_intf_pins fifo_generator_0/M_AXIS]

  # Create port connections
  connect_bd_net -net Din_1 [get_bd_pins hier_3/Din] [get_bd_pins xlconcat_3/dout]
  connect_bd_net -net In0_1 [get_bd_pins In0] [get_bd_pins xlconcat_3/In0]
  connect_bd_net -net In1_1 [get_bd_pins In1] [get_bd_pins xlconcat_3/In1]
  connect_bd_net -net In2_1 [get_bd_pins In2] [get_bd_pins xlconcat_3/In2]
  connect_bd_net -net In3_1 [get_bd_pins In3] [get_bd_pins xlconcat_3/In3]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins axis_clock_converter_0/m_axis_aclk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins axis_clock_converter_0/m_axis_aresetn]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins S_ARESETN] [get_bd_pins axis_clock_converter_0/s_axis_aresetn] [get_bd_pins fifo_generator_0/s_aresetn]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_ACLK] [get_bd_pins axis_clock_converter_0/s_axis_aclk] [get_bd_pins fifo_generator_0/s_aclk]
  connect_bd_net -net empty_0_1 [get_bd_pins empty_0] [get_bd_pins empty_concat/In0]
  connect_bd_net -net empty_1_1 [get_bd_pins empty_1] [get_bd_pins empty_concat/In1]
  connect_bd_net -net empty_2_1 [get_bd_pins empty_2] [get_bd_pins empty_concat/In2]
  connect_bd_net -net empty_3_1 [get_bd_pins empty_3] [get_bd_pins empty_concat/In3]
  connect_bd_net -net empty_inverse_Res [get_bd_pins empty_inverse/Res] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net hier_3_dout_0 [get_bd_pins dout_0_2] [get_bd_pins fifo_generator_0/s_axis_tdata] [get_bd_pins hier_3/dout_0]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins fifo_generator_0/s_axis_tvalid] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins empty_concat/dout] [get_bd_pins empty_inverse/Op1]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_block_3
proc create_hier_cell_lgain_adc_block_3 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_block_3() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC_12

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC_13

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC_14

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC_15

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:display_high_speed_selectio_wiz:hssio_data_rx_rtl:1.0 xiphy_rx_pins_3


  # Create pins
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir O fifo_rd_data_valid
  create_bd_pin -dir I rst

  # Create instance: ADC_IF_TEST_3_0_B66, and set properties
  set ADC_IF_TEST_3_0_B66 [ create_bd_cell -type ip -vlnv teldevice.local:user:ADC_IF_TEST_3:1.0 ADC_IF_TEST_3_0_B66 ]

  set_property -dict [ list \
   CONFIG.FREQ_HZ {125000000} \
 ] [get_bd_pins /lgain_adc_blocks/lgain_adc_block_3/ADC_IF_TEST_3_0_B66/clk]

  # Create instance: lgain_adc_12
  create_hier_cell_lgain_adc_12 $hier_obj lgain_adc_12

  # Create instance: lgain_adc_13
  create_hier_cell_lgain_adc_13 $hier_obj lgain_adc_13

  # Create instance: lgain_adc_14
  create_hier_cell_lgain_adc_14 $hier_obj lgain_adc_14

  # Create instance: lgain_adc_15
  create_hier_cell_lgain_adc_15 $hier_obj lgain_adc_15

  # Create instance: lgain_cf_replica_rst, and set properties
  set lgain_cf_replica_rst [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 lgain_cf_replica_rst ]

  # Create instance: vio_0, and set properties
  set vio_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:vio:3.0 vio_0 ]
  set_property -dict [ list \
   CONFIG.C_NUM_PROBE_IN {21} \
 ] $vio_0

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]

  # Create interface connections
  connect_bd_intf_net -intf_net lgain_adc_12_M_AXIS_LGAIN_ADC [get_bd_intf_pins M_AXIS_LGAIN_ADC_12] [get_bd_intf_pins lgain_adc_12/M_AXIS_LGAIN_ADC]
  connect_bd_intf_net -intf_net lgain_adc_13_M_AXIS_LGAIN_ADC [get_bd_intf_pins M_AXIS_LGAIN_ADC_13] [get_bd_intf_pins lgain_adc_13/M_AXIS_LGAIN_ADC]
  connect_bd_intf_net -intf_net lgain_adc_14_M_AXIS_LGAIN_ADC [get_bd_intf_pins M_AXIS_LGAIN_ADC_14] [get_bd_intf_pins lgain_adc_14/M_AXIS_LGAIN_ADC]
  connect_bd_intf_net -intf_net lgain_adc_15_M_AXIS_LGAIN_ADC [get_bd_intf_pins M_AXIS_LGAIN_ADC_15] [get_bd_intf_pins lgain_adc_15/M_AXIS_LGAIN_ADC]
  connect_bd_intf_net -intf_net xiphy_rx_pins_3_1 [get_bd_intf_pins xiphy_rx_pins_3] [get_bd_intf_pins ADC_IF_TEST_3_0_B66/xiphy_rx_pins]

  # Create port connections
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_0 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_0] [get_bd_pins vio_0/probe_in2]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_4 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_4] [get_bd_pins vio_0/probe_in0]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_6 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_6] [get_bd_pins vio_0/probe_in3]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_8 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_8] [get_bd_pins vio_0/probe_in4]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_10 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_10] [get_bd_pins vio_0/probe_in5]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_13 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_13] [get_bd_pins vio_0/probe_in6]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_17 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_17] [get_bd_pins vio_0/probe_in7]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_19 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_19] [get_bd_pins vio_0/probe_in8]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_21 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_21] [get_bd_pins vio_0/probe_in9]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_23 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_23] [get_bd_pins vio_0/probe_in10]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_26 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_26] [get_bd_pins vio_0/probe_in1]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_30 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_30] [get_bd_pins vio_0/probe_in11]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_32 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_32] [get_bd_pins vio_0/probe_in12]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_34 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_34] [get_bd_pins vio_0/probe_in13]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_36 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_36] [get_bd_pins vio_0/probe_in14]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_39 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_39] [get_bd_pins vio_0/probe_in15]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_43 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_43] [get_bd_pins vio_0/probe_in16]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_45 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_45] [get_bd_pins vio_0/probe_in17]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_47 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_47] [get_bd_pins vio_0/probe_in18]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_49 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_49] [get_bd_pins vio_0/probe_in19]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_data_to_fabric_b66_bg0_pin10_10 [get_bd_pins ADC_IF_TEST_3_0_B66/data_to_fabric_b66_bg0_pin10_10] [get_bd_pins lgain_adc_12/In1]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_data_to_fabric_b66_bg0_pin4_4 [get_bd_pins ADC_IF_TEST_3_0_B66/data_to_fabric_b66_bg0_pin4_4] [get_bd_pins lgain_adc_12/In3]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_data_to_fabric_b66_bg0_pin6_6 [get_bd_pins ADC_IF_TEST_3_0_B66/data_to_fabric_b66_bg0_pin6_6] [get_bd_pins lgain_adc_12/In2]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_data_to_fabric_b66_bg0_pin8_8 [get_bd_pins ADC_IF_TEST_3_0_B66/data_to_fabric_b66_bg0_pin8_8] [get_bd_pins lgain_adc_12/In0]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_data_to_fabric_b66_bg1_pin10_23 [get_bd_pins ADC_IF_TEST_3_0_B66/data_to_fabric_b66_bg1_pin10_23] [get_bd_pins lgain_adc_14/In0]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_data_to_fabric_b66_bg1_pin4_17 [get_bd_pins ADC_IF_TEST_3_0_B66/data_to_fabric_b66_bg1_pin4_17] [get_bd_pins lgain_adc_14/In1]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_data_to_fabric_b66_bg1_pin6_19 [get_bd_pins ADC_IF_TEST_3_0_B66/data_to_fabric_b66_bg1_pin6_19] [get_bd_pins lgain_adc_14/In3]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_data_to_fabric_b66_bg1_pin8_21 [get_bd_pins ADC_IF_TEST_3_0_B66/data_to_fabric_b66_bg1_pin8_21] [get_bd_pins lgain_adc_14/In2]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_data_to_fabric_b66_bg2_pin10_36 [get_bd_pins ADC_IF_TEST_3_0_B66/data_to_fabric_b66_bg2_pin10_36] [get_bd_pins lgain_adc_13/In0]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_data_to_fabric_b66_bg2_pin4_30 [get_bd_pins ADC_IF_TEST_3_0_B66/data_to_fabric_b66_bg2_pin4_30] [get_bd_pins lgain_adc_13/In2]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_data_to_fabric_b66_bg2_pin6_32 [get_bd_pins ADC_IF_TEST_3_0_B66/data_to_fabric_b66_bg2_pin6_32] [get_bd_pins lgain_adc_13/In1]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_data_to_fabric_b66_bg2_pin8_34 [get_bd_pins ADC_IF_TEST_3_0_B66/data_to_fabric_b66_bg2_pin8_34] [get_bd_pins lgain_adc_13/In3]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_data_to_fabric_b66_bg3_pin10_49 [get_bd_pins ADC_IF_TEST_3_0_B66/data_to_fabric_b66_bg3_pin10_49] [get_bd_pins lgain_adc_15/In1]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_data_to_fabric_b66_bg3_pin4_43 [get_bd_pins ADC_IF_TEST_3_0_B66/data_to_fabric_b66_bg3_pin4_43] [get_bd_pins lgain_adc_15/In3]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_data_to_fabric_b66_bg3_pin6_45 [get_bd_pins ADC_IF_TEST_3_0_B66/data_to_fabric_b66_bg3_pin6_45] [get_bd_pins lgain_adc_15/In0]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_data_to_fabric_b66_bg3_pin8_47 [get_bd_pins ADC_IF_TEST_3_0_B66/data_to_fabric_b66_bg3_pin8_47] [get_bd_pins lgain_adc_15/In2]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_fifo_empty_4 [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_empty_4] [get_bd_pins lgain_adc_12/empty_0]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_fifo_empty_6 [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_empty_6] [get_bd_pins lgain_adc_12/empty_1]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_fifo_empty_8 [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_empty_8] [get_bd_pins lgain_adc_12/empty_2]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_fifo_empty_10 [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_empty_10] [get_bd_pins lgain_adc_12/empty_3]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_fifo_empty_17 [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_empty_17] [get_bd_pins lgain_adc_14/empty_0]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_fifo_empty_19 [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_empty_19] [get_bd_pins lgain_adc_14/empty_1]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_fifo_empty_21 [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_empty_21] [get_bd_pins lgain_adc_14/empty_2]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_fifo_empty_23 [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_empty_23] [get_bd_pins lgain_adc_14/empty_3]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_fifo_empty_30 [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_empty_30] [get_bd_pins lgain_adc_13/empty_0]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_fifo_empty_32 [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_empty_32] [get_bd_pins lgain_adc_13/empty_1]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_fifo_empty_34 [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_empty_34] [get_bd_pins lgain_adc_13/empty_2]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_fifo_empty_36 [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_empty_36] [get_bd_pins lgain_adc_13/empty_3]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_fifo_empty_43 [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_empty_43] [get_bd_pins lgain_adc_15/empty_0]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_fifo_empty_45 [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_empty_45] [get_bd_pins lgain_adc_15/empty_1]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_fifo_empty_47 [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_empty_47] [get_bd_pins lgain_adc_15/empty_2]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_fifo_empty_49 [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_empty_49] [get_bd_pins lgain_adc_15/empty_3]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_fifo_rd_data_valid [get_bd_pins fifo_rd_data_valid] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_data_valid]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_pll0_locked [get_bd_pins ADC_IF_TEST_3_0_B66/pll0_locked] [get_bd_pins lgain_cf_replica_rst/ext_reset_in]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_rx_bitslip_sync_done [get_bd_pins ADC_IF_TEST_3_0_B66/rx_bitslip_sync_done] [get_bd_pins vio_0/probe_in20]
  connect_bd_net -net ADC_IF_TEST_3_0_pll0_clkout0 [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_0] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_4] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_6] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_8] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_10] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_13] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_17] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_19] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_21] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_23] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_26] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_30] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_32] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_34] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_36] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_39] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_43] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_45] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_47] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_49] [get_bd_pins ADC_IF_TEST_3_0_B66/pll0_clkout0] [get_bd_pins lgain_adc_12/S_ACLK] [get_bd_pins lgain_adc_13/S_ACLK] [get_bd_pins lgain_adc_14/S_ACLK] [get_bd_pins lgain_adc_15/S_ACLK] [get_bd_pins lgain_cf_replica_rst/slowest_sync_clk]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins ADC_IF_TEST_3_0_B66/clk] [get_bd_pins lgain_adc_12/M_ACLK] [get_bd_pins lgain_adc_13/M_ACLK] [get_bd_pins lgain_adc_14/M_ACLK] [get_bd_pins lgain_adc_15/M_ACLK] [get_bd_pins vio_0/clk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins lgain_adc_12/M_ARESETN] [get_bd_pins lgain_adc_13/M_ARESETN] [get_bd_pins lgain_adc_14/M_ARESETN] [get_bd_pins lgain_adc_15/M_ARESETN]
  connect_bd_net -net en_vtc_bsc0_1 [get_bd_pins ADC_IF_TEST_3_0_B66/en_vtc_bsc0] [get_bd_pins ADC_IF_TEST_3_0_B66/en_vtc_bsc1] [get_bd_pins ADC_IF_TEST_3_0_B66/en_vtc_bsc2] [get_bd_pins ADC_IF_TEST_3_0_B66/en_vtc_bsc3] [get_bd_pins ADC_IF_TEST_3_0_B66/en_vtc_bsc4] [get_bd_pins ADC_IF_TEST_3_0_B66/en_vtc_bsc5] [get_bd_pins ADC_IF_TEST_3_0_B66/en_vtc_bsc6] [get_bd_pins ADC_IF_TEST_3_0_B66/en_vtc_bsc7] [get_bd_pins xlconstant_0/dout]
  connect_bd_net -net lgain_cf_replica_rst_peripheral_aresetn [get_bd_pins lgain_adc_12/S_ARESETN] [get_bd_pins lgain_adc_13/S_ARESETN] [get_bd_pins lgain_adc_14/S_ARESETN] [get_bd_pins lgain_adc_15/S_ARESETN] [get_bd_pins lgain_cf_replica_rst/peripheral_aresetn]
  connect_bd_net -net rst_1 [get_bd_pins rst] [get_bd_pins ADC_IF_TEST_3_0_B66/rst]
  connect_bd_net -net vio_0_probe_out0 [get_bd_pins ADC_IF_TEST_3_0_B66/start_bitslip] [get_bd_pins vio_0/probe_out0]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_block_2
proc create_hier_cell_lgain_adc_block_2 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_block_2() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC_8

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC_9

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC_10

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC_11

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:display_high_speed_selectio_wiz:hssio_data_rx_rtl:1.0 xiphy_rx_pins_2


  # Create pins
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir O fifo_rd_data_valid
  create_bd_pin -dir I rst

  # Create instance: ADC_IF_TEST_2_0_B65, and set properties
  set ADC_IF_TEST_2_0_B65 [ create_bd_cell -type ip -vlnv teldevice.local:user:ADC_IF_TEST_2:1.0 ADC_IF_TEST_2_0_B65 ]

  set_property -dict [ list \
   CONFIG.FREQ_HZ {125000000} \
 ] [get_bd_pins /lgain_adc_blocks/lgain_adc_block_2/ADC_IF_TEST_2_0_B65/clk]

  # Create instance: lgain_8b_replica_rst, and set properties
  set lgain_8b_replica_rst [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 lgain_8b_replica_rst ]

  # Create instance: lgain_adc_8
  create_hier_cell_lgain_adc_8 $hier_obj lgain_adc_8

  # Create instance: lgain_adc_9
  create_hier_cell_lgain_adc_9 $hier_obj lgain_adc_9

  # Create instance: lgain_adc_10
  create_hier_cell_lgain_adc_10 $hier_obj lgain_adc_10

  # Create instance: lgain_adc_11
  create_hier_cell_lgain_adc_11 $hier_obj lgain_adc_11

  # Create instance: vio_0, and set properties
  set vio_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:vio:3.0 vio_0 ]
  set_property -dict [ list \
   CONFIG.C_NUM_PROBE_IN {21} \
 ] $vio_0

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]

  # Create interface connections
  connect_bd_intf_net -intf_net lgain_adc_10_M_AXIS_LGAIN_ADC [get_bd_intf_pins M_AXIS_LGAIN_ADC_10] [get_bd_intf_pins lgain_adc_10/M_AXIS_LGAIN_ADC]
  connect_bd_intf_net -intf_net lgain_adc_11_M_AXIS_LGAIN_ADC [get_bd_intf_pins M_AXIS_LGAIN_ADC_11] [get_bd_intf_pins lgain_adc_11/M_AXIS_LGAIN_ADC]
  connect_bd_intf_net -intf_net lgain_adc_8_M_AXIS_LGAIN_ADC [get_bd_intf_pins M_AXIS_LGAIN_ADC_8] [get_bd_intf_pins lgain_adc_8/M_AXIS_LGAIN_ADC]
  connect_bd_intf_net -intf_net lgain_adc_9_M_AXIS_LGAIN_ADC [get_bd_intf_pins M_AXIS_LGAIN_ADC_9] [get_bd_intf_pins lgain_adc_9/M_AXIS_LGAIN_ADC]
  connect_bd_intf_net -intf_net xiphy_rx_pins_2_1 [get_bd_intf_pins xiphy_rx_pins_2] [get_bd_intf_pins ADC_IF_TEST_2_0_B65/xiphy_rx_pins]

  # Create port connections
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_0 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_0] [get_bd_pins vio_0/probe_in2]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_4 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_4] [get_bd_pins vio_0/probe_in0]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_6 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_6] [get_bd_pins vio_0/probe_in3]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_8 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_8] [get_bd_pins vio_0/probe_in4]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_10 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_10] [get_bd_pins vio_0/probe_in5]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_13 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_13] [get_bd_pins vio_0/probe_in6]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_17 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_17] [get_bd_pins vio_0/probe_in7]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_19 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_19] [get_bd_pins vio_0/probe_in8]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_21 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_21] [get_bd_pins vio_0/probe_in9]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_23 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_23] [get_bd_pins vio_0/probe_in10]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_26 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_26] [get_bd_pins vio_0/probe_in1]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_30 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_30] [get_bd_pins vio_0/probe_in11]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_32 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_32] [get_bd_pins vio_0/probe_in12]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_34 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_34] [get_bd_pins vio_0/probe_in13]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_36 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_36] [get_bd_pins vio_0/probe_in14]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_39 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_39] [get_bd_pins vio_0/probe_in15]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_43 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_43] [get_bd_pins vio_0/probe_in16]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_45 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_45] [get_bd_pins vio_0/probe_in17]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_47 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_47] [get_bd_pins vio_0/probe_in18]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_49 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_49] [get_bd_pins vio_0/probe_in19]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_data_to_fabric_b65_bg0_pin10_10 [get_bd_pins ADC_IF_TEST_2_0_B65/data_to_fabric_b65_bg0_pin10_10] [get_bd_pins lgain_adc_11/In1]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_data_to_fabric_b65_bg0_pin4_4 [get_bd_pins ADC_IF_TEST_2_0_B65/data_to_fabric_b65_bg0_pin4_4] [get_bd_pins lgain_adc_11/In2]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_data_to_fabric_b65_bg0_pin6_6 [get_bd_pins ADC_IF_TEST_2_0_B65/data_to_fabric_b65_bg0_pin6_6] [get_bd_pins lgain_adc_11/In0]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_data_to_fabric_b65_bg0_pin8_8 [get_bd_pins ADC_IF_TEST_2_0_B65/data_to_fabric_b65_bg0_pin8_8] [get_bd_pins lgain_adc_11/In3]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_data_to_fabric_b65_bg1_pin10_23 [get_bd_pins ADC_IF_TEST_2_0_B65/data_to_fabric_b65_bg1_pin10_23] [get_bd_pins lgain_adc_10/In0]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_data_to_fabric_b65_bg1_pin4_17 [get_bd_pins ADC_IF_TEST_2_0_B65/data_to_fabric_b65_bg1_pin4_17] [get_bd_pins lgain_adc_10/In3]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_data_to_fabric_b65_bg1_pin6_19 [get_bd_pins ADC_IF_TEST_2_0_B65/data_to_fabric_b65_bg1_pin6_19] [get_bd_pins lgain_adc_10/In2]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_data_to_fabric_b65_bg1_pin8_21 [get_bd_pins ADC_IF_TEST_2_0_B65/data_to_fabric_b65_bg1_pin8_21] [get_bd_pins lgain_adc_10/In1]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_data_to_fabric_b65_bg2_pin10_36 [get_bd_pins ADC_IF_TEST_2_0_B65/data_to_fabric_b65_bg2_pin10_36] [get_bd_pins lgain_adc_9/In0]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_data_to_fabric_b65_bg2_pin4_30 [get_bd_pins ADC_IF_TEST_2_0_B65/data_to_fabric_b65_bg2_pin4_30] [get_bd_pins lgain_adc_9/In3]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_data_to_fabric_b65_bg2_pin6_32 [get_bd_pins ADC_IF_TEST_2_0_B65/data_to_fabric_b65_bg2_pin6_32] [get_bd_pins lgain_adc_9/In1]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_data_to_fabric_b65_bg2_pin8_34 [get_bd_pins ADC_IF_TEST_2_0_B65/data_to_fabric_b65_bg2_pin8_34] [get_bd_pins lgain_adc_9/In2]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_data_to_fabric_b65_bg3_pin10_49 [get_bd_pins ADC_IF_TEST_2_0_B65/data_to_fabric_b65_bg3_pin10_49] [get_bd_pins lgain_adc_8/In3]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_data_to_fabric_b65_bg3_pin4_43 [get_bd_pins ADC_IF_TEST_2_0_B65/data_to_fabric_b65_bg3_pin4_43] [get_bd_pins lgain_adc_8/In0]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_data_to_fabric_b65_bg3_pin6_45 [get_bd_pins ADC_IF_TEST_2_0_B65/data_to_fabric_b65_bg3_pin6_45] [get_bd_pins lgain_adc_8/In2]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_data_to_fabric_b65_bg3_pin8_47 [get_bd_pins ADC_IF_TEST_2_0_B65/data_to_fabric_b65_bg3_pin8_47] [get_bd_pins lgain_adc_8/In1]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_fifo_empty_4 [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_empty_4] [get_bd_pins lgain_adc_11/empty_0]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_fifo_empty_6 [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_empty_6] [get_bd_pins lgain_adc_11/empty_1]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_fifo_empty_8 [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_empty_8] [get_bd_pins lgain_adc_11/empty_2]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_fifo_empty_10 [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_empty_10] [get_bd_pins lgain_adc_11/empty_3]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_fifo_empty_17 [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_empty_17] [get_bd_pins lgain_adc_10/empty_0]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_fifo_empty_19 [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_empty_19] [get_bd_pins lgain_adc_10/empty_1]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_fifo_empty_21 [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_empty_21] [get_bd_pins lgain_adc_10/empty_2]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_fifo_empty_23 [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_empty_23] [get_bd_pins lgain_adc_10/empty_3]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_fifo_empty_30 [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_empty_30] [get_bd_pins lgain_adc_9/empty_0]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_fifo_empty_32 [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_empty_32] [get_bd_pins lgain_adc_9/empty_1]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_fifo_empty_34 [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_empty_34] [get_bd_pins lgain_adc_9/empty_2]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_fifo_empty_36 [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_empty_36] [get_bd_pins lgain_adc_9/empty_3]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_fifo_empty_43 [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_empty_43] [get_bd_pins lgain_adc_8/empty_0]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_fifo_empty_45 [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_empty_45] [get_bd_pins lgain_adc_8/empty_1]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_fifo_empty_47 [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_empty_47] [get_bd_pins lgain_adc_8/empty_2]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_fifo_empty_49 [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_empty_49] [get_bd_pins lgain_adc_8/empty_3]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_fifo_rd_data_valid [get_bd_pins fifo_rd_data_valid] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_data_valid]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_pll0_clkout0 [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_0] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_4] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_6] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_8] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_10] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_13] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_17] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_19] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_21] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_23] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_26] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_30] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_32] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_34] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_36] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_39] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_43] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_45] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_47] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_49] [get_bd_pins ADC_IF_TEST_2_0_B65/pll0_clkout0] [get_bd_pins lgain_8b_replica_rst/slowest_sync_clk] [get_bd_pins lgain_adc_10/S_ACLK] [get_bd_pins lgain_adc_11/S_ACLK] [get_bd_pins lgain_adc_8/S_ACLK] [get_bd_pins lgain_adc_9/S_ACLK]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_pll0_locked [get_bd_pins ADC_IF_TEST_2_0_B65/pll0_locked] [get_bd_pins lgain_8b_replica_rst/ext_reset_in]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_rx_bitslip_sync_done [get_bd_pins ADC_IF_TEST_2_0_B65/rx_bitslip_sync_done] [get_bd_pins vio_0/probe_in20]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins ADC_IF_TEST_2_0_B65/clk] [get_bd_pins lgain_adc_10/M_ACLK] [get_bd_pins lgain_adc_11/M_ACLK] [get_bd_pins lgain_adc_8/M_ACLK] [get_bd_pins lgain_adc_9/M_ACLK] [get_bd_pins vio_0/clk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins lgain_adc_10/M_ARESETN] [get_bd_pins lgain_adc_11/M_ARESETN] [get_bd_pins lgain_adc_8/M_ARESETN] [get_bd_pins lgain_adc_9/M_ARESETN]
  connect_bd_net -net en_vtc_bsc0_1 [get_bd_pins ADC_IF_TEST_2_0_B65/en_vtc_bsc0] [get_bd_pins ADC_IF_TEST_2_0_B65/en_vtc_bsc1] [get_bd_pins ADC_IF_TEST_2_0_B65/en_vtc_bsc2] [get_bd_pins ADC_IF_TEST_2_0_B65/en_vtc_bsc3] [get_bd_pins ADC_IF_TEST_2_0_B65/en_vtc_bsc4] [get_bd_pins ADC_IF_TEST_2_0_B65/en_vtc_bsc5] [get_bd_pins ADC_IF_TEST_2_0_B65/en_vtc_bsc6] [get_bd_pins ADC_IF_TEST_2_0_B65/en_vtc_bsc7] [get_bd_pins xlconstant_0/dout]
  connect_bd_net -net lgain_8b_replica_rst_peripheral_aresetn [get_bd_pins lgain_8b_replica_rst/peripheral_aresetn] [get_bd_pins lgain_adc_10/S_ARESETN] [get_bd_pins lgain_adc_11/S_ARESETN] [get_bd_pins lgain_adc_8/S_ARESETN] [get_bd_pins lgain_adc_9/S_ARESETN]
  connect_bd_net -net rst_1 [get_bd_pins rst] [get_bd_pins ADC_IF_TEST_2_0_B65/rst]
  connect_bd_net -net vio_0_probe_out0 [get_bd_pins ADC_IF_TEST_2_0_B65/start_bitslip] [get_bd_pins vio_0/probe_out0]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_block_1
proc create_hier_cell_lgain_adc_block_1 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_block_1() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC_4

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC_5

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC_6

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC_7

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:display_high_speed_selectio_wiz:hssio_data_rx_rtl:1.0 xiphy_rx_pins_1


  # Create pins
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir O fifo_rd_data_valid
  create_bd_pin -dir I rst

  # Create instance: ADC_IF_TEST_1_0_B64, and set properties
  set ADC_IF_TEST_1_0_B64 [ create_bd_cell -type ip -vlnv teldevice.local:user:ADC_IF_TEST_1:1.0 ADC_IF_TEST_1_0_B64 ]

  set_property -dict [ list \
   CONFIG.FREQ_HZ {125000000} \
 ] [get_bd_pins /lgain_adc_blocks/lgain_adc_block_1/ADC_IF_TEST_1_0_B64/clk]

  # Create instance: lgain_47_replica_rst, and set properties
  set lgain_47_replica_rst [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 lgain_47_replica_rst ]

  # Create instance: lgain_adc_4
  create_hier_cell_lgain_adc_4 $hier_obj lgain_adc_4

  # Create instance: lgain_adc_5
  create_hier_cell_lgain_adc_5 $hier_obj lgain_adc_5

  # Create instance: lgain_adc_6
  create_hier_cell_lgain_adc_6 $hier_obj lgain_adc_6

  # Create instance: lgain_adc_7
  create_hier_cell_lgain_adc_7 $hier_obj lgain_adc_7

  # Create instance: vio_0, and set properties
  set vio_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:vio:3.0 vio_0 ]
  set_property -dict [ list \
   CONFIG.C_NUM_PROBE_IN {21} \
 ] $vio_0

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]

  # Create interface connections
  connect_bd_intf_net -intf_net lgain_adc_4_M_AXIS_LGAIN_ADC [get_bd_intf_pins M_AXIS_LGAIN_ADC_4] [get_bd_intf_pins lgain_adc_4/M_AXIS_LGAIN_ADC]
  connect_bd_intf_net -intf_net lgain_adc_5_M_AXIS_LGAIN_ADC [get_bd_intf_pins M_AXIS_LGAIN_ADC_5] [get_bd_intf_pins lgain_adc_5/M_AXIS_LGAIN_ADC]
  connect_bd_intf_net -intf_net lgain_adc_6_M_AXIS_LGAIN_ADC [get_bd_intf_pins M_AXIS_LGAIN_ADC_6] [get_bd_intf_pins lgain_adc_6/M_AXIS_LGAIN_ADC]
  connect_bd_intf_net -intf_net lgain_adc_7_M_AXIS_LGAIN_ADC [get_bd_intf_pins M_AXIS_LGAIN_ADC_7] [get_bd_intf_pins lgain_adc_7/M_AXIS_LGAIN_ADC]
  connect_bd_intf_net -intf_net xiphy_rx_pins_1_1 [get_bd_intf_pins xiphy_rx_pins_1] [get_bd_intf_pins ADC_IF_TEST_1_0_B64/xiphy_rx_pins]

  # Create port connections
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_0 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_0] [get_bd_pins vio_0/probe_in2]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_2 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_2] [get_bd_pins vio_0/probe_in3]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_4 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_4] [get_bd_pins vio_0/probe_in0]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_6 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_6] [get_bd_pins vio_0/probe_in4]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_8 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_8] [get_bd_pins vio_0/probe_in5]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_13 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_13] [get_bd_pins vio_0/probe_in6]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_17 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_17] [get_bd_pins vio_0/probe_in7]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_19 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_19] [get_bd_pins vio_0/probe_in8]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_21 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_21] [get_bd_pins vio_0/probe_in9]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_23 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_23] [get_bd_pins vio_0/probe_in10]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_26 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_26] [get_bd_pins vio_0/probe_in1]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_30 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_30] [get_bd_pins vio_0/probe_in11]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_32 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_32] [get_bd_pins vio_0/probe_in12]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_34 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_34] [get_bd_pins vio_0/probe_in13]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_36 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_36] [get_bd_pins vio_0/probe_in14]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_39 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_39] [get_bd_pins vio_0/probe_in15]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_43 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_43] [get_bd_pins vio_0/probe_in16]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_45 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_45] [get_bd_pins vio_0/probe_in17]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_47 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_47] [get_bd_pins vio_0/probe_in18]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_49 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_49] [get_bd_pins vio_0/probe_in19]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_data_to_fabric_b64_bg0_pin2_2 [get_bd_pins ADC_IF_TEST_1_0_B64/data_to_fabric_b64_bg0_pin2_2] [get_bd_pins lgain_adc_7/In3]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_data_to_fabric_b64_bg0_pin4_4 [get_bd_pins ADC_IF_TEST_1_0_B64/data_to_fabric_b64_bg0_pin4_4] [get_bd_pins lgain_adc_7/In1]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_data_to_fabric_b64_bg0_pin6_6 [get_bd_pins ADC_IF_TEST_1_0_B64/data_to_fabric_b64_bg0_pin6_6] [get_bd_pins lgain_adc_7/In2]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_data_to_fabric_b64_bg0_pin8_8 [get_bd_pins ADC_IF_TEST_1_0_B64/data_to_fabric_b64_bg0_pin8_8] [get_bd_pins lgain_adc_7/In0]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_data_to_fabric_b64_bg1_pin10_23 [get_bd_pins ADC_IF_TEST_1_0_B64/data_to_fabric_b64_bg1_pin10_23] [get_bd_pins lgain_adc_6/In2]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_data_to_fabric_b64_bg1_pin4_17 [get_bd_pins ADC_IF_TEST_1_0_B64/data_to_fabric_b64_bg1_pin4_17] [get_bd_pins lgain_adc_6/In1]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_data_to_fabric_b64_bg1_pin6_19 [get_bd_pins ADC_IF_TEST_1_0_B64/data_to_fabric_b64_bg1_pin6_19] [get_bd_pins lgain_adc_6/In3]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_data_to_fabric_b64_bg1_pin8_21 [get_bd_pins ADC_IF_TEST_1_0_B64/data_to_fabric_b64_bg1_pin8_21] [get_bd_pins lgain_adc_6/In0]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_data_to_fabric_b64_bg2_pin10_36 [get_bd_pins ADC_IF_TEST_1_0_B64/data_to_fabric_b64_bg2_pin10_36] [get_bd_pins lgain_adc_5/In0]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_data_to_fabric_b64_bg2_pin4_30 [get_bd_pins ADC_IF_TEST_1_0_B64/data_to_fabric_b64_bg2_pin4_30] [get_bd_pins lgain_adc_5/In1]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_data_to_fabric_b64_bg2_pin6_32 [get_bd_pins ADC_IF_TEST_1_0_B64/data_to_fabric_b64_bg2_pin6_32] [get_bd_pins lgain_adc_5/In3]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_data_to_fabric_b64_bg2_pin8_34 [get_bd_pins ADC_IF_TEST_1_0_B64/data_to_fabric_b64_bg2_pin8_34] [get_bd_pins lgain_adc_5/In2]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_data_to_fabric_b64_bg3_pin10_49 [get_bd_pins ADC_IF_TEST_1_0_B64/data_to_fabric_b64_bg3_pin10_49] [get_bd_pins lgain_adc_4/In2]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_data_to_fabric_b64_bg3_pin4_43 [get_bd_pins ADC_IF_TEST_1_0_B64/data_to_fabric_b64_bg3_pin4_43] [get_bd_pins lgain_adc_4/In1]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_data_to_fabric_b64_bg3_pin6_45 [get_bd_pins ADC_IF_TEST_1_0_B64/data_to_fabric_b64_bg3_pin6_45] [get_bd_pins lgain_adc_4/In0]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_data_to_fabric_b64_bg3_pin8_47 [get_bd_pins ADC_IF_TEST_1_0_B64/data_to_fabric_b64_bg3_pin8_47] [get_bd_pins lgain_adc_4/In3]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_fifo_empty_2 [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_empty_2] [get_bd_pins lgain_adc_7/empty_0]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_fifo_empty_4 [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_empty_4] [get_bd_pins lgain_adc_7/empty_1]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_fifo_empty_6 [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_empty_6] [get_bd_pins lgain_adc_7/empty_2]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_fifo_empty_8 [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_empty_8] [get_bd_pins lgain_adc_7/empty_3]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_fifo_empty_17 [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_empty_17] [get_bd_pins lgain_adc_6/empty_0]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_fifo_empty_19 [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_empty_19] [get_bd_pins lgain_adc_6/empty_1]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_fifo_empty_21 [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_empty_21] [get_bd_pins lgain_adc_6/empty_2]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_fifo_empty_23 [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_empty_23] [get_bd_pins lgain_adc_6/empty_3]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_fifo_empty_30 [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_empty_30] [get_bd_pins lgain_adc_5/empty_0]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_fifo_empty_32 [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_empty_32] [get_bd_pins lgain_adc_5/empty_1]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_fifo_empty_34 [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_empty_34] [get_bd_pins lgain_adc_5/empty_2]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_fifo_empty_36 [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_empty_36] [get_bd_pins lgain_adc_5/empty_3]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_fifo_empty_43 [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_empty_43] [get_bd_pins lgain_adc_4/empty_0]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_fifo_empty_45 [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_empty_45] [get_bd_pins lgain_adc_4/empty_1]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_fifo_empty_47 [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_empty_47] [get_bd_pins lgain_adc_4/empty_2]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_fifo_empty_49 [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_empty_49] [get_bd_pins lgain_adc_4/empty_3]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_fifo_rd_data_valid [get_bd_pins fifo_rd_data_valid] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_data_valid]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_pll0_locked [get_bd_pins ADC_IF_TEST_1_0_B64/pll0_locked] [get_bd_pins lgain_47_replica_rst/ext_reset_in]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_rx_bitslip_sync_done [get_bd_pins ADC_IF_TEST_1_0_B64/rx_bitslip_sync_done] [get_bd_pins vio_0/probe_in20]
  connect_bd_net -net ADC_IF_TEST_1_0_pll0_clkout0 [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_0] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_2] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_4] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_6] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_8] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_13] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_17] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_19] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_21] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_23] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_26] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_30] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_32] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_34] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_36] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_39] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_43] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_45] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_47] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_49] [get_bd_pins ADC_IF_TEST_1_0_B64/pll0_clkout0] [get_bd_pins lgain_47_replica_rst/slowest_sync_clk] [get_bd_pins lgain_adc_4/S_ACLK] [get_bd_pins lgain_adc_5/S_ACLK] [get_bd_pins lgain_adc_6/S_ACLK] [get_bd_pins lgain_adc_7/S_ACLK]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins ADC_IF_TEST_1_0_B64/clk] [get_bd_pins lgain_adc_4/M_ACLK] [get_bd_pins lgain_adc_5/M_ACLK] [get_bd_pins lgain_adc_6/M_ACLK] [get_bd_pins lgain_adc_7/M_ACLK] [get_bd_pins vio_0/clk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins lgain_adc_4/M_ARESETN] [get_bd_pins lgain_adc_5/M_ARESETN] [get_bd_pins lgain_adc_6/M_ARESETN] [get_bd_pins lgain_adc_7/M_ARESETN]
  connect_bd_net -net en_vtc_bsc0_1 [get_bd_pins ADC_IF_TEST_1_0_B64/en_vtc_bsc0] [get_bd_pins ADC_IF_TEST_1_0_B64/en_vtc_bsc1] [get_bd_pins ADC_IF_TEST_1_0_B64/en_vtc_bsc2] [get_bd_pins ADC_IF_TEST_1_0_B64/en_vtc_bsc3] [get_bd_pins ADC_IF_TEST_1_0_B64/en_vtc_bsc4] [get_bd_pins ADC_IF_TEST_1_0_B64/en_vtc_bsc5] [get_bd_pins ADC_IF_TEST_1_0_B64/en_vtc_bsc6] [get_bd_pins ADC_IF_TEST_1_0_B64/en_vtc_bsc7] [get_bd_pins xlconstant_0/dout]
  connect_bd_net -net lgain_47_replica_rst_peripheral_aresetn [get_bd_pins lgain_47_replica_rst/peripheral_aresetn] [get_bd_pins lgain_adc_4/S_ARESETN] [get_bd_pins lgain_adc_5/S_ARESETN] [get_bd_pins lgain_adc_6/S_ARESETN] [get_bd_pins lgain_adc_7/S_ARESETN]
  connect_bd_net -net rst_1 [get_bd_pins rst] [get_bd_pins ADC_IF_TEST_1_0_B64/rst]
  connect_bd_net -net vio_0_probe_out0 [get_bd_pins ADC_IF_TEST_1_0_B64/start_bitslip] [get_bd_pins vio_0/probe_out0]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_block_0
proc create_hier_cell_lgain_adc_block_0 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_block_0() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC_1

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC_2

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC_3

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:display_high_speed_selectio_wiz:hssio_data_rx_rtl:1.0 xiphy_rx_pins_0


  # Create pins
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir O fifo_rd_data_valid
  create_bd_pin -dir I -type rst rst

  # Create instance: ADC_IF_TEST_0_B69, and set properties
  set ADC_IF_TEST_0_B69 [ create_bd_cell -type ip -vlnv teldevice.local:user:ADC_IF_TEST:1.0 ADC_IF_TEST_0_B69 ]

  set_property -dict [ list \
   CONFIG.FREQ_HZ {125000000} \
 ] [get_bd_pins /lgain_adc_blocks/lgain_adc_block_0/ADC_IF_TEST_0_B69/clk]

  # Create instance: lgain_B69_rst, and set properties
  set lgain_B69_rst [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 lgain_B69_rst ]

  # Create instance: lgain_adc_0
  create_hier_cell_lgain_adc_0 $hier_obj lgain_adc_0

  # Create instance: lgain_adc_1
  create_hier_cell_lgain_adc_1 $hier_obj lgain_adc_1

  # Create instance: lgain_adc_2
  create_hier_cell_lgain_adc_2 $hier_obj lgain_adc_2

  # Create instance: lgain_adc_3
  create_hier_cell_lgain_adc_3 $hier_obj lgain_adc_3

  # Create instance: vio_0, and set properties
  set vio_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:vio:3.0 vio_0 ]
  set_property -dict [ list \
   CONFIG.C_NUM_PROBE_IN {21} \
 ] $vio_0

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]

  # Create interface connections
  connect_bd_intf_net -intf_net lgain_adc_0_M_AXIS_LGAIN_ADC [get_bd_intf_pins M_AXIS_LGAIN_ADC_0] [get_bd_intf_pins lgain_adc_0/M_AXIS_LGAIN_ADC]
  connect_bd_intf_net -intf_net lgain_adc_1_M_AXIS_LGAIN_ADC [get_bd_intf_pins M_AXIS_LGAIN_ADC_1] [get_bd_intf_pins lgain_adc_1/M_AXIS_LGAIN_ADC]
  connect_bd_intf_net -intf_net lgain_adc_2_M_AXIS_LGAIN_ADC [get_bd_intf_pins M_AXIS_LGAIN_ADC_2] [get_bd_intf_pins lgain_adc_2/M_AXIS_LGAIN_ADC]
  connect_bd_intf_net -intf_net lgain_adc_3_M_AXIS_LGAIN_ADC [get_bd_intf_pins M_AXIS_LGAIN_ADC_3] [get_bd_intf_pins lgain_adc_3/M_AXIS_LGAIN_ADC]
  connect_bd_intf_net -intf_net xiphy_rx_pins_0_1 [get_bd_intf_pins xiphy_rx_pins_0] [get_bd_intf_pins ADC_IF_TEST_0_B69/xiphy_rx_pins]

  # Create port connections
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_2 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_2] [get_bd_pins vio_0/probe_in3]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_4 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_4] [get_bd_pins vio_0/probe_in0]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_6 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_6] [get_bd_pins vio_0/probe_in4]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_8 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_8] [get_bd_pins vio_0/probe_in5]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_10 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_10] [get_bd_pins vio_0/probe_in6]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_15 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_15] [get_bd_pins vio_0/probe_in7]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_17 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_17] [get_bd_pins vio_0/probe_in8]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_19 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_19] [get_bd_pins vio_0/probe_in9]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_21 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_21] [get_bd_pins vio_0/probe_in10]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_23 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_23] [get_bd_pins vio_0/probe_in11]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_26 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_26] [get_bd_pins vio_0/probe_in1]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_28 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_28] [get_bd_pins vio_0/probe_in2]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_30 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_30] [get_bd_pins vio_0/probe_in12]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_34 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_34] [get_bd_pins vio_0/probe_in13]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_36 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_36] [get_bd_pins vio_0/probe_in14]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_41 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_41] [get_bd_pins vio_0/probe_in15]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_43 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_43] [get_bd_pins vio_0/probe_in16]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_45 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_45] [get_bd_pins vio_0/probe_in17]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_47 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_47] [get_bd_pins vio_0/probe_in18]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_49 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_49] [get_bd_pins vio_0/probe_in19]
  connect_bd_net -net ADC_IF_TEST_0_B69_data_to_fabric_bg0_pin10_10 [get_bd_pins ADC_IF_TEST_0_B69/data_to_fabric_bg0_pin10_10] [get_bd_pins lgain_adc_3/In2]
  connect_bd_net -net ADC_IF_TEST_0_B69_data_to_fabric_bg0_pin2_2 [get_bd_pins ADC_IF_TEST_0_B69/data_to_fabric_bg0_pin2_2] [get_bd_pins lgain_adc_3/In3]
  connect_bd_net -net ADC_IF_TEST_0_B69_data_to_fabric_bg0_pin4_4 [get_bd_pins ADC_IF_TEST_0_B69/data_to_fabric_bg0_pin4_4] [get_bd_pins lgain_adc_3/In1]
  connect_bd_net -net ADC_IF_TEST_0_B69_data_to_fabric_bg0_pin8_8 [get_bd_pins ADC_IF_TEST_0_B69/data_to_fabric_bg0_pin8_8] [get_bd_pins lgain_adc_3/In0]
  connect_bd_net -net ADC_IF_TEST_0_B69_data_to_fabric_bg1_pin10_23 [get_bd_pins ADC_IF_TEST_0_B69/data_to_fabric_bg1_pin10_23] [get_bd_pins lgain_adc_2/In2]
  connect_bd_net -net ADC_IF_TEST_0_B69_data_to_fabric_bg1_pin2_15 [get_bd_pins ADC_IF_TEST_0_B69/data_to_fabric_bg1_pin2_15] [get_bd_pins lgain_adc_2/In3]
  connect_bd_net -net ADC_IF_TEST_0_B69_data_to_fabric_bg1_pin4_17 [get_bd_pins ADC_IF_TEST_0_B69/data_to_fabric_bg1_pin4_17] [get_bd_pins lgain_adc_2/In1]
  connect_bd_net -net ADC_IF_TEST_0_B69_data_to_fabric_bg1_pin8_21 [get_bd_pins ADC_IF_TEST_0_B69/data_to_fabric_bg1_pin8_21] [get_bd_pins lgain_adc_2/In0]
  connect_bd_net -net ADC_IF_TEST_0_B69_data_to_fabric_bg2_pin10_36 [get_bd_pins ADC_IF_TEST_0_B69/data_to_fabric_bg2_pin10_36] [get_bd_pins lgain_adc_1/In2]
  connect_bd_net -net ADC_IF_TEST_0_B69_data_to_fabric_bg2_pin2_28 [get_bd_pins ADC_IF_TEST_0_B69/data_to_fabric_bg2_pin2_28] [get_bd_pins lgain_adc_1/In3]
  connect_bd_net -net ADC_IF_TEST_0_B69_data_to_fabric_bg2_pin4_30 [get_bd_pins ADC_IF_TEST_0_B69/data_to_fabric_bg2_pin4_30] [get_bd_pins lgain_adc_1/In1]
  connect_bd_net -net ADC_IF_TEST_0_B69_data_to_fabric_bg2_pin8_34 [get_bd_pins ADC_IF_TEST_0_B69/data_to_fabric_bg2_pin8_34] [get_bd_pins lgain_adc_1/In0]
  connect_bd_net -net ADC_IF_TEST_0_B69_data_to_fabric_bg3_pin10_49 [get_bd_pins ADC_IF_TEST_0_B69/data_to_fabric_bg3_pin10_49] [get_bd_pins lgain_adc_0/In2]
  connect_bd_net -net ADC_IF_TEST_0_B69_data_to_fabric_bg3_pin2_41 [get_bd_pins ADC_IF_TEST_0_B69/data_to_fabric_bg3_pin2_41] [get_bd_pins lgain_adc_0/In3]
  connect_bd_net -net ADC_IF_TEST_0_B69_data_to_fabric_bg3_pin4_43 [get_bd_pins ADC_IF_TEST_0_B69/data_to_fabric_bg3_pin4_43] [get_bd_pins lgain_adc_0/In0]
  connect_bd_net -net ADC_IF_TEST_0_B69_data_to_fabric_bg3_pin8_47 [get_bd_pins ADC_IF_TEST_0_B69/data_to_fabric_bg3_pin8_47] [get_bd_pins lgain_adc_0/In1]
  connect_bd_net -net ADC_IF_TEST_0_B69_fifo_empty_2 [get_bd_pins ADC_IF_TEST_0_B69/fifo_empty_2] [get_bd_pins lgain_adc_3/empty_0]
  connect_bd_net -net ADC_IF_TEST_0_B69_fifo_empty_4 [get_bd_pins ADC_IF_TEST_0_B69/fifo_empty_4] [get_bd_pins lgain_adc_3/empty_1]
  connect_bd_net -net ADC_IF_TEST_0_B69_fifo_empty_8 [get_bd_pins ADC_IF_TEST_0_B69/fifo_empty_8] [get_bd_pins lgain_adc_3/empty_2]
  connect_bd_net -net ADC_IF_TEST_0_B69_fifo_empty_10 [get_bd_pins ADC_IF_TEST_0_B69/fifo_empty_10] [get_bd_pins lgain_adc_3/empty_3]
  connect_bd_net -net ADC_IF_TEST_0_B69_fifo_empty_15 [get_bd_pins ADC_IF_TEST_0_B69/fifo_empty_15] [get_bd_pins lgain_adc_2/empty_0]
  connect_bd_net -net ADC_IF_TEST_0_B69_fifo_empty_21 [get_bd_pins ADC_IF_TEST_0_B69/fifo_empty_21] [get_bd_pins lgain_adc_2/empty_2]
  connect_bd_net -net ADC_IF_TEST_0_B69_fifo_empty_23 [get_bd_pins ADC_IF_TEST_0_B69/fifo_empty_23] [get_bd_pins lgain_adc_2/empty_3]
  connect_bd_net -net ADC_IF_TEST_0_B69_fifo_empty_28 [get_bd_pins ADC_IF_TEST_0_B69/fifo_empty_28] [get_bd_pins lgain_adc_1/empty_0]
  connect_bd_net -net ADC_IF_TEST_0_B69_fifo_empty_30 [get_bd_pins ADC_IF_TEST_0_B69/fifo_empty_30] [get_bd_pins lgain_adc_1/empty_1]
  connect_bd_net -net ADC_IF_TEST_0_B69_fifo_empty_34 [get_bd_pins ADC_IF_TEST_0_B69/fifo_empty_34] [get_bd_pins lgain_adc_1/empty_2]
  connect_bd_net -net ADC_IF_TEST_0_B69_fifo_empty_36 [get_bd_pins ADC_IF_TEST_0_B69/fifo_empty_36] [get_bd_pins lgain_adc_1/empty_3]
  connect_bd_net -net ADC_IF_TEST_0_B69_fifo_empty_41 [get_bd_pins ADC_IF_TEST_0_B69/fifo_empty_41] [get_bd_pins lgain_adc_0/empty_0]
  connect_bd_net -net ADC_IF_TEST_0_B69_fifo_empty_43 [get_bd_pins ADC_IF_TEST_0_B69/fifo_empty_43] [get_bd_pins lgain_adc_0/empty_1]
  connect_bd_net -net ADC_IF_TEST_0_B69_fifo_empty_47 [get_bd_pins ADC_IF_TEST_0_B69/fifo_empty_47] [get_bd_pins lgain_adc_0/empty_2]
  connect_bd_net -net ADC_IF_TEST_0_B69_fifo_empty_49 [get_bd_pins ADC_IF_TEST_0_B69/fifo_empty_49] [get_bd_pins lgain_adc_0/empty_3]
  connect_bd_net -net ADC_IF_TEST_0_B69_fifo_rd_data_valid [get_bd_pins fifo_rd_data_valid] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_data_valid]
  connect_bd_net -net ADC_IF_TEST_0_B69_pll0_clkout0 [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_2] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_4] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_6] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_8] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_10] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_15] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_17] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_19] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_21] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_23] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_26] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_28] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_30] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_34] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_36] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_41] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_43] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_45] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_47] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_49] [get_bd_pins ADC_IF_TEST_0_B69/pll0_clkout0] [get_bd_pins lgain_B69_rst/slowest_sync_clk] [get_bd_pins lgain_adc_0/S_ACLK] [get_bd_pins lgain_adc_1/S_ACLK] [get_bd_pins lgain_adc_2/S_ACLK] [get_bd_pins lgain_adc_3/S_ACLK]
  connect_bd_net -net ADC_IF_TEST_0_B69_pll0_locked [get_bd_pins ADC_IF_TEST_0_B69/pll0_locked] [get_bd_pins lgain_B69_rst/ext_reset_in]
  connect_bd_net -net ADC_IF_TEST_0_B69_rx_bitslip_sync_done [get_bd_pins ADC_IF_TEST_0_B69/rx_bitslip_sync_done] [get_bd_pins vio_0/probe_in20]
  connect_bd_net -net empty_1_1 [get_bd_pins ADC_IF_TEST_0_B69/fifo_empty_17] [get_bd_pins lgain_adc_2/empty_1]
  connect_bd_net -net lgain_03_rst_peripheral_aresetn [get_bd_pins lgain_B69_rst/peripheral_aresetn] [get_bd_pins lgain_adc_0/S_ARESETN] [get_bd_pins lgain_adc_1/S_ARESETN] [get_bd_pins lgain_adc_2/S_ARESETN] [get_bd_pins lgain_adc_3/S_ARESETN]
  connect_bd_net -net mts_clk_pl_user_clk [get_bd_pins M_ACLK] [get_bd_pins ADC_IF_TEST_0_B69/clk] [get_bd_pins lgain_adc_0/M_ACLK] [get_bd_pins lgain_adc_1/M_ACLK] [get_bd_pins lgain_adc_2/M_ACLK] [get_bd_pins lgain_adc_3/M_ACLK] [get_bd_pins vio_0/clk]
  connect_bd_net -net pl_user_clk_rst_peripheral_aresetn [get_bd_pins M_ARESETN] [get_bd_pins lgain_adc_0/M_ARESETN] [get_bd_pins lgain_adc_1/M_ARESETN] [get_bd_pins lgain_adc_2/M_ARESETN] [get_bd_pins lgain_adc_3/M_ARESETN]
  connect_bd_net -net rst_1 [get_bd_pins rst] [get_bd_pins ADC_IF_TEST_0_B69/rst]
  connect_bd_net -net vio_0_probe_out0 [get_bd_pins ADC_IF_TEST_0_B69/start_bitslip] [get_bd_pins vio_0/probe_out0]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins ADC_IF_TEST_0_B69/en_vtc_bsc0] [get_bd_pins ADC_IF_TEST_0_B69/en_vtc_bsc1] [get_bd_pins ADC_IF_TEST_0_B69/en_vtc_bsc2] [get_bd_pins ADC_IF_TEST_0_B69/en_vtc_bsc3] [get_bd_pins ADC_IF_TEST_0_B69/en_vtc_bsc4] [get_bd_pins ADC_IF_TEST_0_B69/en_vtc_bsc5] [get_bd_pins ADC_IF_TEST_0_B69/en_vtc_bsc6] [get_bd_pins ADC_IF_TEST_0_B69/en_vtc_bsc7] [get_bd_pins xlconstant_0/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hardware_trigger_15
proc create_hier_cell_hardware_trigger_15 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_15() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv awa.tohoku.ac.jp:mogura2:trigger_control_rtl:1.1 TRIGGER_CONTROL


  # Create pins
  create_bd_pin -dir O DATAFRAMEGEN_ERROR
  create_bd_pin -dir O -from 15 -to 0 -type data DIGTAL_BASELINE
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MAX_TRIGGER_LENGTH
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I SET_CONFIG
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN
  create_bd_pin -dir I -from 47 -to 0 TIMESTAMP

  # Create instance: async_dataframe_gene_0, and set properties
  set async_dataframe_gene_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1 async_dataframe_gene_0 ]
  set_property -dict [ list \
   CONFIG.CHANNEL_ID {15} \
 ] $async_dataframe_gene_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {32} \
 ] $axis_dwidth_converter_0

  # Create instance: control_distributer_0, and set properties
  set control_distributer_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:control_distributer:1.0 control_distributer_0 ]

  # Create instance: data_trigger_0, and set properties
  set data_trigger_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:data_trigger:1.0 data_trigger_0 ]

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_blocks/hardware_trigger_15/data_trigger_0/ARESET]

  # Create instance: simple_dsp_module_0, and set properties
  set simple_dsp_module_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0 simple_dsp_module_0 ]

  # Create instance: trigger_selector_0, and set properties
  set trigger_selector_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_selector:1.0 trigger_selector_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins simple_dsp_module_0/l_s_axis]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins simple_dsp_module_0/h_s_axis]
  connect_bd_intf_net -intf_net TRIGGER_CONTROL_1 [get_bd_intf_pins TRIGGER_CONTROL] [get_bd_intf_pins control_distributer_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net async_dataframe_gene_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD1 [get_bd_intf_pins control_distributer_0/CONTROL_MOD1] [get_bd_intf_pins data_trigger_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD2 [get_bd_intf_pins control_distributer_0/CONTROL_MOD2] [get_bd_intf_pins trigger_selector_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net data_trigger_0_M_AXIS [get_bd_intf_pins data_trigger_0/M_AXIS] [get_bd_intf_pins trigger_selector_0/S_AXIS]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dac_m_axis [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins simple_dsp_module_0/dac_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dsp_m_axis [get_bd_intf_pins data_trigger_0/DSP_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/dsp_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_h_m_axis [get_bd_intf_pins data_trigger_0/H_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/h_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_l_m_axis [get_bd_intf_pins data_trigger_0/L_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/l_m_axis]
  connect_bd_intf_net -intf_net trigger_selector_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/S_AXIS] [get_bd_intf_pins trigger_selector_0/M_AXIS]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins trigger_selector_0/EXTERNAL_TRIGGER]
  connect_bd_net -net MAX_TRIGGER_LENGTH_1 [get_bd_pins MAX_TRIGGER_LENGTH] [get_bd_pins async_dataframe_gene_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_LOWER_THRESOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_UPPER_THRESOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/M_AXIS_ACLK] [get_bd_pins axis_dwidth_converter_0/aclk]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/M_AXIS_RESETN] [get_bd_pins axis_dwidth_converter_0/aresetn]
  connect_bd_net -net SET_CONFIG_1 [get_bd_pins SET_CONFIG] [get_bd_pins async_dataframe_gene_0/SET_CONFIG] [get_bd_pins data_trigger_0/SET_CONFIG] [get_bd_pins trigger_selector_0/SET_CONFIG]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/S_AXIS_ACLK] [get_bd_pins data_trigger_0/ACLK] [get_bd_pins simple_dsp_module_0/clk] [get_bd_pins trigger_selector_0/ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/S_AXIS_RESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net TIMESTAMP_1 [get_bd_pins TIMESTAMP] [get_bd_pins data_trigger_0/TIMESTAMP]
  connect_bd_net -net async_dataframe_gene_0_DATAFRAME_GEN_ERROR [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins async_dataframe_gene_0/DATAFRAME_GEN_ERROR]
  connect_bd_net -net control_distributer_0_H_GAIN_BASELINE_MOD0 [get_bd_pins control_distributer_0/H_GAIN_BASELINE_MOD0] [get_bd_pins simple_dsp_module_0/h_gain_baseline]
  connect_bd_net -net data_trigger_0_H_GAIN_SATURATED_FLAG [get_bd_pins HGAIN_SATURATION] [get_bd_pins data_trigger_0/H_GAIN_SATURATED_FLAG]
  connect_bd_net -net data_trigger_0_H_GAIN_TDATA [get_bd_pins data_trigger_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA_IN]
  connect_bd_net -net simple_dsp_module_0_digital_baseline [get_bd_pins DIGTAL_BASELINE] [get_bd_pins simple_dsp_module_0/digital_baseline]
  connect_bd_net -net trigger_selector_0_H_GAIN_TDATA [get_bd_pins async_dataframe_gene_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins data_trigger_0/ARESET] [get_bd_pins trigger_selector_0/ARESET] [get_bd_pins util_vector_logic_0/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hardware_trigger_14
proc create_hier_cell_hardware_trigger_14 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_14() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv awa.tohoku.ac.jp:mogura2:trigger_control_rtl:1.1 TRIGGER_CONTROL


  # Create pins
  create_bd_pin -dir O DATAFRAMEGEN_ERROR
  create_bd_pin -dir O -from 15 -to 0 -type data DIGTAL_BASELINE
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MAX_TRIGGER_LENGTH
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I SET_CONFIG
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN
  create_bd_pin -dir I -from 47 -to 0 TIMESTAMP

  # Create instance: async_dataframe_gene_0, and set properties
  set async_dataframe_gene_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1 async_dataframe_gene_0 ]
  set_property -dict [ list \
   CONFIG.CHANNEL_ID {14} \
 ] $async_dataframe_gene_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {32} \
 ] $axis_dwidth_converter_0

  # Create instance: control_distributer_0, and set properties
  set control_distributer_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:control_distributer:1.0 control_distributer_0 ]

  # Create instance: data_trigger_0, and set properties
  set data_trigger_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:data_trigger:1.0 data_trigger_0 ]

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_blocks/hardware_trigger_14/data_trigger_0/ARESET]

  # Create instance: simple_dsp_module_0, and set properties
  set simple_dsp_module_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0 simple_dsp_module_0 ]

  # Create instance: trigger_selector_0, and set properties
  set trigger_selector_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_selector:1.0 trigger_selector_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins simple_dsp_module_0/l_s_axis]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins simple_dsp_module_0/h_s_axis]
  connect_bd_intf_net -intf_net TRIGGER_CONTROL_1 [get_bd_intf_pins TRIGGER_CONTROL] [get_bd_intf_pins control_distributer_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net async_dataframe_gene_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD1 [get_bd_intf_pins control_distributer_0/CONTROL_MOD1] [get_bd_intf_pins data_trigger_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD2 [get_bd_intf_pins control_distributer_0/CONTROL_MOD2] [get_bd_intf_pins trigger_selector_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net data_trigger_0_M_AXIS [get_bd_intf_pins data_trigger_0/M_AXIS] [get_bd_intf_pins trigger_selector_0/S_AXIS]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dac_m_axis [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins simple_dsp_module_0/dac_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dsp_m_axis [get_bd_intf_pins data_trigger_0/DSP_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/dsp_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_h_m_axis [get_bd_intf_pins data_trigger_0/H_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/h_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_l_m_axis [get_bd_intf_pins data_trigger_0/L_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/l_m_axis]
  connect_bd_intf_net -intf_net trigger_selector_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/S_AXIS] [get_bd_intf_pins trigger_selector_0/M_AXIS]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins trigger_selector_0/EXTERNAL_TRIGGER]
  connect_bd_net -net MAX_TRIGGER_LENGTH_1 [get_bd_pins MAX_TRIGGER_LENGTH] [get_bd_pins async_dataframe_gene_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_LOWER_THRESOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_UPPER_THRESOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/M_AXIS_ACLK] [get_bd_pins axis_dwidth_converter_0/aclk]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/M_AXIS_RESETN] [get_bd_pins axis_dwidth_converter_0/aresetn]
  connect_bd_net -net SET_CONFIG_1 [get_bd_pins SET_CONFIG] [get_bd_pins async_dataframe_gene_0/SET_CONFIG] [get_bd_pins data_trigger_0/SET_CONFIG] [get_bd_pins trigger_selector_0/SET_CONFIG]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/S_AXIS_ACLK] [get_bd_pins data_trigger_0/ACLK] [get_bd_pins simple_dsp_module_0/clk] [get_bd_pins trigger_selector_0/ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/S_AXIS_RESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net TIMESTAMP_1 [get_bd_pins TIMESTAMP] [get_bd_pins data_trigger_0/TIMESTAMP]
  connect_bd_net -net async_dataframe_gene_0_DATAFRAME_GEN_ERROR [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins async_dataframe_gene_0/DATAFRAME_GEN_ERROR]
  connect_bd_net -net control_distributer_0_H_GAIN_BASELINE_MOD0 [get_bd_pins control_distributer_0/H_GAIN_BASELINE_MOD0] [get_bd_pins simple_dsp_module_0/h_gain_baseline]
  connect_bd_net -net data_trigger_0_H_GAIN_SATURATED_FLAG [get_bd_pins HGAIN_SATURATION] [get_bd_pins data_trigger_0/H_GAIN_SATURATED_FLAG]
  connect_bd_net -net data_trigger_0_H_GAIN_TDATA [get_bd_pins data_trigger_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA_IN]
  connect_bd_net -net simple_dsp_module_0_digital_baseline [get_bd_pins DIGTAL_BASELINE] [get_bd_pins simple_dsp_module_0/digital_baseline]
  connect_bd_net -net trigger_selector_0_H_GAIN_TDATA [get_bd_pins async_dataframe_gene_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins data_trigger_0/ARESET] [get_bd_pins trigger_selector_0/ARESET] [get_bd_pins util_vector_logic_0/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hardware_trigger_13
proc create_hier_cell_hardware_trigger_13 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_13() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv awa.tohoku.ac.jp:mogura2:trigger_control_rtl:1.1 TRIGGER_CONTROL


  # Create pins
  create_bd_pin -dir O DATAFRAMEGEN_ERROR
  create_bd_pin -dir O -from 15 -to 0 -type data DIGTAL_BASELINE
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MAX_TRIGGER_LENGTH
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I SET_CONFIG
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN
  create_bd_pin -dir I -from 47 -to 0 TIMESTAMP

  # Create instance: async_dataframe_gene_0, and set properties
  set async_dataframe_gene_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1 async_dataframe_gene_0 ]
  set_property -dict [ list \
   CONFIG.CHANNEL_ID {13} \
 ] $async_dataframe_gene_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {32} \
 ] $axis_dwidth_converter_0

  # Create instance: control_distributer_0, and set properties
  set control_distributer_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:control_distributer:1.0 control_distributer_0 ]

  # Create instance: data_trigger_0, and set properties
  set data_trigger_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:data_trigger:1.0 data_trigger_0 ]

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_blocks/hardware_trigger_13/data_trigger_0/ARESET]

  # Create instance: simple_dsp_module_0, and set properties
  set simple_dsp_module_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0 simple_dsp_module_0 ]

  # Create instance: trigger_selector_0, and set properties
  set trigger_selector_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_selector:1.0 trigger_selector_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins simple_dsp_module_0/l_s_axis]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins simple_dsp_module_0/h_s_axis]
  connect_bd_intf_net -intf_net TRIGGER_CONTROL_1 [get_bd_intf_pins TRIGGER_CONTROL] [get_bd_intf_pins control_distributer_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net async_dataframe_gene_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD1 [get_bd_intf_pins control_distributer_0/CONTROL_MOD1] [get_bd_intf_pins data_trigger_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD2 [get_bd_intf_pins control_distributer_0/CONTROL_MOD2] [get_bd_intf_pins trigger_selector_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net data_trigger_0_M_AXIS [get_bd_intf_pins data_trigger_0/M_AXIS] [get_bd_intf_pins trigger_selector_0/S_AXIS]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dac_m_axis [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins simple_dsp_module_0/dac_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dsp_m_axis [get_bd_intf_pins data_trigger_0/DSP_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/dsp_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_h_m_axis [get_bd_intf_pins data_trigger_0/H_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/h_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_l_m_axis [get_bd_intf_pins data_trigger_0/L_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/l_m_axis]
  connect_bd_intf_net -intf_net trigger_selector_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/S_AXIS] [get_bd_intf_pins trigger_selector_0/M_AXIS]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins trigger_selector_0/EXTERNAL_TRIGGER]
  connect_bd_net -net MAX_TRIGGER_LENGTH_1 [get_bd_pins MAX_TRIGGER_LENGTH] [get_bd_pins async_dataframe_gene_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_LOWER_THRESOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_UPPER_THRESOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/M_AXIS_ACLK] [get_bd_pins axis_dwidth_converter_0/aclk]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/M_AXIS_RESETN] [get_bd_pins axis_dwidth_converter_0/aresetn]
  connect_bd_net -net SET_CONFIG_1 [get_bd_pins SET_CONFIG] [get_bd_pins async_dataframe_gene_0/SET_CONFIG] [get_bd_pins data_trigger_0/SET_CONFIG] [get_bd_pins trigger_selector_0/SET_CONFIG]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/S_AXIS_ACLK] [get_bd_pins data_trigger_0/ACLK] [get_bd_pins simple_dsp_module_0/clk] [get_bd_pins trigger_selector_0/ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/S_AXIS_RESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net TIMESTAMP_1 [get_bd_pins TIMESTAMP] [get_bd_pins data_trigger_0/TIMESTAMP]
  connect_bd_net -net async_dataframe_gene_0_DATAFRAME_GEN_ERROR [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins async_dataframe_gene_0/DATAFRAME_GEN_ERROR]
  connect_bd_net -net control_distributer_0_H_GAIN_BASELINE_MOD0 [get_bd_pins control_distributer_0/H_GAIN_BASELINE_MOD0] [get_bd_pins simple_dsp_module_0/h_gain_baseline]
  connect_bd_net -net data_trigger_0_H_GAIN_SATURATED_FLAG [get_bd_pins HGAIN_SATURATION] [get_bd_pins data_trigger_0/H_GAIN_SATURATED_FLAG]
  connect_bd_net -net data_trigger_0_H_GAIN_TDATA [get_bd_pins data_trigger_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA_IN]
  connect_bd_net -net simple_dsp_module_0_digital_baseline [get_bd_pins DIGTAL_BASELINE] [get_bd_pins simple_dsp_module_0/digital_baseline]
  connect_bd_net -net trigger_selector_0_H_GAIN_TDATA [get_bd_pins async_dataframe_gene_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins data_trigger_0/ARESET] [get_bd_pins trigger_selector_0/ARESET] [get_bd_pins util_vector_logic_0/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hardware_trigger_12
proc create_hier_cell_hardware_trigger_12 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_12() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv awa.tohoku.ac.jp:mogura2:trigger_control_rtl:1.1 TRIGGER_CONTROL


  # Create pins
  create_bd_pin -dir O DATAFRAMEGEN_ERROR
  create_bd_pin -dir O -from 15 -to 0 -type data DIGTAL_BASELINE
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MAX_TRIGGER_LENGTH
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I SET_CONFIG
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN
  create_bd_pin -dir I -from 47 -to 0 TIMESTAMP

  # Create instance: async_dataframe_gene_0, and set properties
  set async_dataframe_gene_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1 async_dataframe_gene_0 ]
  set_property -dict [ list \
   CONFIG.CHANNEL_ID {12} \
 ] $async_dataframe_gene_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {32} \
 ] $axis_dwidth_converter_0

  # Create instance: control_distributer_0, and set properties
  set control_distributer_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:control_distributer:1.0 control_distributer_0 ]

  # Create instance: data_trigger_0, and set properties
  set data_trigger_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:data_trigger:1.0 data_trigger_0 ]

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_blocks/hardware_trigger_12/data_trigger_0/ARESET]

  # Create instance: simple_dsp_module_0, and set properties
  set simple_dsp_module_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0 simple_dsp_module_0 ]

  # Create instance: trigger_selector_0, and set properties
  set trigger_selector_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_selector:1.0 trigger_selector_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins simple_dsp_module_0/l_s_axis]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins simple_dsp_module_0/h_s_axis]
  connect_bd_intf_net -intf_net TRIGGER_CONTROL_1 [get_bd_intf_pins TRIGGER_CONTROL] [get_bd_intf_pins control_distributer_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net async_dataframe_gene_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD1 [get_bd_intf_pins control_distributer_0/CONTROL_MOD1] [get_bd_intf_pins data_trigger_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD2 [get_bd_intf_pins control_distributer_0/CONTROL_MOD2] [get_bd_intf_pins trigger_selector_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net data_trigger_0_M_AXIS [get_bd_intf_pins data_trigger_0/M_AXIS] [get_bd_intf_pins trigger_selector_0/S_AXIS]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dac_m_axis [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins simple_dsp_module_0/dac_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dsp_m_axis [get_bd_intf_pins data_trigger_0/DSP_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/dsp_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_h_m_axis [get_bd_intf_pins data_trigger_0/H_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/h_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_l_m_axis [get_bd_intf_pins data_trigger_0/L_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/l_m_axis]
  connect_bd_intf_net -intf_net trigger_selector_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/S_AXIS] [get_bd_intf_pins trigger_selector_0/M_AXIS]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins trigger_selector_0/EXTERNAL_TRIGGER]
  connect_bd_net -net MAX_TRIGGER_LENGTH_1 [get_bd_pins MAX_TRIGGER_LENGTH] [get_bd_pins async_dataframe_gene_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_LOWER_THRESOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_UPPER_THRESOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/M_AXIS_ACLK] [get_bd_pins axis_dwidth_converter_0/aclk]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/M_AXIS_RESETN] [get_bd_pins axis_dwidth_converter_0/aresetn]
  connect_bd_net -net SET_CONFIG_1 [get_bd_pins SET_CONFIG] [get_bd_pins async_dataframe_gene_0/SET_CONFIG] [get_bd_pins data_trigger_0/SET_CONFIG] [get_bd_pins trigger_selector_0/SET_CONFIG]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/S_AXIS_ACLK] [get_bd_pins data_trigger_0/ACLK] [get_bd_pins simple_dsp_module_0/clk] [get_bd_pins trigger_selector_0/ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/S_AXIS_RESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net TIMESTAMP_1 [get_bd_pins TIMESTAMP] [get_bd_pins data_trigger_0/TIMESTAMP]
  connect_bd_net -net async_dataframe_gene_0_DATAFRAME_GEN_ERROR [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins async_dataframe_gene_0/DATAFRAME_GEN_ERROR]
  connect_bd_net -net control_distributer_0_H_GAIN_BASELINE_MOD0 [get_bd_pins control_distributer_0/H_GAIN_BASELINE_MOD0] [get_bd_pins simple_dsp_module_0/h_gain_baseline]
  connect_bd_net -net data_trigger_0_H_GAIN_SATURATED_FLAG [get_bd_pins HGAIN_SATURATION] [get_bd_pins data_trigger_0/H_GAIN_SATURATED_FLAG]
  connect_bd_net -net data_trigger_0_H_GAIN_TDATA [get_bd_pins data_trigger_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA_IN]
  connect_bd_net -net simple_dsp_module_0_digital_baseline [get_bd_pins DIGTAL_BASELINE] [get_bd_pins simple_dsp_module_0/digital_baseline]
  connect_bd_net -net trigger_selector_0_H_GAIN_TDATA [get_bd_pins async_dataframe_gene_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins data_trigger_0/ARESET] [get_bd_pins trigger_selector_0/ARESET] [get_bd_pins util_vector_logic_0/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hardware_trigger_11
proc create_hier_cell_hardware_trigger_11 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_11() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv awa.tohoku.ac.jp:mogura2:trigger_control_rtl:1.1 TRIGGER_CONTROL


  # Create pins
  create_bd_pin -dir O DATAFRAMEGEN_ERROR
  create_bd_pin -dir O -from 15 -to 0 -type data DIGTAL_BASELINE
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MAX_TRIGGER_LENGTH
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I SET_CONFIG
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN
  create_bd_pin -dir I -from 47 -to 0 TIMESTAMP

  # Create instance: async_dataframe_gene_0, and set properties
  set async_dataframe_gene_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1 async_dataframe_gene_0 ]
  set_property -dict [ list \
   CONFIG.CHANNEL_ID {11} \
 ] $async_dataframe_gene_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {32} \
 ] $axis_dwidth_converter_0

  # Create instance: control_distributer_0, and set properties
  set control_distributer_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:control_distributer:1.0 control_distributer_0 ]

  # Create instance: data_trigger_0, and set properties
  set data_trigger_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:data_trigger:1.0 data_trigger_0 ]

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_blocks/hardware_trigger_11/data_trigger_0/ARESET]

  # Create instance: simple_dsp_module_0, and set properties
  set simple_dsp_module_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0 simple_dsp_module_0 ]

  # Create instance: trigger_selector_0, and set properties
  set trigger_selector_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_selector:1.0 trigger_selector_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins simple_dsp_module_0/l_s_axis]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins simple_dsp_module_0/h_s_axis]
  connect_bd_intf_net -intf_net TRIGGER_CONTROL_1 [get_bd_intf_pins TRIGGER_CONTROL] [get_bd_intf_pins control_distributer_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net async_dataframe_gene_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD1 [get_bd_intf_pins control_distributer_0/CONTROL_MOD1] [get_bd_intf_pins data_trigger_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD2 [get_bd_intf_pins control_distributer_0/CONTROL_MOD2] [get_bd_intf_pins trigger_selector_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net data_trigger_0_M_AXIS [get_bd_intf_pins data_trigger_0/M_AXIS] [get_bd_intf_pins trigger_selector_0/S_AXIS]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dac_m_axis [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins simple_dsp_module_0/dac_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dsp_m_axis [get_bd_intf_pins data_trigger_0/DSP_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/dsp_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_h_m_axis [get_bd_intf_pins data_trigger_0/H_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/h_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_l_m_axis [get_bd_intf_pins data_trigger_0/L_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/l_m_axis]
  connect_bd_intf_net -intf_net trigger_selector_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/S_AXIS] [get_bd_intf_pins trigger_selector_0/M_AXIS]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins trigger_selector_0/EXTERNAL_TRIGGER]
  connect_bd_net -net MAX_TRIGGER_LENGTH_1 [get_bd_pins MAX_TRIGGER_LENGTH] [get_bd_pins async_dataframe_gene_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_LOWER_THRESOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_UPPER_THRESOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/M_AXIS_ACLK] [get_bd_pins axis_dwidth_converter_0/aclk]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/M_AXIS_RESETN] [get_bd_pins axis_dwidth_converter_0/aresetn]
  connect_bd_net -net SET_CONFIG_1 [get_bd_pins SET_CONFIG] [get_bd_pins async_dataframe_gene_0/SET_CONFIG] [get_bd_pins data_trigger_0/SET_CONFIG] [get_bd_pins trigger_selector_0/SET_CONFIG]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/S_AXIS_ACLK] [get_bd_pins data_trigger_0/ACLK] [get_bd_pins simple_dsp_module_0/clk] [get_bd_pins trigger_selector_0/ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/S_AXIS_RESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net TIMESTAMP_1 [get_bd_pins TIMESTAMP] [get_bd_pins data_trigger_0/TIMESTAMP]
  connect_bd_net -net async_dataframe_gene_0_DATAFRAME_GEN_ERROR [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins async_dataframe_gene_0/DATAFRAME_GEN_ERROR]
  connect_bd_net -net control_distributer_0_H_GAIN_BASELINE_MOD0 [get_bd_pins control_distributer_0/H_GAIN_BASELINE_MOD0] [get_bd_pins simple_dsp_module_0/h_gain_baseline]
  connect_bd_net -net data_trigger_0_H_GAIN_SATURATED_FLAG [get_bd_pins HGAIN_SATURATION] [get_bd_pins data_trigger_0/H_GAIN_SATURATED_FLAG]
  connect_bd_net -net data_trigger_0_H_GAIN_TDATA [get_bd_pins data_trigger_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA_IN]
  connect_bd_net -net simple_dsp_module_0_digital_baseline [get_bd_pins DIGTAL_BASELINE] [get_bd_pins simple_dsp_module_0/digital_baseline]
  connect_bd_net -net trigger_selector_0_H_GAIN_TDATA [get_bd_pins async_dataframe_gene_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins data_trigger_0/ARESET] [get_bd_pins trigger_selector_0/ARESET] [get_bd_pins util_vector_logic_0/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hardware_trigger_10
proc create_hier_cell_hardware_trigger_10 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_10() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv awa.tohoku.ac.jp:mogura2:trigger_control_rtl:1.1 TRIGGER_CONTROL


  # Create pins
  create_bd_pin -dir O DATAFRAMEGEN_ERROR
  create_bd_pin -dir O -from 15 -to 0 -type data DIGTAL_BASELINE
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MAX_TRIGGER_LENGTH
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I SET_CONFIG
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN
  create_bd_pin -dir I -from 47 -to 0 TIMESTAMP

  # Create instance: async_dataframe_gene_0, and set properties
  set async_dataframe_gene_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1 async_dataframe_gene_0 ]
  set_property -dict [ list \
   CONFIG.CHANNEL_ID {10} \
 ] $async_dataframe_gene_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {32} \
 ] $axis_dwidth_converter_0

  # Create instance: control_distributer_0, and set properties
  set control_distributer_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:control_distributer:1.0 control_distributer_0 ]

  # Create instance: data_trigger_0, and set properties
  set data_trigger_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:data_trigger:1.0 data_trigger_0 ]

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_blocks/hardware_trigger_10/data_trigger_0/ARESET]

  # Create instance: simple_dsp_module_0, and set properties
  set simple_dsp_module_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0 simple_dsp_module_0 ]

  # Create instance: trigger_selector_0, and set properties
  set trigger_selector_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_selector:1.0 trigger_selector_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins simple_dsp_module_0/l_s_axis]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins simple_dsp_module_0/h_s_axis]
  connect_bd_intf_net -intf_net TRIGGER_CONTROL_1 [get_bd_intf_pins TRIGGER_CONTROL] [get_bd_intf_pins control_distributer_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net async_dataframe_gene_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD1 [get_bd_intf_pins control_distributer_0/CONTROL_MOD1] [get_bd_intf_pins data_trigger_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD2 [get_bd_intf_pins control_distributer_0/CONTROL_MOD2] [get_bd_intf_pins trigger_selector_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net data_trigger_0_M_AXIS [get_bd_intf_pins data_trigger_0/M_AXIS] [get_bd_intf_pins trigger_selector_0/S_AXIS]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dac_m_axis [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins simple_dsp_module_0/dac_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dsp_m_axis [get_bd_intf_pins data_trigger_0/DSP_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/dsp_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_h_m_axis [get_bd_intf_pins data_trigger_0/H_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/h_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_l_m_axis [get_bd_intf_pins data_trigger_0/L_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/l_m_axis]
  connect_bd_intf_net -intf_net trigger_selector_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/S_AXIS] [get_bd_intf_pins trigger_selector_0/M_AXIS]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins trigger_selector_0/EXTERNAL_TRIGGER]
  connect_bd_net -net MAX_TRIGGER_LENGTH_1 [get_bd_pins MAX_TRIGGER_LENGTH] [get_bd_pins async_dataframe_gene_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_LOWER_THRESOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_UPPER_THRESOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/M_AXIS_ACLK] [get_bd_pins axis_dwidth_converter_0/aclk]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/M_AXIS_RESETN] [get_bd_pins axis_dwidth_converter_0/aresetn]
  connect_bd_net -net SET_CONFIG_1 [get_bd_pins SET_CONFIG] [get_bd_pins async_dataframe_gene_0/SET_CONFIG] [get_bd_pins data_trigger_0/SET_CONFIG] [get_bd_pins trigger_selector_0/SET_CONFIG]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/S_AXIS_ACLK] [get_bd_pins data_trigger_0/ACLK] [get_bd_pins simple_dsp_module_0/clk] [get_bd_pins trigger_selector_0/ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/S_AXIS_RESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net TIMESTAMP_1 [get_bd_pins TIMESTAMP] [get_bd_pins data_trigger_0/TIMESTAMP]
  connect_bd_net -net async_dataframe_gene_0_DATAFRAME_GEN_ERROR [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins async_dataframe_gene_0/DATAFRAME_GEN_ERROR]
  connect_bd_net -net control_distributer_0_H_GAIN_BASELINE_MOD0 [get_bd_pins control_distributer_0/H_GAIN_BASELINE_MOD0] [get_bd_pins simple_dsp_module_0/h_gain_baseline]
  connect_bd_net -net data_trigger_0_H_GAIN_SATURATED_FLAG [get_bd_pins HGAIN_SATURATION] [get_bd_pins data_trigger_0/H_GAIN_SATURATED_FLAG]
  connect_bd_net -net data_trigger_0_H_GAIN_TDATA [get_bd_pins data_trigger_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA_IN]
  connect_bd_net -net simple_dsp_module_0_digital_baseline [get_bd_pins DIGTAL_BASELINE] [get_bd_pins simple_dsp_module_0/digital_baseline]
  connect_bd_net -net trigger_selector_0_H_GAIN_TDATA [get_bd_pins async_dataframe_gene_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins data_trigger_0/ARESET] [get_bd_pins trigger_selector_0/ARESET] [get_bd_pins util_vector_logic_0/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hardware_trigger_9
proc create_hier_cell_hardware_trigger_9 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_9() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv awa.tohoku.ac.jp:mogura2:trigger_control_rtl:1.1 TRIGGER_CONTROL


  # Create pins
  create_bd_pin -dir O DATAFRAMEGEN_ERROR
  create_bd_pin -dir O -from 15 -to 0 -type data DIGTAL_BASELINE
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MAX_TRIGGER_LENGTH
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I SET_CONFIG
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN
  create_bd_pin -dir I -from 47 -to 0 TIMESTAMP

  # Create instance: async_dataframe_gene_0, and set properties
  set async_dataframe_gene_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1 async_dataframe_gene_0 ]
  set_property -dict [ list \
   CONFIG.CHANNEL_ID {9} \
 ] $async_dataframe_gene_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {32} \
 ] $axis_dwidth_converter_0

  # Create instance: control_distributer_0, and set properties
  set control_distributer_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:control_distributer:1.0 control_distributer_0 ]

  # Create instance: data_trigger_0, and set properties
  set data_trigger_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:data_trigger:1.0 data_trigger_0 ]

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_blocks/hardware_trigger_9/data_trigger_0/ARESET]

  # Create instance: simple_dsp_module_0, and set properties
  set simple_dsp_module_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0 simple_dsp_module_0 ]

  # Create instance: trigger_selector_0, and set properties
  set trigger_selector_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_selector:1.0 trigger_selector_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins simple_dsp_module_0/l_s_axis]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins simple_dsp_module_0/h_s_axis]
  connect_bd_intf_net -intf_net TRIGGER_CONTROL_1 [get_bd_intf_pins TRIGGER_CONTROL] [get_bd_intf_pins control_distributer_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net async_dataframe_gene_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD1 [get_bd_intf_pins control_distributer_0/CONTROL_MOD1] [get_bd_intf_pins data_trigger_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD2 [get_bd_intf_pins control_distributer_0/CONTROL_MOD2] [get_bd_intf_pins trigger_selector_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net data_trigger_0_M_AXIS [get_bd_intf_pins data_trigger_0/M_AXIS] [get_bd_intf_pins trigger_selector_0/S_AXIS]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dac_m_axis [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins simple_dsp_module_0/dac_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dsp_m_axis [get_bd_intf_pins data_trigger_0/DSP_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/dsp_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_h_m_axis [get_bd_intf_pins data_trigger_0/H_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/h_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_l_m_axis [get_bd_intf_pins data_trigger_0/L_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/l_m_axis]
  connect_bd_intf_net -intf_net trigger_selector_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/S_AXIS] [get_bd_intf_pins trigger_selector_0/M_AXIS]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins trigger_selector_0/EXTERNAL_TRIGGER]
  connect_bd_net -net MAX_TRIGGER_LENGTH_1 [get_bd_pins MAX_TRIGGER_LENGTH] [get_bd_pins async_dataframe_gene_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_LOWER_THRESOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_UPPER_THRESOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/M_AXIS_ACLK] [get_bd_pins axis_dwidth_converter_0/aclk]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/M_AXIS_RESETN] [get_bd_pins axis_dwidth_converter_0/aresetn]
  connect_bd_net -net SET_CONFIG_1 [get_bd_pins SET_CONFIG] [get_bd_pins async_dataframe_gene_0/SET_CONFIG] [get_bd_pins data_trigger_0/SET_CONFIG] [get_bd_pins trigger_selector_0/SET_CONFIG]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/S_AXIS_ACLK] [get_bd_pins data_trigger_0/ACLK] [get_bd_pins simple_dsp_module_0/clk] [get_bd_pins trigger_selector_0/ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/S_AXIS_RESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net TIMESTAMP_1 [get_bd_pins TIMESTAMP] [get_bd_pins data_trigger_0/TIMESTAMP]
  connect_bd_net -net async_dataframe_gene_0_DATAFRAME_GEN_ERROR [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins async_dataframe_gene_0/DATAFRAME_GEN_ERROR]
  connect_bd_net -net control_distributer_0_H_GAIN_BASELINE_MOD0 [get_bd_pins control_distributer_0/H_GAIN_BASELINE_MOD0] [get_bd_pins simple_dsp_module_0/h_gain_baseline]
  connect_bd_net -net data_trigger_0_H_GAIN_SATURATED_FLAG [get_bd_pins HGAIN_SATURATION] [get_bd_pins data_trigger_0/H_GAIN_SATURATED_FLAG]
  connect_bd_net -net data_trigger_0_H_GAIN_TDATA [get_bd_pins data_trigger_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA_IN]
  connect_bd_net -net simple_dsp_module_0_digital_baseline [get_bd_pins DIGTAL_BASELINE] [get_bd_pins simple_dsp_module_0/digital_baseline]
  connect_bd_net -net trigger_selector_0_H_GAIN_TDATA [get_bd_pins async_dataframe_gene_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins data_trigger_0/ARESET] [get_bd_pins trigger_selector_0/ARESET] [get_bd_pins util_vector_logic_0/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hardware_trigger_8
proc create_hier_cell_hardware_trigger_8 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_8() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv awa.tohoku.ac.jp:mogura2:trigger_control_rtl:1.1 TRIGGER_CONTROL


  # Create pins
  create_bd_pin -dir O DATAFRAMEGEN_ERROR
  create_bd_pin -dir O -from 15 -to 0 -type data DIGTAL_BASELINE
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MAX_TRIGGER_LENGTH
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I SET_CONFIG
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN
  create_bd_pin -dir I -from 47 -to 0 TIMESTAMP

  # Create instance: async_dataframe_gene_0, and set properties
  set async_dataframe_gene_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1 async_dataframe_gene_0 ]
  set_property -dict [ list \
   CONFIG.CHANNEL_ID {8} \
 ] $async_dataframe_gene_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {32} \
 ] $axis_dwidth_converter_0

  # Create instance: control_distributer_0, and set properties
  set control_distributer_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:control_distributer:1.0 control_distributer_0 ]

  # Create instance: data_trigger_0, and set properties
  set data_trigger_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:data_trigger:1.0 data_trigger_0 ]

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_blocks/hardware_trigger_8/data_trigger_0/ARESET]

  # Create instance: simple_dsp_module_0, and set properties
  set simple_dsp_module_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0 simple_dsp_module_0 ]

  # Create instance: trigger_selector_0, and set properties
  set trigger_selector_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_selector:1.0 trigger_selector_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins simple_dsp_module_0/l_s_axis]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins simple_dsp_module_0/h_s_axis]
  connect_bd_intf_net -intf_net TRIGGER_CONTROL_1 [get_bd_intf_pins TRIGGER_CONTROL] [get_bd_intf_pins control_distributer_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net async_dataframe_gene_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD1 [get_bd_intf_pins control_distributer_0/CONTROL_MOD1] [get_bd_intf_pins data_trigger_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD2 [get_bd_intf_pins control_distributer_0/CONTROL_MOD2] [get_bd_intf_pins trigger_selector_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net data_trigger_0_M_AXIS [get_bd_intf_pins data_trigger_0/M_AXIS] [get_bd_intf_pins trigger_selector_0/S_AXIS]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dac_m_axis [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins simple_dsp_module_0/dac_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dsp_m_axis [get_bd_intf_pins data_trigger_0/DSP_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/dsp_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_h_m_axis [get_bd_intf_pins data_trigger_0/H_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/h_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_l_m_axis [get_bd_intf_pins data_trigger_0/L_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/l_m_axis]
  connect_bd_intf_net -intf_net trigger_selector_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/S_AXIS] [get_bd_intf_pins trigger_selector_0/M_AXIS]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins trigger_selector_0/EXTERNAL_TRIGGER]
  connect_bd_net -net MAX_TRIGGER_LENGTH_1 [get_bd_pins MAX_TRIGGER_LENGTH] [get_bd_pins async_dataframe_gene_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_LOWER_THRESOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_UPPER_THRESOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/M_AXIS_ACLK] [get_bd_pins axis_dwidth_converter_0/aclk]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/M_AXIS_RESETN] [get_bd_pins axis_dwidth_converter_0/aresetn]
  connect_bd_net -net SET_CONFIG_1 [get_bd_pins SET_CONFIG] [get_bd_pins async_dataframe_gene_0/SET_CONFIG] [get_bd_pins data_trigger_0/SET_CONFIG] [get_bd_pins trigger_selector_0/SET_CONFIG]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/S_AXIS_ACLK] [get_bd_pins data_trigger_0/ACLK] [get_bd_pins simple_dsp_module_0/clk] [get_bd_pins trigger_selector_0/ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/S_AXIS_RESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net TIMESTAMP_1 [get_bd_pins TIMESTAMP] [get_bd_pins data_trigger_0/TIMESTAMP]
  connect_bd_net -net async_dataframe_gene_0_DATAFRAME_GEN_ERROR [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins async_dataframe_gene_0/DATAFRAME_GEN_ERROR]
  connect_bd_net -net control_distributer_0_H_GAIN_BASELINE_MOD0 [get_bd_pins control_distributer_0/H_GAIN_BASELINE_MOD0] [get_bd_pins simple_dsp_module_0/h_gain_baseline]
  connect_bd_net -net data_trigger_0_H_GAIN_SATURATED_FLAG [get_bd_pins HGAIN_SATURATION] [get_bd_pins data_trigger_0/H_GAIN_SATURATED_FLAG]
  connect_bd_net -net data_trigger_0_H_GAIN_TDATA [get_bd_pins data_trigger_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA_IN]
  connect_bd_net -net simple_dsp_module_0_digital_baseline [get_bd_pins DIGTAL_BASELINE] [get_bd_pins simple_dsp_module_0/digital_baseline]
  connect_bd_net -net trigger_selector_0_H_GAIN_TDATA [get_bd_pins async_dataframe_gene_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins data_trigger_0/ARESET] [get_bd_pins trigger_selector_0/ARESET] [get_bd_pins util_vector_logic_0/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hardware_trigger_7
proc create_hier_cell_hardware_trigger_7 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_7() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv awa.tohoku.ac.jp:mogura2:trigger_control_rtl:1.1 TRIGGER_CONTROL


  # Create pins
  create_bd_pin -dir O DATAFRAMEGEN_ERROR
  create_bd_pin -dir O -from 15 -to 0 -type data DIGTAL_BASELINE
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MAX_TRIGGER_LENGTH
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I SET_CONFIG
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN
  create_bd_pin -dir I -from 47 -to 0 TIMESTAMP

  # Create instance: async_dataframe_gene_0, and set properties
  set async_dataframe_gene_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1 async_dataframe_gene_0 ]
  set_property -dict [ list \
   CONFIG.CHANNEL_ID {7} \
 ] $async_dataframe_gene_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {32} \
 ] $axis_dwidth_converter_0

  # Create instance: control_distributer_0, and set properties
  set control_distributer_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:control_distributer:1.0 control_distributer_0 ]

  # Create instance: data_trigger_0, and set properties
  set data_trigger_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:data_trigger:1.0 data_trigger_0 ]

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_blocks/hardware_trigger_7/data_trigger_0/ARESET]

  # Create instance: simple_dsp_module_0, and set properties
  set simple_dsp_module_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0 simple_dsp_module_0 ]

  # Create instance: trigger_selector_0, and set properties
  set trigger_selector_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_selector:1.0 trigger_selector_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins simple_dsp_module_0/l_s_axis]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins simple_dsp_module_0/h_s_axis]
  connect_bd_intf_net -intf_net TRIGGER_CONTROL_1 [get_bd_intf_pins TRIGGER_CONTROL] [get_bd_intf_pins control_distributer_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net async_dataframe_gene_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD1 [get_bd_intf_pins control_distributer_0/CONTROL_MOD1] [get_bd_intf_pins data_trigger_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD2 [get_bd_intf_pins control_distributer_0/CONTROL_MOD2] [get_bd_intf_pins trigger_selector_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net data_trigger_0_M_AXIS [get_bd_intf_pins data_trigger_0/M_AXIS] [get_bd_intf_pins trigger_selector_0/S_AXIS]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dac_m_axis [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins simple_dsp_module_0/dac_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dsp_m_axis [get_bd_intf_pins data_trigger_0/DSP_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/dsp_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_h_m_axis [get_bd_intf_pins data_trigger_0/H_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/h_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_l_m_axis [get_bd_intf_pins data_trigger_0/L_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/l_m_axis]
  connect_bd_intf_net -intf_net trigger_selector_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/S_AXIS] [get_bd_intf_pins trigger_selector_0/M_AXIS]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins trigger_selector_0/EXTERNAL_TRIGGER]
  connect_bd_net -net MAX_TRIGGER_LENGTH_1 [get_bd_pins MAX_TRIGGER_LENGTH] [get_bd_pins async_dataframe_gene_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_LOWER_THRESOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_UPPER_THRESOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/M_AXIS_ACLK] [get_bd_pins axis_dwidth_converter_0/aclk]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/M_AXIS_RESETN] [get_bd_pins axis_dwidth_converter_0/aresetn]
  connect_bd_net -net SET_CONFIG_1 [get_bd_pins SET_CONFIG] [get_bd_pins async_dataframe_gene_0/SET_CONFIG] [get_bd_pins data_trigger_0/SET_CONFIG] [get_bd_pins trigger_selector_0/SET_CONFIG]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/S_AXIS_ACLK] [get_bd_pins data_trigger_0/ACLK] [get_bd_pins simple_dsp_module_0/clk] [get_bd_pins trigger_selector_0/ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/S_AXIS_RESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net TIMESTAMP_1 [get_bd_pins TIMESTAMP] [get_bd_pins data_trigger_0/TIMESTAMP]
  connect_bd_net -net async_dataframe_gene_0_DATAFRAME_GEN_ERROR [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins async_dataframe_gene_0/DATAFRAME_GEN_ERROR]
  connect_bd_net -net control_distributer_0_H_GAIN_BASELINE_MOD0 [get_bd_pins control_distributer_0/H_GAIN_BASELINE_MOD0] [get_bd_pins simple_dsp_module_0/h_gain_baseline]
  connect_bd_net -net data_trigger_0_H_GAIN_SATURATED_FLAG [get_bd_pins HGAIN_SATURATION] [get_bd_pins data_trigger_0/H_GAIN_SATURATED_FLAG]
  connect_bd_net -net data_trigger_0_H_GAIN_TDATA [get_bd_pins data_trigger_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA_IN]
  connect_bd_net -net simple_dsp_module_0_digital_baseline [get_bd_pins DIGTAL_BASELINE] [get_bd_pins simple_dsp_module_0/digital_baseline]
  connect_bd_net -net trigger_selector_0_H_GAIN_TDATA [get_bd_pins async_dataframe_gene_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins data_trigger_0/ARESET] [get_bd_pins trigger_selector_0/ARESET] [get_bd_pins util_vector_logic_0/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hardware_trigger_6
proc create_hier_cell_hardware_trigger_6 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_6() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv awa.tohoku.ac.jp:mogura2:trigger_control_rtl:1.1 TRIGGER_CONTROL


  # Create pins
  create_bd_pin -dir O DATAFRAMEGEN_ERROR
  create_bd_pin -dir O -from 15 -to 0 -type data DIGTAL_BASELINE
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MAX_TRIGGER_LENGTH
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I SET_CONFIG
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN
  create_bd_pin -dir I -from 47 -to 0 TIMESTAMP

  # Create instance: async_dataframe_gene_0, and set properties
  set async_dataframe_gene_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1 async_dataframe_gene_0 ]
  set_property -dict [ list \
   CONFIG.CHANNEL_ID {6} \
 ] $async_dataframe_gene_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {32} \
 ] $axis_dwidth_converter_0

  # Create instance: control_distributer_0, and set properties
  set control_distributer_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:control_distributer:1.0 control_distributer_0 ]

  # Create instance: data_trigger_0, and set properties
  set data_trigger_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:data_trigger:1.0 data_trigger_0 ]

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_blocks/hardware_trigger_6/data_trigger_0/ARESET]

  # Create instance: simple_dsp_module_0, and set properties
  set simple_dsp_module_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0 simple_dsp_module_0 ]

  # Create instance: trigger_selector_0, and set properties
  set trigger_selector_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_selector:1.0 trigger_selector_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins simple_dsp_module_0/l_s_axis]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins simple_dsp_module_0/h_s_axis]
  connect_bd_intf_net -intf_net TRIGGER_CONTROL_1 [get_bd_intf_pins TRIGGER_CONTROL] [get_bd_intf_pins control_distributer_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net async_dataframe_gene_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD1 [get_bd_intf_pins control_distributer_0/CONTROL_MOD1] [get_bd_intf_pins data_trigger_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD2 [get_bd_intf_pins control_distributer_0/CONTROL_MOD2] [get_bd_intf_pins trigger_selector_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net data_trigger_0_M_AXIS [get_bd_intf_pins data_trigger_0/M_AXIS] [get_bd_intf_pins trigger_selector_0/S_AXIS]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dac_m_axis [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins simple_dsp_module_0/dac_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dsp_m_axis [get_bd_intf_pins data_trigger_0/DSP_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/dsp_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_h_m_axis [get_bd_intf_pins data_trigger_0/H_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/h_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_l_m_axis [get_bd_intf_pins data_trigger_0/L_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/l_m_axis]
  connect_bd_intf_net -intf_net trigger_selector_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/S_AXIS] [get_bd_intf_pins trigger_selector_0/M_AXIS]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins trigger_selector_0/EXTERNAL_TRIGGER]
  connect_bd_net -net MAX_TRIGGER_LENGTH_1 [get_bd_pins MAX_TRIGGER_LENGTH] [get_bd_pins async_dataframe_gene_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_LOWER_THRESOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_UPPER_THRESOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/M_AXIS_ACLK] [get_bd_pins axis_dwidth_converter_0/aclk]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/M_AXIS_RESETN] [get_bd_pins axis_dwidth_converter_0/aresetn]
  connect_bd_net -net SET_CONFIG_1 [get_bd_pins SET_CONFIG] [get_bd_pins async_dataframe_gene_0/SET_CONFIG] [get_bd_pins data_trigger_0/SET_CONFIG] [get_bd_pins trigger_selector_0/SET_CONFIG]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/S_AXIS_ACLK] [get_bd_pins data_trigger_0/ACLK] [get_bd_pins simple_dsp_module_0/clk] [get_bd_pins trigger_selector_0/ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/S_AXIS_RESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net TIMESTAMP_1 [get_bd_pins TIMESTAMP] [get_bd_pins data_trigger_0/TIMESTAMP]
  connect_bd_net -net async_dataframe_gene_0_DATAFRAME_GEN_ERROR [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins async_dataframe_gene_0/DATAFRAME_GEN_ERROR]
  connect_bd_net -net control_distributer_0_H_GAIN_BASELINE_MOD0 [get_bd_pins control_distributer_0/H_GAIN_BASELINE_MOD0] [get_bd_pins simple_dsp_module_0/h_gain_baseline]
  connect_bd_net -net data_trigger_0_H_GAIN_SATURATED_FLAG [get_bd_pins HGAIN_SATURATION] [get_bd_pins data_trigger_0/H_GAIN_SATURATED_FLAG]
  connect_bd_net -net data_trigger_0_H_GAIN_TDATA [get_bd_pins data_trigger_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA_IN]
  connect_bd_net -net simple_dsp_module_0_digital_baseline [get_bd_pins DIGTAL_BASELINE] [get_bd_pins simple_dsp_module_0/digital_baseline]
  connect_bd_net -net trigger_selector_0_H_GAIN_TDATA [get_bd_pins async_dataframe_gene_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins data_trigger_0/ARESET] [get_bd_pins trigger_selector_0/ARESET] [get_bd_pins util_vector_logic_0/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hardware_trigger_5
proc create_hier_cell_hardware_trigger_5 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_5() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv awa.tohoku.ac.jp:mogura2:trigger_control_rtl:1.1 TRIGGER_CONTROL


  # Create pins
  create_bd_pin -dir O DATAFRAMEGEN_ERROR
  create_bd_pin -dir O -from 15 -to 0 -type data DIGTAL_BASELINE
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MAX_TRIGGER_LENGTH
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I SET_CONFIG
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN
  create_bd_pin -dir I -from 47 -to 0 TIMESTAMP

  # Create instance: async_dataframe_gene_0, and set properties
  set async_dataframe_gene_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1 async_dataframe_gene_0 ]
  set_property -dict [ list \
   CONFIG.CHANNEL_ID {5} \
 ] $async_dataframe_gene_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {32} \
 ] $axis_dwidth_converter_0

  # Create instance: control_distributer_0, and set properties
  set control_distributer_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:control_distributer:1.0 control_distributer_0 ]

  # Create instance: data_trigger_0, and set properties
  set data_trigger_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:data_trigger:1.0 data_trigger_0 ]

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_blocks/hardware_trigger_5/data_trigger_0/ARESET]

  # Create instance: simple_dsp_module_0, and set properties
  set simple_dsp_module_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0 simple_dsp_module_0 ]

  # Create instance: trigger_selector_0, and set properties
  set trigger_selector_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_selector:1.0 trigger_selector_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins simple_dsp_module_0/l_s_axis]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins simple_dsp_module_0/h_s_axis]
  connect_bd_intf_net -intf_net TRIGGER_CONTROL_1 [get_bd_intf_pins TRIGGER_CONTROL] [get_bd_intf_pins control_distributer_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net async_dataframe_gene_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD1 [get_bd_intf_pins control_distributer_0/CONTROL_MOD1] [get_bd_intf_pins data_trigger_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD2 [get_bd_intf_pins control_distributer_0/CONTROL_MOD2] [get_bd_intf_pins trigger_selector_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net data_trigger_0_M_AXIS [get_bd_intf_pins data_trigger_0/M_AXIS] [get_bd_intf_pins trigger_selector_0/S_AXIS]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dac_m_axis [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins simple_dsp_module_0/dac_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dsp_m_axis [get_bd_intf_pins data_trigger_0/DSP_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/dsp_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_h_m_axis [get_bd_intf_pins data_trigger_0/H_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/h_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_l_m_axis [get_bd_intf_pins data_trigger_0/L_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/l_m_axis]
  connect_bd_intf_net -intf_net trigger_selector_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/S_AXIS] [get_bd_intf_pins trigger_selector_0/M_AXIS]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins trigger_selector_0/EXTERNAL_TRIGGER]
  connect_bd_net -net MAX_TRIGGER_LENGTH_1 [get_bd_pins MAX_TRIGGER_LENGTH] [get_bd_pins async_dataframe_gene_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_LOWER_THRESOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_UPPER_THRESOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/M_AXIS_ACLK] [get_bd_pins axis_dwidth_converter_0/aclk]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/M_AXIS_RESETN] [get_bd_pins axis_dwidth_converter_0/aresetn]
  connect_bd_net -net SET_CONFIG_1 [get_bd_pins SET_CONFIG] [get_bd_pins async_dataframe_gene_0/SET_CONFIG] [get_bd_pins data_trigger_0/SET_CONFIG] [get_bd_pins trigger_selector_0/SET_CONFIG]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/S_AXIS_ACLK] [get_bd_pins data_trigger_0/ACLK] [get_bd_pins simple_dsp_module_0/clk] [get_bd_pins trigger_selector_0/ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/S_AXIS_RESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net TIMESTAMP_1 [get_bd_pins TIMESTAMP] [get_bd_pins data_trigger_0/TIMESTAMP]
  connect_bd_net -net async_dataframe_gene_0_DATAFRAME_GEN_ERROR [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins async_dataframe_gene_0/DATAFRAME_GEN_ERROR]
  connect_bd_net -net control_distributer_0_H_GAIN_BASELINE_MOD0 [get_bd_pins control_distributer_0/H_GAIN_BASELINE_MOD0] [get_bd_pins simple_dsp_module_0/h_gain_baseline]
  connect_bd_net -net data_trigger_0_H_GAIN_SATURATED_FLAG [get_bd_pins HGAIN_SATURATION] [get_bd_pins data_trigger_0/H_GAIN_SATURATED_FLAG]
  connect_bd_net -net data_trigger_0_H_GAIN_TDATA [get_bd_pins data_trigger_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA_IN]
  connect_bd_net -net simple_dsp_module_0_digital_baseline [get_bd_pins DIGTAL_BASELINE] [get_bd_pins simple_dsp_module_0/digital_baseline]
  connect_bd_net -net trigger_selector_0_H_GAIN_TDATA [get_bd_pins async_dataframe_gene_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins data_trigger_0/ARESET] [get_bd_pins trigger_selector_0/ARESET] [get_bd_pins util_vector_logic_0/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hardware_trigger_4
proc create_hier_cell_hardware_trigger_4 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_4() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv awa.tohoku.ac.jp:mogura2:trigger_control_rtl:1.1 TRIGGER_CONTROL


  # Create pins
  create_bd_pin -dir O DATAFRAMEGEN_ERROR
  create_bd_pin -dir O -from 15 -to 0 -type data DIGTAL_BASELINE
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MAX_TRIGGER_LENGTH
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I SET_CONFIG
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN
  create_bd_pin -dir I -from 47 -to 0 TIMESTAMP

  # Create instance: async_dataframe_gene_0, and set properties
  set async_dataframe_gene_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1 async_dataframe_gene_0 ]
  set_property -dict [ list \
   CONFIG.CHANNEL_ID {4} \
 ] $async_dataframe_gene_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {32} \
 ] $axis_dwidth_converter_0

  # Create instance: control_distributer_0, and set properties
  set control_distributer_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:control_distributer:1.0 control_distributer_0 ]

  # Create instance: data_trigger_0, and set properties
  set data_trigger_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:data_trigger:1.0 data_trigger_0 ]

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_blocks/hardware_trigger_4/data_trigger_0/ARESET]

  # Create instance: simple_dsp_module_0, and set properties
  set simple_dsp_module_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0 simple_dsp_module_0 ]

  # Create instance: trigger_selector_0, and set properties
  set trigger_selector_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_selector:1.0 trigger_selector_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins simple_dsp_module_0/l_s_axis]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins simple_dsp_module_0/h_s_axis]
  connect_bd_intf_net -intf_net TRIGGER_CONTROL_1 [get_bd_intf_pins TRIGGER_CONTROL] [get_bd_intf_pins control_distributer_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net async_dataframe_gene_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD1 [get_bd_intf_pins control_distributer_0/CONTROL_MOD1] [get_bd_intf_pins data_trigger_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD2 [get_bd_intf_pins control_distributer_0/CONTROL_MOD2] [get_bd_intf_pins trigger_selector_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net data_trigger_0_M_AXIS [get_bd_intf_pins data_trigger_0/M_AXIS] [get_bd_intf_pins trigger_selector_0/S_AXIS]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dac_m_axis [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins simple_dsp_module_0/dac_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dsp_m_axis [get_bd_intf_pins data_trigger_0/DSP_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/dsp_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_h_m_axis [get_bd_intf_pins data_trigger_0/H_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/h_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_l_m_axis [get_bd_intf_pins data_trigger_0/L_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/l_m_axis]
  connect_bd_intf_net -intf_net trigger_selector_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/S_AXIS] [get_bd_intf_pins trigger_selector_0/M_AXIS]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins trigger_selector_0/EXTERNAL_TRIGGER]
  connect_bd_net -net MAX_TRIGGER_LENGTH_1 [get_bd_pins MAX_TRIGGER_LENGTH] [get_bd_pins async_dataframe_gene_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_LOWER_THRESOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_UPPER_THRESOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/M_AXIS_ACLK] [get_bd_pins axis_dwidth_converter_0/aclk]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/M_AXIS_RESETN] [get_bd_pins axis_dwidth_converter_0/aresetn]
  connect_bd_net -net SET_CONFIG_1 [get_bd_pins SET_CONFIG] [get_bd_pins async_dataframe_gene_0/SET_CONFIG] [get_bd_pins data_trigger_0/SET_CONFIG] [get_bd_pins trigger_selector_0/SET_CONFIG]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/S_AXIS_ACLK] [get_bd_pins data_trigger_0/ACLK] [get_bd_pins simple_dsp_module_0/clk] [get_bd_pins trigger_selector_0/ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/S_AXIS_RESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net TIMESTAMP_1 [get_bd_pins TIMESTAMP] [get_bd_pins data_trigger_0/TIMESTAMP]
  connect_bd_net -net async_dataframe_gene_0_DATAFRAME_GEN_ERROR [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins async_dataframe_gene_0/DATAFRAME_GEN_ERROR]
  connect_bd_net -net control_distributer_0_H_GAIN_BASELINE_MOD0 [get_bd_pins control_distributer_0/H_GAIN_BASELINE_MOD0] [get_bd_pins simple_dsp_module_0/h_gain_baseline]
  connect_bd_net -net data_trigger_0_H_GAIN_SATURATED_FLAG [get_bd_pins HGAIN_SATURATION] [get_bd_pins data_trigger_0/H_GAIN_SATURATED_FLAG]
  connect_bd_net -net data_trigger_0_H_GAIN_TDATA [get_bd_pins data_trigger_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA_IN]
  connect_bd_net -net simple_dsp_module_0_digital_baseline [get_bd_pins DIGTAL_BASELINE] [get_bd_pins simple_dsp_module_0/digital_baseline]
  connect_bd_net -net trigger_selector_0_H_GAIN_TDATA [get_bd_pins async_dataframe_gene_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins data_trigger_0/ARESET] [get_bd_pins trigger_selector_0/ARESET] [get_bd_pins util_vector_logic_0/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hardware_trigger_3
proc create_hier_cell_hardware_trigger_3 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_3() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv awa.tohoku.ac.jp:mogura2:trigger_control_rtl:1.1 TRIGGER_CONTROL


  # Create pins
  create_bd_pin -dir O DATAFRAMEGEN_ERROR
  create_bd_pin -dir O -from 15 -to 0 -type data DIGTAL_BASELINE
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MAX_TRIGGER_LENGTH
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I SET_CONFIG
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN
  create_bd_pin -dir I -from 47 -to 0 TIMESTAMP

  # Create instance: async_dataframe_gene_0, and set properties
  set async_dataframe_gene_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1 async_dataframe_gene_0 ]
  set_property -dict [ list \
   CONFIG.CHANNEL_ID {3} \
 ] $async_dataframe_gene_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {32} \
 ] $axis_dwidth_converter_0

  # Create instance: control_distributer_0, and set properties
  set control_distributer_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:control_distributer:1.0 control_distributer_0 ]

  # Create instance: data_trigger_0, and set properties
  set data_trigger_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:data_trigger:1.0 data_trigger_0 ]

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_blocks/hardware_trigger_3/data_trigger_0/ARESET]

  # Create instance: simple_dsp_module_0, and set properties
  set simple_dsp_module_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0 simple_dsp_module_0 ]

  # Create instance: trigger_selector_0, and set properties
  set trigger_selector_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_selector:1.0 trigger_selector_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins simple_dsp_module_0/l_s_axis]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins simple_dsp_module_0/h_s_axis]
  connect_bd_intf_net -intf_net TRIGGER_CONTROL_1 [get_bd_intf_pins TRIGGER_CONTROL] [get_bd_intf_pins control_distributer_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net async_dataframe_gene_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD1 [get_bd_intf_pins control_distributer_0/CONTROL_MOD1] [get_bd_intf_pins data_trigger_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD2 [get_bd_intf_pins control_distributer_0/CONTROL_MOD2] [get_bd_intf_pins trigger_selector_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net data_trigger_0_M_AXIS [get_bd_intf_pins data_trigger_0/M_AXIS] [get_bd_intf_pins trigger_selector_0/S_AXIS]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dac_m_axis [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins simple_dsp_module_0/dac_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dsp_m_axis [get_bd_intf_pins data_trigger_0/DSP_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/dsp_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_h_m_axis [get_bd_intf_pins data_trigger_0/H_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/h_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_l_m_axis [get_bd_intf_pins data_trigger_0/L_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/l_m_axis]
  connect_bd_intf_net -intf_net trigger_selector_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/S_AXIS] [get_bd_intf_pins trigger_selector_0/M_AXIS]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins trigger_selector_0/EXTERNAL_TRIGGER]
  connect_bd_net -net MAX_TRIGGER_LENGTH_1 [get_bd_pins MAX_TRIGGER_LENGTH] [get_bd_pins async_dataframe_gene_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_LOWER_THRESOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_UPPER_THRESOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/M_AXIS_ACLK] [get_bd_pins axis_dwidth_converter_0/aclk]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/M_AXIS_RESETN] [get_bd_pins axis_dwidth_converter_0/aresetn]
  connect_bd_net -net SET_CONFIG_1 [get_bd_pins SET_CONFIG] [get_bd_pins async_dataframe_gene_0/SET_CONFIG] [get_bd_pins data_trigger_0/SET_CONFIG] [get_bd_pins trigger_selector_0/SET_CONFIG]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/S_AXIS_ACLK] [get_bd_pins data_trigger_0/ACLK] [get_bd_pins simple_dsp_module_0/clk] [get_bd_pins trigger_selector_0/ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/S_AXIS_RESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net TIMESTAMP_1 [get_bd_pins TIMESTAMP] [get_bd_pins data_trigger_0/TIMESTAMP]
  connect_bd_net -net async_dataframe_gene_0_DATAFRAME_GEN_ERROR [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins async_dataframe_gene_0/DATAFRAME_GEN_ERROR]
  connect_bd_net -net control_distributer_0_H_GAIN_BASELINE_MOD0 [get_bd_pins control_distributer_0/H_GAIN_BASELINE_MOD0] [get_bd_pins simple_dsp_module_0/h_gain_baseline]
  connect_bd_net -net data_trigger_0_H_GAIN_SATURATED_FLAG [get_bd_pins HGAIN_SATURATION] [get_bd_pins data_trigger_0/H_GAIN_SATURATED_FLAG]
  connect_bd_net -net data_trigger_0_H_GAIN_TDATA [get_bd_pins data_trigger_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA_IN]
  connect_bd_net -net simple_dsp_module_0_digital_baseline [get_bd_pins DIGTAL_BASELINE] [get_bd_pins simple_dsp_module_0/digital_baseline]
  connect_bd_net -net trigger_selector_0_H_GAIN_TDATA [get_bd_pins async_dataframe_gene_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins data_trigger_0/ARESET] [get_bd_pins trigger_selector_0/ARESET] [get_bd_pins util_vector_logic_0/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hardware_trigger_2
proc create_hier_cell_hardware_trigger_2 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_2() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv awa.tohoku.ac.jp:mogura2:trigger_control_rtl:1.1 TRIGGER_CONTROL


  # Create pins
  create_bd_pin -dir O DATAFRAMEGEN_ERROR
  create_bd_pin -dir O -from 15 -to 0 -type data DIGTAL_BASELINE
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MAX_TRIGGER_LENGTH
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I SET_CONFIG
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN
  create_bd_pin -dir I -from 47 -to 0 TIMESTAMP

  # Create instance: async_dataframe_gene_0, and set properties
  set async_dataframe_gene_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1 async_dataframe_gene_0 ]
  set_property -dict [ list \
   CONFIG.CHANNEL_ID {2} \
 ] $async_dataframe_gene_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {32} \
 ] $axis_dwidth_converter_0

  # Create instance: control_distributer_0, and set properties
  set control_distributer_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:control_distributer:1.0 control_distributer_0 ]

  # Create instance: data_trigger_0, and set properties
  set data_trigger_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:data_trigger:1.0 data_trigger_0 ]

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_blocks/hardware_trigger_2/data_trigger_0/ARESET]

  # Create instance: simple_dsp_module_0, and set properties
  set simple_dsp_module_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0 simple_dsp_module_0 ]

  # Create instance: trigger_selector_0, and set properties
  set trigger_selector_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_selector:1.0 trigger_selector_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins simple_dsp_module_0/l_s_axis]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins simple_dsp_module_0/h_s_axis]
  connect_bd_intf_net -intf_net TRIGGER_CONTROL_1 [get_bd_intf_pins TRIGGER_CONTROL] [get_bd_intf_pins control_distributer_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net async_dataframe_gene_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD1 [get_bd_intf_pins control_distributer_0/CONTROL_MOD1] [get_bd_intf_pins data_trigger_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD2 [get_bd_intf_pins control_distributer_0/CONTROL_MOD2] [get_bd_intf_pins trigger_selector_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net data_trigger_0_M_AXIS [get_bd_intf_pins data_trigger_0/M_AXIS] [get_bd_intf_pins trigger_selector_0/S_AXIS]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dac_m_axis [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins simple_dsp_module_0/dac_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dsp_m_axis [get_bd_intf_pins data_trigger_0/DSP_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/dsp_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_h_m_axis [get_bd_intf_pins data_trigger_0/H_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/h_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_l_m_axis [get_bd_intf_pins data_trigger_0/L_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/l_m_axis]
  connect_bd_intf_net -intf_net trigger_selector_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/S_AXIS] [get_bd_intf_pins trigger_selector_0/M_AXIS]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins trigger_selector_0/EXTERNAL_TRIGGER]
  connect_bd_net -net MAX_TRIGGER_LENGTH_1 [get_bd_pins MAX_TRIGGER_LENGTH] [get_bd_pins async_dataframe_gene_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_LOWER_THRESOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_UPPER_THRESOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/M_AXIS_ACLK] [get_bd_pins axis_dwidth_converter_0/aclk]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/M_AXIS_RESETN] [get_bd_pins axis_dwidth_converter_0/aresetn]
  connect_bd_net -net SET_CONFIG_1 [get_bd_pins SET_CONFIG] [get_bd_pins async_dataframe_gene_0/SET_CONFIG] [get_bd_pins data_trigger_0/SET_CONFIG] [get_bd_pins trigger_selector_0/SET_CONFIG]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/S_AXIS_ACLK] [get_bd_pins data_trigger_0/ACLK] [get_bd_pins simple_dsp_module_0/clk] [get_bd_pins trigger_selector_0/ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/S_AXIS_RESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net TIMESTAMP_1 [get_bd_pins TIMESTAMP] [get_bd_pins data_trigger_0/TIMESTAMP]
  connect_bd_net -net async_dataframe_gene_0_DATAFRAME_GEN_ERROR [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins async_dataframe_gene_0/DATAFRAME_GEN_ERROR]
  connect_bd_net -net control_distributer_0_H_GAIN_BASELINE_MOD0 [get_bd_pins control_distributer_0/H_GAIN_BASELINE_MOD0] [get_bd_pins simple_dsp_module_0/h_gain_baseline]
  connect_bd_net -net data_trigger_0_H_GAIN_SATURATED_FLAG [get_bd_pins HGAIN_SATURATION] [get_bd_pins data_trigger_0/H_GAIN_SATURATED_FLAG]
  connect_bd_net -net data_trigger_0_H_GAIN_TDATA [get_bd_pins data_trigger_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA_IN]
  connect_bd_net -net simple_dsp_module_0_digital_baseline [get_bd_pins DIGTAL_BASELINE] [get_bd_pins simple_dsp_module_0/digital_baseline]
  connect_bd_net -net trigger_selector_0_H_GAIN_TDATA [get_bd_pins async_dataframe_gene_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins data_trigger_0/ARESET] [get_bd_pins trigger_selector_0/ARESET] [get_bd_pins util_vector_logic_0/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hardware_trigger_1
proc create_hier_cell_hardware_trigger_1 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_1() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv awa.tohoku.ac.jp:mogura2:trigger_control_rtl:1.1 TRIGGER_CONTROL


  # Create pins
  create_bd_pin -dir O DATAFRAMEGEN_ERROR
  create_bd_pin -dir O -from 15 -to 0 -type data DIGTAL_BASELINE
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MAX_TRIGGER_LENGTH
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I SET_CONFIG
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN
  create_bd_pin -dir I -from 47 -to 0 TIMESTAMP

  # Create instance: async_dataframe_gene_0, and set properties
  set async_dataframe_gene_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1 async_dataframe_gene_0 ]
  set_property -dict [ list \
   CONFIG.CHANNEL_ID {1} \
 ] $async_dataframe_gene_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {32} \
 ] $axis_dwidth_converter_0

  # Create instance: control_distributer_0, and set properties
  set control_distributer_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:control_distributer:1.0 control_distributer_0 ]

  # Create instance: data_trigger_0, and set properties
  set data_trigger_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:data_trigger:1.0 data_trigger_0 ]

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_blocks/hardware_trigger_1/data_trigger_0/ARESET]

  # Create instance: simple_dsp_module_0, and set properties
  set simple_dsp_module_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0 simple_dsp_module_0 ]

  # Create instance: trigger_selector_0, and set properties
  set trigger_selector_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_selector:1.0 trigger_selector_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins simple_dsp_module_0/l_s_axis]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins simple_dsp_module_0/h_s_axis]
  connect_bd_intf_net -intf_net TRIGGER_CONTROL_1 [get_bd_intf_pins TRIGGER_CONTROL] [get_bd_intf_pins control_distributer_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net async_dataframe_gene_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD1 [get_bd_intf_pins control_distributer_0/CONTROL_MOD1] [get_bd_intf_pins data_trigger_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD2 [get_bd_intf_pins control_distributer_0/CONTROL_MOD2] [get_bd_intf_pins trigger_selector_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net data_trigger_0_M_AXIS [get_bd_intf_pins data_trigger_0/M_AXIS] [get_bd_intf_pins trigger_selector_0/S_AXIS]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dac_m_axis [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins simple_dsp_module_0/dac_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dsp_m_axis [get_bd_intf_pins data_trigger_0/DSP_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/dsp_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_h_m_axis [get_bd_intf_pins data_trigger_0/H_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/h_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_l_m_axis [get_bd_intf_pins data_trigger_0/L_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/l_m_axis]
  connect_bd_intf_net -intf_net trigger_selector_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/S_AXIS] [get_bd_intf_pins trigger_selector_0/M_AXIS]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins trigger_selector_0/EXTERNAL_TRIGGER]
  connect_bd_net -net MAX_TRIGGER_LENGTH_1 [get_bd_pins MAX_TRIGGER_LENGTH] [get_bd_pins async_dataframe_gene_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_LOWER_THRESOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_UPPER_THRESOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/M_AXIS_ACLK] [get_bd_pins axis_dwidth_converter_0/aclk]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/M_AXIS_RESETN] [get_bd_pins axis_dwidth_converter_0/aresetn]
  connect_bd_net -net SET_CONFIG_1 [get_bd_pins SET_CONFIG] [get_bd_pins async_dataframe_gene_0/SET_CONFIG] [get_bd_pins data_trigger_0/SET_CONFIG] [get_bd_pins trigger_selector_0/SET_CONFIG]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/S_AXIS_ACLK] [get_bd_pins data_trigger_0/ACLK] [get_bd_pins simple_dsp_module_0/clk] [get_bd_pins trigger_selector_0/ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/S_AXIS_RESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net TIMESTAMP_1 [get_bd_pins TIMESTAMP] [get_bd_pins data_trigger_0/TIMESTAMP]
  connect_bd_net -net async_dataframe_gene_0_DATAFRAME_GEN_ERROR [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins async_dataframe_gene_0/DATAFRAME_GEN_ERROR]
  connect_bd_net -net control_distributer_0_H_GAIN_BASELINE_MOD0 [get_bd_pins control_distributer_0/H_GAIN_BASELINE_MOD0] [get_bd_pins simple_dsp_module_0/h_gain_baseline]
  connect_bd_net -net data_trigger_0_H_GAIN_SATURATED_FLAG [get_bd_pins HGAIN_SATURATION] [get_bd_pins data_trigger_0/H_GAIN_SATURATED_FLAG]
  connect_bd_net -net data_trigger_0_H_GAIN_TDATA [get_bd_pins data_trigger_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA_IN]
  connect_bd_net -net simple_dsp_module_0_digital_baseline [get_bd_pins DIGTAL_BASELINE] [get_bd_pins simple_dsp_module_0/digital_baseline]
  connect_bd_net -net trigger_selector_0_H_GAIN_TDATA [get_bd_pins async_dataframe_gene_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins data_trigger_0/ARESET] [get_bd_pins trigger_selector_0/ARESET] [get_bd_pins util_vector_logic_0/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hardware_trigger_0
proc create_hier_cell_hardware_trigger_0 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_0() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv awa.tohoku.ac.jp:mogura2:trigger_control_rtl:1.1 TRIGGER_CONTROL


  # Create pins
  create_bd_pin -dir O DATAFRAMEGEN_ERROR
  create_bd_pin -dir O -from 15 -to 0 -type data DIGTAL_BASELINE
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MAX_TRIGGER_LENGTH
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I SET_CONFIG
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN
  create_bd_pin -dir I -from 47 -to 0 TIMESTAMP

  # Create instance: async_dataframe_gene_0, and set properties
  set async_dataframe_gene_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1 async_dataframe_gene_0 ]

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {32} \
 ] $axis_dwidth_converter_0

  # Create instance: control_distributer_0, and set properties
  set control_distributer_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:control_distributer:1.0 control_distributer_0 ]

  # Create instance: data_trigger_0, and set properties
  set data_trigger_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:data_trigger:1.0 data_trigger_0 ]

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_blocks/hardware_trigger_0/data_trigger_0/ARESET]

  # Create instance: simple_dsp_module_0, and set properties
  set simple_dsp_module_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0 simple_dsp_module_0 ]

  # Create instance: trigger_selector_0, and set properties
  set trigger_selector_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_selector:1.0 trigger_selector_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins simple_dsp_module_0/l_s_axis]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins simple_dsp_module_0/h_s_axis]
  connect_bd_intf_net -intf_net TRIGGER_CONTROL_1 [get_bd_intf_pins TRIGGER_CONTROL] [get_bd_intf_pins control_distributer_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net async_dataframe_gene_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD1 [get_bd_intf_pins control_distributer_0/CONTROL_MOD1] [get_bd_intf_pins data_trigger_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD2 [get_bd_intf_pins control_distributer_0/CONTROL_MOD2] [get_bd_intf_pins trigger_selector_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net data_trigger_0_M_AXIS [get_bd_intf_pins data_trigger_0/M_AXIS] [get_bd_intf_pins trigger_selector_0/S_AXIS]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dac_m_axis [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins simple_dsp_module_0/dac_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dsp_m_axis [get_bd_intf_pins data_trigger_0/DSP_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/dsp_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_h_m_axis [get_bd_intf_pins data_trigger_0/H_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/h_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_l_m_axis [get_bd_intf_pins data_trigger_0/L_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/l_m_axis]
  connect_bd_intf_net -intf_net trigger_selector_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/S_AXIS] [get_bd_intf_pins trigger_selector_0/M_AXIS]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins trigger_selector_0/EXTERNAL_TRIGGER]
  connect_bd_net -net MAX_TRIGGER_LENGTH_1 [get_bd_pins MAX_TRIGGER_LENGTH] [get_bd_pins async_dataframe_gene_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_LOWER_THRESOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_UPPER_THRESOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/M_AXIS_ACLK] [get_bd_pins axis_dwidth_converter_0/aclk]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/M_AXIS_RESETN] [get_bd_pins axis_dwidth_converter_0/aresetn]
  connect_bd_net -net SET_CONFIG_1 [get_bd_pins SET_CONFIG] [get_bd_pins async_dataframe_gene_0/SET_CONFIG] [get_bd_pins data_trigger_0/SET_CONFIG] [get_bd_pins trigger_selector_0/SET_CONFIG]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/S_AXIS_ACLK] [get_bd_pins data_trigger_0/ACLK] [get_bd_pins simple_dsp_module_0/clk] [get_bd_pins trigger_selector_0/ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/S_AXIS_RESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net TIMESTAMP_1 [get_bd_pins TIMESTAMP] [get_bd_pins data_trigger_0/TIMESTAMP]
  connect_bd_net -net async_dataframe_gene_0_DATAFRAME_GEN_ERROR [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins async_dataframe_gene_0/DATAFRAME_GEN_ERROR]
  connect_bd_net -net control_distributer_0_H_GAIN_BASELINE_MOD0 [get_bd_pins control_distributer_0/H_GAIN_BASELINE_MOD0] [get_bd_pins simple_dsp_module_0/h_gain_baseline]
  connect_bd_net -net data_trigger_0_H_GAIN_SATURATED_FLAG [get_bd_pins HGAIN_SATURATION] [get_bd_pins data_trigger_0/H_GAIN_SATURATED_FLAG]
  connect_bd_net -net data_trigger_0_H_GAIN_TDATA [get_bd_pins data_trigger_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA_IN]
  connect_bd_net -net simple_dsp_module_0_digital_baseline [get_bd_pins DIGTAL_BASELINE] [get_bd_pins simple_dsp_module_0/digital_baseline]
  connect_bd_net -net trigger_selector_0_H_GAIN_TDATA [get_bd_pins async_dataframe_gene_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins data_trigger_0/ARESET] [get_bd_pins trigger_selector_0/ARESET] [get_bd_pins util_vector_logic_0/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: rfadc_block
proc create_hier_cell_rfadc_block { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_rfadc_block() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFADC

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFADC1

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFADC2

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFADC3

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFADC4

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFADC5

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFADC6

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFADC7

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFADC8

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFADC9

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFADC10

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFADC11

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFADC12

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFADC13

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFADC14

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFADC15

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 adc0_clk

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 adc1_clk

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 adc2_clk

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 adc3_clk

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:display_usp_rf_data_converter:diff_pins_rtl:1.0 sysref_in

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin00

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin01

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin02

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin03

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin10

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin11

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin12

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin13

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin20

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin21

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin22

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin23

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin30

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin31

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin32

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin33


  # Create pins
  create_bd_pin -dir I -type clk m1_axis_aclk
  create_bd_pin -dir I -type rst m2_axis_aresetn
  create_bd_pin -dir I user_sysref_adc

  # Create instance: usp_rf_data_converter_0, and set properties
  set usp_rf_data_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:usp_rf_data_converter:2.1 usp_rf_data_converter_0 ]
  set_property -dict [ list \
   CONFIG.ADC0_Fabric_Freq {125.000} \
   CONFIG.ADC0_Link_Coupling {1} \
   CONFIG.ADC0_Multi_Tile_Sync {true} \
   CONFIG.ADC0_Outclk_Freq {125.000} \
   CONFIG.ADC0_PLL_Enable {true} \
   CONFIG.ADC0_Refclk_Freq {250.000} \
   CONFIG.ADC1_Enable {1} \
   CONFIG.ADC1_Fabric_Freq {125.000} \
   CONFIG.ADC1_Link_Coupling {1} \
   CONFIG.ADC1_Multi_Tile_Sync {true} \
   CONFIG.ADC1_Outclk_Freq {125.000} \
   CONFIG.ADC1_PLL_Enable {true} \
   CONFIG.ADC1_Refclk_Freq {250.000} \
   CONFIG.ADC2_Enable {1} \
   CONFIG.ADC2_Fabric_Freq {125.000} \
   CONFIG.ADC2_Link_Coupling {1} \
   CONFIG.ADC2_Multi_Tile_Sync {true} \
   CONFIG.ADC2_Outclk_Freq {125.000} \
   CONFIG.ADC2_PLL_Enable {true} \
   CONFIG.ADC2_Refclk_Freq {250.000} \
   CONFIG.ADC3_Enable {1} \
   CONFIG.ADC3_Fabric_Freq {125.000} \
   CONFIG.ADC3_Link_Coupling {1} \
   CONFIG.ADC3_Multi_Tile_Sync {true} \
   CONFIG.ADC3_Outclk_Freq {125.000} \
   CONFIG.ADC3_PLL_Enable {true} \
   CONFIG.ADC3_Refclk_Freq {250.000} \
   CONFIG.ADC_Decimation_Mode00 {2} \
   CONFIG.ADC_Decimation_Mode01 {2} \
   CONFIG.ADC_Decimation_Mode02 {2} \
   CONFIG.ADC_Decimation_Mode03 {2} \
   CONFIG.ADC_Decimation_Mode10 {2} \
   CONFIG.ADC_Decimation_Mode11 {2} \
   CONFIG.ADC_Decimation_Mode12 {2} \
   CONFIG.ADC_Decimation_Mode13 {2} \
   CONFIG.ADC_Decimation_Mode20 {2} \
   CONFIG.ADC_Decimation_Mode21 {2} \
   CONFIG.ADC_Decimation_Mode22 {2} \
   CONFIG.ADC_Decimation_Mode23 {2} \
   CONFIG.ADC_Decimation_Mode30 {2} \
   CONFIG.ADC_Decimation_Mode31 {2} \
   CONFIG.ADC_Decimation_Mode32 {2} \
   CONFIG.ADC_Decimation_Mode33 {2} \
   CONFIG.ADC_Mixer_Type01 {0} \
   CONFIG.ADC_Mixer_Type02 {0} \
   CONFIG.ADC_Mixer_Type03 {0} \
   CONFIG.ADC_Mixer_Type10 {0} \
   CONFIG.ADC_Mixer_Type11 {0} \
   CONFIG.ADC_Mixer_Type12 {0} \
   CONFIG.ADC_Mixer_Type13 {0} \
   CONFIG.ADC_Mixer_Type20 {0} \
   CONFIG.ADC_Mixer_Type21 {0} \
   CONFIG.ADC_Mixer_Type22 {0} \
   CONFIG.ADC_Mixer_Type23 {0} \
   CONFIG.ADC_Mixer_Type30 {0} \
   CONFIG.ADC_Mixer_Type31 {0} \
   CONFIG.ADC_Mixer_Type32 {0} \
   CONFIG.ADC_Mixer_Type33 {0} \
   CONFIG.ADC_Slice01_Enable {true} \
   CONFIG.ADC_Slice02_Enable {true} \
   CONFIG.ADC_Slice03_Enable {true} \
   CONFIG.ADC_Slice10_Enable {true} \
   CONFIG.ADC_Slice11_Enable {true} \
   CONFIG.ADC_Slice12_Enable {true} \
   CONFIG.ADC_Slice13_Enable {true} \
   CONFIG.ADC_Slice20_Enable {true} \
   CONFIG.ADC_Slice21_Enable {true} \
   CONFIG.ADC_Slice22_Enable {true} \
   CONFIG.ADC_Slice23_Enable {true} \
   CONFIG.ADC_Slice30_Enable {true} \
   CONFIG.ADC_Slice31_Enable {true} \
   CONFIG.ADC_Slice32_Enable {true} \
   CONFIG.ADC_Slice33_Enable {true} \
   CONFIG.Axiclk_Freq {125.0} \
   CONFIG.DAC0_Enable {0} \
   CONFIG.DAC0_Fabric_Freq {0.0} \
   CONFIG.DAC0_Multi_Tile_Sync {false} \
   CONFIG.DAC0_Outclk_Freq {50.000} \
   CONFIG.DAC0_PLL_Enable {false} \
   CONFIG.DAC0_Refclk_Freq {6400.000} \
   CONFIG.DAC0_Sampling_Rate {6.4} \
   CONFIG.DAC1_Enable {0} \
   CONFIG.DAC1_Fabric_Freq {0.0} \
   CONFIG.DAC1_Multi_Tile_Sync {false} \
   CONFIG.DAC1_Outclk_Freq {50.000} \
   CONFIG.DAC1_PLL_Enable {false} \
   CONFIG.DAC1_Refclk_Freq {6400.000} \
   CONFIG.DAC1_Sampling_Rate {6.4} \
   CONFIG.DAC2_Enable {0} \
   CONFIG.DAC2_Fabric_Freq {0.0} \
   CONFIG.DAC2_Multi_Tile_Sync {false} \
   CONFIG.DAC2_Outclk_Freq {50.000} \
   CONFIG.DAC2_PLL_Enable {false} \
   CONFIG.DAC2_Refclk_Freq {6400.000} \
   CONFIG.DAC2_Sampling_Rate {6.4} \
   CONFIG.DAC3_Enable {0} \
   CONFIG.DAC3_Fabric_Freq {0.0} \
   CONFIG.DAC3_Multi_Tile_Sync {false} \
   CONFIG.DAC3_Outclk_Freq {50.000} \
   CONFIG.DAC3_PLL_Enable {false} \
   CONFIG.DAC3_Refclk_Freq {6400.000} \
   CONFIG.DAC3_Sampling_Rate {6.4} \
   CONFIG.DAC_Data_Width00 {16} \
   CONFIG.DAC_Data_Width01 {16} \
   CONFIG.DAC_Data_Width02 {16} \
   CONFIG.DAC_Data_Width03 {16} \
   CONFIG.DAC_Data_Width10 {16} \
   CONFIG.DAC_Data_Width11 {16} \
   CONFIG.DAC_Data_Width12 {16} \
   CONFIG.DAC_Data_Width13 {16} \
   CONFIG.DAC_Data_Width20 {16} \
   CONFIG.DAC_Data_Width21 {16} \
   CONFIG.DAC_Data_Width22 {16} \
   CONFIG.DAC_Data_Width23 {16} \
   CONFIG.DAC_Data_Width30 {16} \
   CONFIG.DAC_Data_Width31 {16} \
   CONFIG.DAC_Data_Width32 {16} \
   CONFIG.DAC_Data_Width33 {16} \
   CONFIG.DAC_Interpolation_Mode00 {0} \
   CONFIG.DAC_Interpolation_Mode01 {0} \
   CONFIG.DAC_Interpolation_Mode02 {0} \
   CONFIG.DAC_Interpolation_Mode03 {0} \
   CONFIG.DAC_Interpolation_Mode10 {0} \
   CONFIG.DAC_Interpolation_Mode11 {0} \
   CONFIG.DAC_Interpolation_Mode12 {0} \
   CONFIG.DAC_Interpolation_Mode13 {0} \
   CONFIG.DAC_Interpolation_Mode20 {0} \
   CONFIG.DAC_Interpolation_Mode21 {0} \
   CONFIG.DAC_Interpolation_Mode22 {0} \
   CONFIG.DAC_Interpolation_Mode23 {0} \
   CONFIG.DAC_Interpolation_Mode30 {0} \
   CONFIG.DAC_Interpolation_Mode31 {0} \
   CONFIG.DAC_Interpolation_Mode32 {0} \
   CONFIG.DAC_Interpolation_Mode33 {0} \
   CONFIG.DAC_Mixer_Type00 {3} \
   CONFIG.DAC_Mixer_Type01 {3} \
   CONFIG.DAC_Mixer_Type02 {3} \
   CONFIG.DAC_Mixer_Type03 {3} \
   CONFIG.DAC_Mixer_Type10 {3} \
   CONFIG.DAC_Mixer_Type11 {3} \
   CONFIG.DAC_Mixer_Type12 {3} \
   CONFIG.DAC_Mixer_Type13 {3} \
   CONFIG.DAC_Mixer_Type20 {3} \
   CONFIG.DAC_Mixer_Type21 {3} \
   CONFIG.DAC_Mixer_Type22 {3} \
   CONFIG.DAC_Mixer_Type23 {3} \
   CONFIG.DAC_Mixer_Type30 {3} \
   CONFIG.DAC_Mixer_Type31 {3} \
   CONFIG.DAC_Mixer_Type32 {3} \
   CONFIG.DAC_Mixer_Type33 {3} \
   CONFIG.DAC_Slice00_Enable {false} \
   CONFIG.DAC_Slice01_Enable {false} \
   CONFIG.DAC_Slice02_Enable {false} \
   CONFIG.DAC_Slice03_Enable {false} \
   CONFIG.DAC_Slice10_Enable {false} \
   CONFIG.DAC_Slice11_Enable {false} \
   CONFIG.DAC_Slice12_Enable {false} \
   CONFIG.DAC_Slice13_Enable {false} \
   CONFIG.DAC_Slice20_Enable {false} \
   CONFIG.DAC_Slice21_Enable {false} \
   CONFIG.DAC_Slice22_Enable {false} \
   CONFIG.DAC_Slice23_Enable {false} \
   CONFIG.DAC_Slice30_Enable {false} \
   CONFIG.DAC_Slice31_Enable {false} \
   CONFIG.DAC_Slice32_Enable {false} \
   CONFIG.DAC_Slice33_Enable {false} \
 ] $usp_rf_data_converter_0

  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins vin20] [get_bd_intf_pins usp_rf_data_converter_0/vin20]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins vin21] [get_bd_intf_pins usp_rf_data_converter_0/vin21]
  connect_bd_intf_net -intf_net Conn3 [get_bd_intf_pins vin30] [get_bd_intf_pins usp_rf_data_converter_0/vin30]
  connect_bd_intf_net -intf_net Conn4 [get_bd_intf_pins vin03] [get_bd_intf_pins usp_rf_data_converter_0/vin03]
  connect_bd_intf_net -intf_net Conn5 [get_bd_intf_pins vin00] [get_bd_intf_pins usp_rf_data_converter_0/vin00]
  connect_bd_intf_net -intf_net Conn6 [get_bd_intf_pins vin31] [get_bd_intf_pins usp_rf_data_converter_0/vin31]
  connect_bd_intf_net -intf_net Conn7 [get_bd_intf_pins vin02] [get_bd_intf_pins usp_rf_data_converter_0/vin02]
  connect_bd_intf_net -intf_net Conn8 [get_bd_intf_pins vin32] [get_bd_intf_pins usp_rf_data_converter_0/vin32]
  connect_bd_intf_net -intf_net Conn9 [get_bd_intf_pins vin12] [get_bd_intf_pins usp_rf_data_converter_0/vin12]
  connect_bd_intf_net -intf_net Conn10 [get_bd_intf_pins vin33] [get_bd_intf_pins usp_rf_data_converter_0/vin33]
  connect_bd_intf_net -intf_net Conn11 [get_bd_intf_pins vin11] [get_bd_intf_pins usp_rf_data_converter_0/vin11]
  connect_bd_intf_net -intf_net Conn12 [get_bd_intf_pins adc0_clk] [get_bd_intf_pins usp_rf_data_converter_0/adc0_clk]
  connect_bd_intf_net -intf_net Conn13 [get_bd_intf_pins vin23] [get_bd_intf_pins usp_rf_data_converter_0/vin23]
  connect_bd_intf_net -intf_net Conn14 [get_bd_intf_pins vin22] [get_bd_intf_pins usp_rf_data_converter_0/vin22]
  connect_bd_intf_net -intf_net Conn15 [get_bd_intf_pins adc1_clk] [get_bd_intf_pins usp_rf_data_converter_0/adc1_clk]
  connect_bd_intf_net -intf_net Conn16 [get_bd_intf_pins vin13] [get_bd_intf_pins usp_rf_data_converter_0/vin13]
  connect_bd_intf_net -intf_net Conn17 [get_bd_intf_pins adc2_clk] [get_bd_intf_pins usp_rf_data_converter_0/adc2_clk]
  connect_bd_intf_net -intf_net Conn18 [get_bd_intf_pins sysref_in] [get_bd_intf_pins usp_rf_data_converter_0/sysref_in]
  connect_bd_intf_net -intf_net Conn19 [get_bd_intf_pins vin10] [get_bd_intf_pins usp_rf_data_converter_0/vin10]
  connect_bd_intf_net -intf_net Conn20 [get_bd_intf_pins vin01] [get_bd_intf_pins usp_rf_data_converter_0/vin01]
  connect_bd_intf_net -intf_net Conn21 [get_bd_intf_pins adc3_clk] [get_bd_intf_pins usp_rf_data_converter_0/adc3_clk]
  connect_bd_intf_net -intf_net Conn22 [get_bd_intf_pins s_axi] [get_bd_intf_pins usp_rf_data_converter_0/s_axi]
  connect_bd_intf_net -intf_net usp_rf_data_converter_0_m00_axis [get_bd_intf_pins M_AXIS_RFADC14] [get_bd_intf_pins usp_rf_data_converter_0/m00_axis]
  connect_bd_intf_net -intf_net usp_rf_data_converter_0_m01_axis [get_bd_intf_pins M_AXIS_RFADC15] [get_bd_intf_pins usp_rf_data_converter_0/m01_axis]
  connect_bd_intf_net -intf_net usp_rf_data_converter_0_m02_axis [get_bd_intf_pins M_AXIS_RFADC12] [get_bd_intf_pins usp_rf_data_converter_0/m02_axis]
  connect_bd_intf_net -intf_net usp_rf_data_converter_0_m03_axis [get_bd_intf_pins M_AXIS_RFADC13] [get_bd_intf_pins usp_rf_data_converter_0/m03_axis]
  connect_bd_intf_net -intf_net usp_rf_data_converter_0_m10_axis [get_bd_intf_pins M_AXIS_RFADC10] [get_bd_intf_pins usp_rf_data_converter_0/m10_axis]
  connect_bd_intf_net -intf_net usp_rf_data_converter_0_m11_axis [get_bd_intf_pins M_AXIS_RFADC11] [get_bd_intf_pins usp_rf_data_converter_0/m11_axis]
  connect_bd_intf_net -intf_net usp_rf_data_converter_0_m12_axis [get_bd_intf_pins M_AXIS_RFADC8] [get_bd_intf_pins usp_rf_data_converter_0/m12_axis]
  connect_bd_intf_net -intf_net usp_rf_data_converter_0_m13_axis [get_bd_intf_pins M_AXIS_RFADC9] [get_bd_intf_pins usp_rf_data_converter_0/m13_axis]
  connect_bd_intf_net -intf_net usp_rf_data_converter_0_m20_axis [get_bd_intf_pins M_AXIS_RFADC6] [get_bd_intf_pins usp_rf_data_converter_0/m20_axis]
  connect_bd_intf_net -intf_net usp_rf_data_converter_0_m21_axis [get_bd_intf_pins M_AXIS_RFADC7] [get_bd_intf_pins usp_rf_data_converter_0/m21_axis]
  connect_bd_intf_net -intf_net usp_rf_data_converter_0_m22_axis [get_bd_intf_pins M_AXIS_RFADC4] [get_bd_intf_pins usp_rf_data_converter_0/m22_axis]
  connect_bd_intf_net -intf_net usp_rf_data_converter_0_m23_axis [get_bd_intf_pins M_AXIS_RFADC5] [get_bd_intf_pins usp_rf_data_converter_0/m23_axis]
  connect_bd_intf_net -intf_net usp_rf_data_converter_0_m30_axis [get_bd_intf_pins M_AXIS_RFADC2] [get_bd_intf_pins usp_rf_data_converter_0/m30_axis]
  connect_bd_intf_net -intf_net usp_rf_data_converter_0_m31_axis [get_bd_intf_pins M_AXIS_RFADC3] [get_bd_intf_pins usp_rf_data_converter_0/m31_axis]
  connect_bd_intf_net -intf_net usp_rf_data_converter_0_m32_axis [get_bd_intf_pins M_AXIS_RFADC] [get_bd_intf_pins usp_rf_data_converter_0/m32_axis]
  connect_bd_intf_net -intf_net usp_rf_data_converter_0_m33_axis [get_bd_intf_pins M_AXIS_RFADC1] [get_bd_intf_pins usp_rf_data_converter_0/m33_axis]

  # Create port connections
  connect_bd_net -net m1_axis_aclk_1 [get_bd_pins m1_axis_aclk] [get_bd_pins usp_rf_data_converter_0/m0_axis_aclk] [get_bd_pins usp_rf_data_converter_0/m1_axis_aclk] [get_bd_pins usp_rf_data_converter_0/m2_axis_aclk] [get_bd_pins usp_rf_data_converter_0/m3_axis_aclk] [get_bd_pins usp_rf_data_converter_0/s_axi_aclk]
  connect_bd_net -net m2_axis_aresetn_1 [get_bd_pins m2_axis_aresetn] [get_bd_pins usp_rf_data_converter_0/m0_axis_aresetn] [get_bd_pins usp_rf_data_converter_0/m1_axis_aresetn] [get_bd_pins usp_rf_data_converter_0/m2_axis_aresetn] [get_bd_pins usp_rf_data_converter_0/m3_axis_aresetn] [get_bd_pins usp_rf_data_converter_0/s_axi_aresetn]
  connect_bd_net -net user_sysref_adc_1 [get_bd_pins user_sysref_adc] [get_bd_pins usp_rf_data_converter_0/user_sysref_adc]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: peripheral_ctrl_block
proc create_hier_cell_peripheral_ctrl_block { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_peripheral_ctrl_block() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:iic_rtl:1.0 IIC_SFP1

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:iic_rtl:1.0 IIC_SFP2

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:spi_rtl:1.0 SPI_BASEDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI_CDCI6214

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI_LITE_BASEDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI_LITE_SPI_LADC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI_LITE_SYS

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI_PERIPHERAL_CTRL

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI_SFP1

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI_SFP2

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vp_Vn_0


  # Create pins
  create_bd_pin -dir O -type intr BASELINE_ip2intc_irpt
  create_bd_pin -dir O CDCI6214_EEPROM_SEL
  create_bd_pin -dir O CDCI6214_OE
  create_bd_pin -dir O CDCI6214_OPMODE
  create_bd_pin -dir O CDCI6214_REF_SEL
  create_bd_pin -dir I CDCI6214_STATUS
  create_bd_pin -dir O -type intr CDCI6214_iic2intc_irpt
  create_bd_pin -dir I -from 3 -to 0 GPI
  create_bd_pin -dir O -from 3 -to 0 GPO
  create_bd_pin -dir IO IIC_CDCI6214_0_scl_io
  create_bd_pin -dir IO IIC_CDCI6214_0_sda_io
  create_bd_pin -dir O -from 7 -to 0 LADC_CTRL1
  create_bd_pin -dir O -from 7 -to 0 LADC_CTRL2
  create_bd_pin -dir O LADC_OPMODE
  create_bd_pin -dir O -type intr LADC_ip2intc_irpt
  create_bd_pin -dir I -from 6 -to 0 LDAC_SDATA
  create_bd_pin -dir O -from 6 -to 0 LDAC_SEN
  create_bd_pin -dir I SFP1_MOD_ABS
  create_bd_pin -dir O SFP1_RS0
  create_bd_pin -dir O SFP1_RS1
  create_bd_pin -dir I SFP1_RX_LOS
  create_bd_pin -dir O SFP1_TX_DISABLE
  create_bd_pin -dir I SFP1_TX_FAULT
  create_bd_pin -dir O -type intr SFP1_iic2intc_irpt
  create_bd_pin -dir I SFP2_MOD_ABS
  create_bd_pin -dir O SFP2_RS0
  create_bd_pin -dir O SFP2_RS1
  create_bd_pin -dir I SFP2_RX_LOS
  create_bd_pin -dir O SFP2_TX_DISABLE
  create_bd_pin -dir I SFP2_TX_FAULT
  create_bd_pin -dir O -type intr SFP2_iic2intc_irpt
  create_bd_pin -dir IO SPI_LADC_0_io0_io
  create_bd_pin -dir IO SPI_LADC_0_io1_io
  create_bd_pin -dir IO SPI_LADC_0_sck_io
  create_bd_pin -dir IO SPI_LADC_0_ss_io
  create_bd_pin -dir I -type clk S_ACLK
  create_bd_pin -dir I -type rst S_ARESETN
  create_bd_pin -dir I -type clk ext_spi_clk

  # Create instance: axi_iic_0_CDCI6214_Bank88, and set properties
  set axi_iic_0_CDCI6214_Bank88 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_iic:2.0 axi_iic_0_CDCI6214_Bank88 ]

  # Create instance: axi_iic_0_SFP1_Bank89, and set properties
  set axi_iic_0_SFP1_Bank89 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_iic:2.0 axi_iic_0_SFP1_Bank89 ]

  # Create instance: axi_iic_0_SFP2_Bank90, and set properties
  set axi_iic_0_SFP2_Bank90 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_iic:2.0 axi_iic_0_SFP2_Bank90 ]

  # Create instance: axi_quad_spi_0_LADC_bank87, and set properties
  set axi_quad_spi_0_LADC_bank87 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_quad_spi:3.2 axi_quad_spi_0_LADC_bank87 ]
  set_property -dict [ list \
   CONFIG.C_NUM_SS_BITS {1} \
   CONFIG.C_SCK_RATIO {16} \
   CONFIG.C_TYPE_OF_AXI4_INTERFACE {0} \
   CONFIG.C_XIP_MODE {0} \
 ] $axi_quad_spi_0_LADC_bank87

  # Create instance: axi_quad_spi_1_BASEDAC_bank84, and set properties
  set axi_quad_spi_1_BASEDAC_bank84 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_quad_spi:3.2 axi_quad_spi_1_BASEDAC_bank84 ]
  set_property -dict [ list \
   CONFIG.C_SCK_RATIO {16} \
   CONFIG.C_TYPE_OF_AXI4_INTERFACE {0} \
   CONFIG.C_XIP_MODE {0} \
 ] $axi_quad_spi_1_BASEDAC_bank84

  # Create instance: iic_cdci6214_customif_0, and set properties
  set block_name iic_cdci6214_customif
  set block_cell_name iic_cdci6214_customif_0
  if { [catch {set iic_cdci6214_customif_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $iic_cdci6214_customif_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: peripheral_controler_0, and set properties
  set block_name peripheral_controler
  set block_cell_name peripheral_controler_0
  if { [catch {set peripheral_controler_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $peripheral_controler_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: spi_ladc_customif_0, and set properties
  set block_name spi_ladc_customif
  set block_cell_name spi_ladc_customif_0
  if { [catch {set spi_ladc_customif_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $spi_ladc_customif_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: system_management_wiz_0, and set properties
  set system_management_wiz_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:system_management_wiz:1.3 system_management_wiz_0 ]
  set_property -dict [ list \
   CONFIG.DCLK_FREQUENCY {125} \
 ] $system_management_wiz_0

  # Create interface connections
  connect_bd_intf_net -intf_net AXI_LITE_0_1 [get_bd_intf_pins S_AXI_LITE_SPI_LADC] [get_bd_intf_pins axi_quad_spi_0_LADC_bank87/AXI_LITE]
  connect_bd_intf_net -intf_net AXI_LITE_1_1 [get_bd_intf_pins S_AXI_LITE_BASEDAC] [get_bd_intf_pins axi_quad_spi_1_BASEDAC_bank84/AXI_LITE]
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins Vp_Vn_0] [get_bd_intf_pins system_management_wiz_0/Vp_Vn]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins S_AXI_LITE_SYS] [get_bd_intf_pins system_management_wiz_0/S_AXI_LITE]
  connect_bd_intf_net -intf_net S_AXI_0_1 [get_bd_intf_pins S_AXI_CDCI6214] [get_bd_intf_pins axi_iic_0_CDCI6214_Bank88/S_AXI]
  connect_bd_intf_net -intf_net S_AXI_1_1 [get_bd_intf_pins S_AXI_SFP1] [get_bd_intf_pins axi_iic_0_SFP1_Bank89/S_AXI]
  connect_bd_intf_net -intf_net S_AXI_2_1 [get_bd_intf_pins S_AXI_SFP2] [get_bd_intf_pins axi_iic_0_SFP2_Bank90/S_AXI]
  connect_bd_intf_net -intf_net S_AXI_PERIPHERAL_CTRL_1 [get_bd_intf_pins S_AXI_PERIPHERAL_CTRL] [get_bd_intf_pins peripheral_controler_0/S_AXI]
  connect_bd_intf_net -intf_net axi_iic_0_SFP1_Bank89_IIC [get_bd_intf_pins IIC_SFP1] [get_bd_intf_pins axi_iic_0_SFP1_Bank89/IIC]
  connect_bd_intf_net -intf_net axi_iic_0_SFP2_Bank90_IIC [get_bd_intf_pins IIC_SFP2] [get_bd_intf_pins axi_iic_0_SFP2_Bank90/IIC]
  connect_bd_intf_net -intf_net axi_quad_spi_1_BASEDAC_bank84_SPI_0 [get_bd_intf_pins SPI_BASEDAC] [get_bd_intf_pins axi_quad_spi_1_BASEDAC_bank84/SPI_0]

  # Create port connections
  connect_bd_net -net CDCI6214_STATUS_1 [get_bd_pins CDCI6214_STATUS] [get_bd_pins peripheral_controler_0/CDCI6214_STATUS]
  connect_bd_net -net GPI_1 [get_bd_pins GPI] [get_bd_pins peripheral_controler_0/GPI]
  connect_bd_net -net LDAC_SDATA_1 [get_bd_pins LDAC_SDATA] [get_bd_pins spi_ladc_customif_0/LDAC_SDATA]
  connect_bd_net -net Net [get_bd_pins SPI_LADC_0_sck_io] [get_bd_pins spi_ladc_customif_0/SPI_LADC_0_sck_io]
  connect_bd_net -net Net1 [get_bd_pins SPI_LADC_0_io0_io] [get_bd_pins spi_ladc_customif_0/SPI_LADC_0_io0_io]
  connect_bd_net -net Net2 [get_bd_pins SPI_LADC_0_io1_io] [get_bd_pins spi_ladc_customif_0/SPI_LADC_0_io1_io]
  connect_bd_net -net Net3 [get_bd_pins SPI_LADC_0_ss_io] [get_bd_pins spi_ladc_customif_0/SPI_LADC_0_ss_io]
  connect_bd_net -net Net4 [get_bd_pins IIC_CDCI6214_0_sda_io] [get_bd_pins iic_cdci6214_customif_0/IIC_CDCI6214_0_sda_io]
  connect_bd_net -net Net5 [get_bd_pins IIC_CDCI6214_0_scl_io] [get_bd_pins iic_cdci6214_customif_0/IIC_CDCI6214_0_scl_io]
  connect_bd_net -net SFP1_MOD_ABS_1 [get_bd_pins SFP1_MOD_ABS] [get_bd_pins peripheral_controler_0/SFP1_MOD_ABS]
  connect_bd_net -net SFP1_RX_LOS_1 [get_bd_pins SFP1_RX_LOS] [get_bd_pins peripheral_controler_0/SFP1_RX_LOS]
  connect_bd_net -net SFP1_TX_FAULT_1 [get_bd_pins SFP1_TX_FAULT] [get_bd_pins peripheral_controler_0/SFP1_TX_FAULT]
  connect_bd_net -net SFP2_MOD_ABS_1 [get_bd_pins SFP2_MOD_ABS] [get_bd_pins peripheral_controler_0/SFP2_MOD_ABS]
  connect_bd_net -net SFP2_RX_LOS_1 [get_bd_pins SFP2_RX_LOS] [get_bd_pins peripheral_controler_0/SFP2_RX_LOS]
  connect_bd_net -net SFP2_TX_FAULT_1 [get_bd_pins SFP2_TX_FAULT] [get_bd_pins peripheral_controler_0/SFP2_TX_FAULT]
  connect_bd_net -net S_ACLK_1 [get_bd_pins S_ACLK] [get_bd_pins axi_iic_0_CDCI6214_Bank88/s_axi_aclk] [get_bd_pins axi_iic_0_SFP1_Bank89/s_axi_aclk] [get_bd_pins axi_iic_0_SFP2_Bank90/s_axi_aclk] [get_bd_pins axi_quad_spi_0_LADC_bank87/s_axi_aclk] [get_bd_pins axi_quad_spi_1_BASEDAC_bank84/ext_spi_clk] [get_bd_pins axi_quad_spi_1_BASEDAC_bank84/s_axi_aclk] [get_bd_pins iic_cdci6214_customif_0/CLK] [get_bd_pins peripheral_controler_0/S_AXI_ACLK] [get_bd_pins system_management_wiz_0/s_axi_aclk]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins S_ARESETN] [get_bd_pins axi_iic_0_CDCI6214_Bank88/s_axi_aresetn] [get_bd_pins axi_iic_0_SFP1_Bank89/s_axi_aresetn] [get_bd_pins axi_iic_0_SFP2_Bank90/s_axi_aresetn] [get_bd_pins axi_quad_spi_0_LADC_bank87/s_axi_aresetn] [get_bd_pins axi_quad_spi_1_BASEDAC_bank84/s_axi_aresetn] [get_bd_pins peripheral_controler_0/S_AXI_ARESETN] [get_bd_pins system_management_wiz_0/s_axi_aresetn]
  connect_bd_net -net axi_iic_0_CDCI6214_Bank88_iic2intc_irpt [get_bd_pins CDCI6214_iic2intc_irpt] [get_bd_pins axi_iic_0_CDCI6214_Bank88/iic2intc_irpt]
  connect_bd_net -net axi_iic_0_CDCI6214_Bank88_scl_o [get_bd_pins axi_iic_0_CDCI6214_Bank88/scl_o] [get_bd_pins iic_cdci6214_customif_0/IIC_CDCI6214_0_scl_o]
  connect_bd_net -net axi_iic_0_CDCI6214_Bank88_scl_t [get_bd_pins axi_iic_0_CDCI6214_Bank88/scl_t] [get_bd_pins iic_cdci6214_customif_0/IIC_CDCI6214_0_scl_t]
  connect_bd_net -net axi_iic_0_CDCI6214_Bank88_sda_o [get_bd_pins axi_iic_0_CDCI6214_Bank88/sda_o] [get_bd_pins iic_cdci6214_customif_0/IIC_CDCI6214_0_sda_o]
  connect_bd_net -net axi_iic_0_CDCI6214_Bank88_sda_t [get_bd_pins axi_iic_0_CDCI6214_Bank88/sda_t] [get_bd_pins iic_cdci6214_customif_0/IIC_CDCI6214_0_sda_t]
  connect_bd_net -net axi_iic_0_SFP1_Bank89_iic2intc_irpt [get_bd_pins SFP1_iic2intc_irpt] [get_bd_pins axi_iic_0_SFP1_Bank89/iic2intc_irpt]
  connect_bd_net -net axi_iic_0_SFP2_Bank90_iic2intc_irpt [get_bd_pins SFP2_iic2intc_irpt] [get_bd_pins axi_iic_0_SFP2_Bank90/iic2intc_irpt]
  connect_bd_net -net axi_quad_spi_0_LADC_bank87_io0_o [get_bd_pins axi_quad_spi_0_LADC_bank87/io0_o] [get_bd_pins spi_ladc_customif_0/SPI_LADC_0_io0_o]
  connect_bd_net -net axi_quad_spi_0_LADC_bank87_io0_t [get_bd_pins axi_quad_spi_0_LADC_bank87/io0_t] [get_bd_pins spi_ladc_customif_0/SPI_LADC_0_io0_t]
  connect_bd_net -net axi_quad_spi_0_LADC_bank87_io1_o [get_bd_pins axi_quad_spi_0_LADC_bank87/io1_o] [get_bd_pins spi_ladc_customif_0/SPI_LADC_0_io1_o]
  connect_bd_net -net axi_quad_spi_0_LADC_bank87_io1_t [get_bd_pins axi_quad_spi_0_LADC_bank87/io1_t] [get_bd_pins spi_ladc_customif_0/SPI_LADC_0_io1_t]
  connect_bd_net -net axi_quad_spi_0_LADC_bank87_ip2intc_irpt [get_bd_pins LADC_ip2intc_irpt] [get_bd_pins axi_quad_spi_0_LADC_bank87/ip2intc_irpt]
  connect_bd_net -net axi_quad_spi_0_LADC_bank87_sck_o [get_bd_pins axi_quad_spi_0_LADC_bank87/sck_o] [get_bd_pins spi_ladc_customif_0/SPI_LADC_0_sck_o]
  connect_bd_net -net axi_quad_spi_0_LADC_bank87_sck_t [get_bd_pins axi_quad_spi_0_LADC_bank87/sck_t] [get_bd_pins spi_ladc_customif_0/SPI_LADC_0_sck_t]
  connect_bd_net -net axi_quad_spi_0_LADC_bank87_ss_o [get_bd_pins axi_quad_spi_0_LADC_bank87/ss_o] [get_bd_pins spi_ladc_customif_0/SPI_LADC_0_ss_o]
  connect_bd_net -net axi_quad_spi_0_LADC_bank87_ss_t [get_bd_pins axi_quad_spi_0_LADC_bank87/ss_t] [get_bd_pins spi_ladc_customif_0/SPI_LADC_0_ss_t]
  connect_bd_net -net axi_quad_spi_1_BASEDAC_bank84_ip2intc_irpt [get_bd_pins BASELINE_ip2intc_irpt] [get_bd_pins axi_quad_spi_1_BASEDAC_bank84/ip2intc_irpt]
  connect_bd_net -net ext_spi_clk_1 [get_bd_pins ext_spi_clk] [get_bd_pins axi_quad_spi_0_LADC_bank87/ext_spi_clk]
  connect_bd_net -net iic_cdci6214_customif_0_IIC_CDCI6214_0_scl_i [get_bd_pins axi_iic_0_CDCI6214_Bank88/scl_i] [get_bd_pins iic_cdci6214_customif_0/IIC_CDCI6214_0_scl_i]
  connect_bd_net -net iic_cdci6214_customif_0_IIC_CDCI6214_0_sda_i [get_bd_pins axi_iic_0_CDCI6214_Bank88/sda_i] [get_bd_pins iic_cdci6214_customif_0/IIC_CDCI6214_0_sda_i]
  connect_bd_net -net peripheral_controler_0_CDCI6214_EEPROM_SEL [get_bd_pins CDCI6214_EEPROM_SEL] [get_bd_pins peripheral_controler_0/CDCI6214_EEPROM_SEL]
  connect_bd_net -net peripheral_controler_0_CDCI6214_OE [get_bd_pins CDCI6214_OE] [get_bd_pins peripheral_controler_0/CDCI6214_OE]
  connect_bd_net -net peripheral_controler_0_CDCI6214_OPMODE [get_bd_pins CDCI6214_OPMODE] [get_bd_pins peripheral_controler_0/CDCI6214_OPMODE]
  connect_bd_net -net peripheral_controler_0_CDCI6214_REF_SEL [get_bd_pins CDCI6214_REF_SEL] [get_bd_pins peripheral_controler_0/CDCI6214_REF_SEL]
  connect_bd_net -net peripheral_controler_0_GPO [get_bd_pins GPO] [get_bd_pins peripheral_controler_0/GPO]
  connect_bd_net -net peripheral_controler_0_LADC_CTRL1 [get_bd_pins LADC_CTRL1] [get_bd_pins peripheral_controler_0/LADC_CTRL1]
  connect_bd_net -net peripheral_controler_0_LADC_CTRL2 [get_bd_pins LADC_CTRL2] [get_bd_pins peripheral_controler_0/LADC_CTRL2]
  connect_bd_net -net peripheral_controler_0_LADC_OPMODE [get_bd_pins LADC_OPMODE] [get_bd_pins peripheral_controler_0/LADC_OPMODE]
  connect_bd_net -net peripheral_controler_0_LADC_SEN [get_bd_pins peripheral_controler_0/LADC_SEN] [get_bd_pins spi_ladc_customif_0/LADC_SEN]
  connect_bd_net -net peripheral_controler_0_SFP1_RS0 [get_bd_pins SFP1_RS0] [get_bd_pins peripheral_controler_0/SFP1_RS0]
  connect_bd_net -net peripheral_controler_0_SFP1_RS1 [get_bd_pins SFP1_RS1] [get_bd_pins peripheral_controler_0/SFP1_RS1]
  connect_bd_net -net peripheral_controler_0_SFP1_TX_DISABLE [get_bd_pins SFP1_TX_DISABLE] [get_bd_pins peripheral_controler_0/SFP1_TX_DISABLE]
  connect_bd_net -net peripheral_controler_0_SFP2_RS0 [get_bd_pins SFP2_RS0] [get_bd_pins peripheral_controler_0/SFP2_RS0]
  connect_bd_net -net peripheral_controler_0_SFP2_RS1 [get_bd_pins SFP2_RS1] [get_bd_pins peripheral_controler_0/SFP2_RS1]
  connect_bd_net -net peripheral_controler_0_SFP2_TX_DISABLE [get_bd_pins SFP2_TX_DISABLE] [get_bd_pins peripheral_controler_0/SFP2_TX_DISABLE]
  connect_bd_net -net spi_ladc_customif_0_LDAC_SEN [get_bd_pins LDAC_SEN] [get_bd_pins spi_ladc_customif_0/LDAC_SEN]
  connect_bd_net -net spi_ladc_customif_0_SPI_LADC_0_io0_i [get_bd_pins axi_quad_spi_0_LADC_bank87/io0_i] [get_bd_pins spi_ladc_customif_0/SPI_LADC_0_io0_i]
  connect_bd_net -net spi_ladc_customif_0_SPI_LADC_0_io1_i [get_bd_pins axi_quad_spi_0_LADC_bank87/io1_i] [get_bd_pins spi_ladc_customif_0/SPI_LADC_0_io1_i]
  connect_bd_net -net spi_ladc_customif_0_SPI_LADC_0_sck_i [get_bd_pins axi_quad_spi_0_LADC_bank87/sck_i] [get_bd_pins spi_ladc_customif_0/SPI_LADC_0_sck_i]
  connect_bd_net -net spi_ladc_customif_0_SPI_LADC_0_ss_i [get_bd_pins axi_quad_spi_0_LADC_bank87/ss_i] [get_bd_pins spi_ladc_customif_0/SPI_LADC_0_ss_i]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: mts_clk
proc create_hier_cell_mts_clk { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_mts_clk() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 PL_SYSREF

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 PL_SYSTEM_CLK


  # Create pins
  create_bd_pin -dir O pl_user_clk
  create_bd_pin -dir O pl_user_clk2
  create_bd_pin -dir O pl_user_clk_locked
  create_bd_pin -dir O user_sysref_adc
  create_bd_pin -dir O user_sysref_dac

  # Create instance: clk_wiz_0, and set properties
  set clk_wiz_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:clk_wiz:6.0 clk_wiz_0 ]
  set_property -dict [ list \
   CONFIG.CLKIN1_JITTER_PS {320.0} \
   CONFIG.CLKOUT1_JITTER {196.874} \
   CONFIG.CLKOUT1_PHASE_ERROR {204.239} \
   CONFIG.CLKOUT1_REQUESTED_OUT_FREQ {125} \
   CONFIG.CLKOUT2_JITTER {181.597} \
   CONFIG.CLKOUT2_PHASE_ERROR {204.239} \
   CONFIG.CLKOUT2_REQUESTED_OUT_FREQ {200} \
   CONFIG.CLKOUT2_USED {true} \
   CONFIG.MMCM_CLKFBOUT_MULT_F {32.000} \
   CONFIG.MMCM_CLKIN1_PERIOD {32.000} \
   CONFIG.MMCM_CLKIN2_PERIOD {10.0} \
   CONFIG.MMCM_CLKOUT0_DIVIDE_F {8.000} \
   CONFIG.MMCM_CLKOUT1_DIVIDE {5} \
   CONFIG.NUM_OUT_CLKS {2} \
   CONFIG.PRIM_IN_FREQ {31.250} \
   CONFIG.PRIM_SOURCE {No_buffer} \
   CONFIG.USE_RESET {false} \
 ] $clk_wiz_0

  # Create instance: pl_clk_ibufds, and set properties
  set pl_clk_ibufds [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.1 pl_clk_ibufds ]

  # Create instance: pl_sysref_ibufds, and set properties
  set pl_sysref_ibufds [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.1 pl_sysref_ibufds ]

  # Create instance: pl_system_clk_bufg, and set properties
  set pl_system_clk_bufg [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.1 pl_system_clk_bufg ]
  set_property -dict [ list \
   CONFIG.C_BUF_TYPE {BUFG} \
 ] $pl_system_clk_bufg

  # Create instance: sync_0, and set properties
  set block_name sync
  set block_cell_name sync_0
  if { [catch {set sync_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $sync_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DEST_SYNC_FF {2} \
   CONFIG.SRC_INPUT_REG {0} \
 ] $sync_0

  # Create instance: sync_adc, and set properties
  set block_name sync
  set block_cell_name sync_adc
  if { [catch {set sync_adc [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $sync_adc eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DEST_SYNC_FF {2} \
   CONFIG.SRC_INPUT_REG {0} \
 ] $sync_adc

  # Create instance: sync_dac, and set properties
  set block_name sync
  set block_cell_name sync_dac
  if { [catch {set sync_dac [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $sync_dac eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.DEST_SYNC_FF {2} \
   CONFIG.SRC_INPUT_REG {0} \
 ] $sync_dac

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
 ] $xlconstant_0

  # Create interface connections
  connect_bd_intf_net -intf_net PL_SYSREF_1 [get_bd_intf_pins PL_SYSREF] [get_bd_intf_pins pl_sysref_ibufds/CLK_IN_D]
  connect_bd_intf_net -intf_net PL_SYSTEM_CLK_1 [get_bd_intf_pins PL_SYSTEM_CLK] [get_bd_intf_pins pl_clk_ibufds/CLK_IN_D]

  # Create port connections
  connect_bd_net -net clk_wiz_0_clk_out1 [get_bd_pins pl_user_clk] [get_bd_pins clk_wiz_0/clk_out1] [get_bd_pins sync_adc/dest_clk] [get_bd_pins sync_dac/dest_clk]
  connect_bd_net -net clk_wiz_0_clk_out2 [get_bd_pins pl_user_clk2] [get_bd_pins clk_wiz_0/clk_out2]
  connect_bd_net -net clk_wiz_0_locked [get_bd_pins pl_user_clk_locked] [get_bd_pins clk_wiz_0/locked]
  connect_bd_net -net pl_clk_ibufds_IBUF_OUT [get_bd_pins pl_clk_ibufds/IBUF_OUT] [get_bd_pins pl_system_clk_bufg/BUFG_I]
  connect_bd_net -net pl_sysref_ibufds_IBUF_OUT [get_bd_pins pl_sysref_ibufds/IBUF_OUT] [get_bd_pins sync_0/src_in]
  connect_bd_net -net pl_system_clk_bufg_BUFG_O [get_bd_pins clk_wiz_0/clk_in1] [get_bd_pins pl_system_clk_bufg/BUFG_O] [get_bd_pins sync_0/dest_clk]
  connect_bd_net -net sync_0_dest_out [get_bd_pins sync_0/dest_out] [get_bd_pins sync_adc/src_in] [get_bd_pins sync_dac/src_in]
  connect_bd_net -net sync_adc_dest_out [get_bd_pins user_sysref_adc] [get_bd_pins sync_adc/dest_out]
  connect_bd_net -net sync_dac_dest_out [get_bd_pins user_sysref_dac] [get_bd_pins sync_dac/dest_out]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins sync_0/src_clk] [get_bd_pins sync_adc/src_clk] [get_bd_pins sync_dac/src_clk] [get_bd_pins xlconstant_0/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_blocks
proc create_hier_cell_lgain_adc_blocks { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_blocks() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC1

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC2

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC3

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC4

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC5

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC6

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC7

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC8

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC9

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC10

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC11

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC12

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC13

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC14

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC15

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:display_high_speed_selectio_wiz:hssio_data_rx_rtl:1.0 xiphy_rx_pins_0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:display_high_speed_selectio_wiz:hssio_data_rx_rtl:1.0 xiphy_rx_pins_1

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:display_high_speed_selectio_wiz:hssio_data_rx_rtl:1.0 xiphy_rx_pins_2

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:display_high_speed_selectio_wiz:hssio_data_rx_rtl:1.0 xiphy_rx_pins_3


  # Create pins
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir O fifo_rd_data_valid
  create_bd_pin -dir O fifo_rd_data_valid1
  create_bd_pin -dir O fifo_rd_data_valid2
  create_bd_pin -dir O fifo_rd_data_valid3
  create_bd_pin -dir I -type rst rst

  # Create instance: lgain_adc_block_0
  create_hier_cell_lgain_adc_block_0 $hier_obj lgain_adc_block_0

  # Create instance: lgain_adc_block_1
  create_hier_cell_lgain_adc_block_1 $hier_obj lgain_adc_block_1

  # Create instance: lgain_adc_block_2
  create_hier_cell_lgain_adc_block_2 $hier_obj lgain_adc_block_2

  # Create instance: lgain_adc_block_3
  create_hier_cell_lgain_adc_block_3 $hier_obj lgain_adc_block_3

  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins xiphy_rx_pins_2] [get_bd_intf_pins lgain_adc_block_2/xiphy_rx_pins_2]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins xiphy_rx_pins_1] [get_bd_intf_pins lgain_adc_block_1/xiphy_rx_pins_1]
  connect_bd_intf_net -intf_net Conn3 [get_bd_intf_pins xiphy_rx_pins_3] [get_bd_intf_pins lgain_adc_block_3/xiphy_rx_pins_3]
  connect_bd_intf_net -intf_net lgain_adc_block_0_M_AXIS_LGAIN_ADC_0 [get_bd_intf_pins M_AXIS_LGAIN_ADC] [get_bd_intf_pins lgain_adc_block_0/M_AXIS_LGAIN_ADC_0]
  connect_bd_intf_net -intf_net lgain_adc_block_0_M_AXIS_LGAIN_ADC_1 [get_bd_intf_pins M_AXIS_LGAIN_ADC1] [get_bd_intf_pins lgain_adc_block_0/M_AXIS_LGAIN_ADC_1]
  connect_bd_intf_net -intf_net lgain_adc_block_0_M_AXIS_LGAIN_ADC_2 [get_bd_intf_pins M_AXIS_LGAIN_ADC2] [get_bd_intf_pins lgain_adc_block_0/M_AXIS_LGAIN_ADC_2]
  connect_bd_intf_net -intf_net lgain_adc_block_0_M_AXIS_LGAIN_ADC_3 [get_bd_intf_pins M_AXIS_LGAIN_ADC3] [get_bd_intf_pins lgain_adc_block_0/M_AXIS_LGAIN_ADC_3]
  connect_bd_intf_net -intf_net lgain_adc_block_1_M_AXIS_LGAIN_ADC_4 [get_bd_intf_pins M_AXIS_LGAIN_ADC4] [get_bd_intf_pins lgain_adc_block_1/M_AXIS_LGAIN_ADC_4]
  connect_bd_intf_net -intf_net lgain_adc_block_1_M_AXIS_LGAIN_ADC_5 [get_bd_intf_pins M_AXIS_LGAIN_ADC5] [get_bd_intf_pins lgain_adc_block_1/M_AXIS_LGAIN_ADC_5]
  connect_bd_intf_net -intf_net lgain_adc_block_1_M_AXIS_LGAIN_ADC_6 [get_bd_intf_pins M_AXIS_LGAIN_ADC6] [get_bd_intf_pins lgain_adc_block_1/M_AXIS_LGAIN_ADC_6]
  connect_bd_intf_net -intf_net lgain_adc_block_1_M_AXIS_LGAIN_ADC_7 [get_bd_intf_pins M_AXIS_LGAIN_ADC7] [get_bd_intf_pins lgain_adc_block_1/M_AXIS_LGAIN_ADC_7]
  connect_bd_intf_net -intf_net lgain_adc_block_2_M_AXIS_LGAIN_ADC_8 [get_bd_intf_pins M_AXIS_LGAIN_ADC8] [get_bd_intf_pins lgain_adc_block_2/M_AXIS_LGAIN_ADC_8]
  connect_bd_intf_net -intf_net lgain_adc_block_2_M_AXIS_LGAIN_ADC_9 [get_bd_intf_pins M_AXIS_LGAIN_ADC9] [get_bd_intf_pins lgain_adc_block_2/M_AXIS_LGAIN_ADC_9]
  connect_bd_intf_net -intf_net lgain_adc_block_2_M_AXIS_LGAIN_ADC_10 [get_bd_intf_pins M_AXIS_LGAIN_ADC10] [get_bd_intf_pins lgain_adc_block_2/M_AXIS_LGAIN_ADC_10]
  connect_bd_intf_net -intf_net lgain_adc_block_2_M_AXIS_LGAIN_ADC_11 [get_bd_intf_pins M_AXIS_LGAIN_ADC11] [get_bd_intf_pins lgain_adc_block_2/M_AXIS_LGAIN_ADC_11]
  connect_bd_intf_net -intf_net lgain_adc_block_3_M_AXIS_LGAIN_ADC_12 [get_bd_intf_pins M_AXIS_LGAIN_ADC12] [get_bd_intf_pins lgain_adc_block_3/M_AXIS_LGAIN_ADC_12]
  connect_bd_intf_net -intf_net lgain_adc_block_3_M_AXIS_LGAIN_ADC_13 [get_bd_intf_pins M_AXIS_LGAIN_ADC13] [get_bd_intf_pins lgain_adc_block_3/M_AXIS_LGAIN_ADC_13]
  connect_bd_intf_net -intf_net lgain_adc_block_3_M_AXIS_LGAIN_ADC_14 [get_bd_intf_pins M_AXIS_LGAIN_ADC14] [get_bd_intf_pins lgain_adc_block_3/M_AXIS_LGAIN_ADC_14]
  connect_bd_intf_net -intf_net lgain_adc_block_3_M_AXIS_LGAIN_ADC_15 [get_bd_intf_pins M_AXIS_LGAIN_ADC15] [get_bd_intf_pins lgain_adc_block_3/M_AXIS_LGAIN_ADC_15]
  connect_bd_intf_net -intf_net xiphy_rx_pins_0_1 [get_bd_intf_pins xiphy_rx_pins_0] [get_bd_intf_pins lgain_adc_block_0/xiphy_rx_pins_0]

  # Create port connections
  connect_bd_net -net lgain_adc_block_0_fifo_rd_data_valid [get_bd_pins fifo_rd_data_valid] [get_bd_pins lgain_adc_block_0/fifo_rd_data_valid]
  connect_bd_net -net lgain_adc_block_1_fifo_rd_data_valid [get_bd_pins fifo_rd_data_valid1] [get_bd_pins lgain_adc_block_1/fifo_rd_data_valid]
  connect_bd_net -net lgain_adc_block_2_fifo_rd_data_valid [get_bd_pins fifo_rd_data_valid2] [get_bd_pins lgain_adc_block_2/fifo_rd_data_valid]
  connect_bd_net -net lgain_adc_block_3_fifo_rd_data_valid [get_bd_pins fifo_rd_data_valid3] [get_bd_pins lgain_adc_block_3/fifo_rd_data_valid]
  connect_bd_net -net mts_clk_pl_user_clk [get_bd_pins M_ACLK] [get_bd_pins lgain_adc_block_0/M_ACLK] [get_bd_pins lgain_adc_block_1/M_ACLK] [get_bd_pins lgain_adc_block_2/M_ACLK] [get_bd_pins lgain_adc_block_3/M_ACLK]
  connect_bd_net -net pl_user_clk_rst_peripheral_aresetn [get_bd_pins M_ARESETN] [get_bd_pins lgain_adc_block_0/M_ARESETN] [get_bd_pins lgain_adc_block_1/M_ARESETN] [get_bd_pins lgain_adc_block_2/M_ARESETN] [get_bd_pins lgain_adc_block_3/M_ARESETN]
  connect_bd_net -net rst_1 [get_bd_pins rst] [get_bd_pins lgain_adc_block_0/rst] [get_bd_pins lgain_adc_block_1/rst] [get_bd_pins lgain_adc_block_2/rst] [get_bd_pins lgain_adc_block_3/rst]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hardware_trigger_blocks
proc create_hier_cell_hardware_trigger_blocks { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_blocks() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M_AXI

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC1

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC2

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC3

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC4

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC5

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC6

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC7

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC8

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC9

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC10

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC11

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC12

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC13

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC14

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC15

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN1

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN2

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN3

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN4

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN5

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN6

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN7

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN8

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN9

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN10

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN11

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN12

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN13

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN14

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN15

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC1

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC2

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC3

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC4

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC5

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC6

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC7

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC8

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC9

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC10

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC11

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC12

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC13

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC14

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC15


  # Create pins
  create_bd_pin -dir O -from 15 -to 0 DATAFRAMEGEN_ERROR
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O -from 15 -to 0 HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN

  # Create instance: async_pl_ddr_mmu_0, and set properties
  set async_pl_ddr_mmu_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_pl_ddr_mmu:1.1 async_pl_ddr_mmu_0 ]
  set_property -dict [ list \
   CONFIG.LOCAL_ADDRESS_WIDTH {20} \
 ] $async_pl_ddr_mmu_0

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_blocks/async_pl_ddr_mmu_0/RESET]

  # Create instance: axi_datamover_0, and set properties
  set axi_datamover_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_datamover:5.1 axi_datamover_0 ]
  set_property -dict [ list \
   CONFIG.c_dummy {0} \
   CONFIG.c_m_axi_mm2s_data_width {256} \
   CONFIG.c_m_axi_s2mm_data_width {256} \
   CONFIG.c_m_axis_mm2s_tdata_width {256} \
   CONFIG.c_mm2s_btt_used {20} \
   CONFIG.c_mm2s_burst_size {128} \
   CONFIG.c_mm2s_include_sf {false} \
   CONFIG.c_s2mm_btt_used {20} \
   CONFIG.c_s2mm_burst_size {128} \
   CONFIG.c_s_axis_s2mm_tdata_width {256} \
   CONFIG.c_single_interface {1} \
 ] $axi_datamover_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {16} \
 ] $axis_dwidth_converter_0

  # Create instance: axis_interconnect_0, and set properties
  set axis_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_interconnect:2.1 axis_interconnect_0 ]
  set_property -dict [ list \
   CONFIG.ARB_ON_MAX_XFERS {0} \
   CONFIG.ARB_ON_TLAST {1} \
   CONFIG.M00_HAS_REGSLICE {1} \
   CONFIG.NUM_MI {1} \
   CONFIG.NUM_SI {16} \
   CONFIG.S00_FIFO_DEPTH {1024} \
   CONFIG.S00_HAS_REGSLICE {1} \
   CONFIG.S01_FIFO_DEPTH {1024} \
   CONFIG.S01_HAS_REGSLICE {1} \
   CONFIG.S02_FIFO_DEPTH {1024} \
   CONFIG.S02_HAS_REGSLICE {1} \
   CONFIG.S03_FIFO_DEPTH {1024} \
   CONFIG.S03_HAS_REGSLICE {1} \
   CONFIG.S04_FIFO_DEPTH {1024} \
   CONFIG.S04_HAS_REGSLICE {1} \
   CONFIG.S05_FIFO_DEPTH {1024} \
   CONFIG.S05_HAS_REGSLICE {1} \
   CONFIG.S06_FIFO_DEPTH {1024} \
   CONFIG.S06_HAS_REGSLICE {1} \
   CONFIG.S07_FIFO_DEPTH {1024} \
   CONFIG.S07_HAS_REGSLICE {1} \
   CONFIG.S08_FIFO_DEPTH {1024} \
   CONFIG.S08_HAS_REGSLICE {1} \
   CONFIG.S09_FIFO_DEPTH {1024} \
   CONFIG.S09_HAS_REGSLICE {1} \
   CONFIG.S10_FIFO_DEPTH {1024} \
   CONFIG.S10_HAS_REGSLICE {1} \
   CONFIG.S11_FIFO_DEPTH {1024} \
   CONFIG.S11_HAS_REGSLICE {1} \
   CONFIG.S12_FIFO_DEPTH {1024} \
   CONFIG.S12_HAS_REGSLICE {1} \
   CONFIG.S13_FIFO_DEPTH {1024} \
   CONFIG.S13_HAS_REGSLICE {1} \
   CONFIG.S14_FIFO_DEPTH {1024} \
   CONFIG.S14_HAS_REGSLICE {1} \
   CONFIG.S15_FIFO_DEPTH {1024} \
   CONFIG.S15_HAS_REGSLICE {1} \
 ] $axis_interconnect_0

  # Create instance: c_counter_binary_0, and set properties
  set c_counter_binary_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:c_counter_binary:12.0 c_counter_binary_0 ]
  set_property -dict [ list \
   CONFIG.Output_Width {48} \
   CONFIG.SCLR {true} \
 ] $c_counter_binary_0

  # Create instance: hardware_trigger_0
  create_hier_cell_hardware_trigger_0 $hier_obj hardware_trigger_0

  # Create instance: hardware_trigger_1
  create_hier_cell_hardware_trigger_1 $hier_obj hardware_trigger_1

  # Create instance: hardware_trigger_2
  create_hier_cell_hardware_trigger_2 $hier_obj hardware_trigger_2

  # Create instance: hardware_trigger_3
  create_hier_cell_hardware_trigger_3 $hier_obj hardware_trigger_3

  # Create instance: hardware_trigger_4
  create_hier_cell_hardware_trigger_4 $hier_obj hardware_trigger_4

  # Create instance: hardware_trigger_5
  create_hier_cell_hardware_trigger_5 $hier_obj hardware_trigger_5

  # Create instance: hardware_trigger_6
  create_hier_cell_hardware_trigger_6 $hier_obj hardware_trigger_6

  # Create instance: hardware_trigger_7
  create_hier_cell_hardware_trigger_7 $hier_obj hardware_trigger_7

  # Create instance: hardware_trigger_8
  create_hier_cell_hardware_trigger_8 $hier_obj hardware_trigger_8

  # Create instance: hardware_trigger_9
  create_hier_cell_hardware_trigger_9 $hier_obj hardware_trigger_9

  # Create instance: hardware_trigger_10
  create_hier_cell_hardware_trigger_10 $hier_obj hardware_trigger_10

  # Create instance: hardware_trigger_11
  create_hier_cell_hardware_trigger_11 $hier_obj hardware_trigger_11

  # Create instance: hardware_trigger_12
  create_hier_cell_hardware_trigger_12 $hier_obj hardware_trigger_12

  # Create instance: hardware_trigger_13
  create_hier_cell_hardware_trigger_13 $hier_obj hardware_trigger_13

  # Create instance: hardware_trigger_14
  create_hier_cell_hardware_trigger_14 $hier_obj hardware_trigger_14

  # Create instance: hardware_trigger_15
  create_hier_cell_hardware_trigger_15 $hier_obj hardware_trigger_15

  # Create instance: trigger_configrator_0, and set properties
  set trigger_configrator_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_configrator:1.0 trigger_configrator_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {16} \
 ] $xlconcat_0

  # Create instance: xlconcat_1, and set properties
  set xlconcat_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_1 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {16} \
 ] $xlconcat_1

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN10_1 [get_bd_intf_pins S_AXIS_LGAIN10] [get_bd_intf_pins hardware_trigger_10/S_AXIS_LGAIN]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN11_1 [get_bd_intf_pins S_AXIS_LGAIN11] [get_bd_intf_pins hardware_trigger_11/S_AXIS_LGAIN]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN12_1 [get_bd_intf_pins S_AXIS_LGAIN12] [get_bd_intf_pins hardware_trigger_12/S_AXIS_LGAIN]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN13_1 [get_bd_intf_pins S_AXIS_LGAIN13] [get_bd_intf_pins hardware_trigger_13/S_AXIS_LGAIN]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN14_1 [get_bd_intf_pins S_AXIS_LGAIN14] [get_bd_intf_pins hardware_trigger_14/S_AXIS_LGAIN]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN15_1 [get_bd_intf_pins S_AXIS_LGAIN15] [get_bd_intf_pins hardware_trigger_15/S_AXIS_LGAIN]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN1_1 [get_bd_intf_pins S_AXIS_LGAIN1] [get_bd_intf_pins hardware_trigger_1/S_AXIS_LGAIN]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN2_1 [get_bd_intf_pins S_AXIS_LGAIN2] [get_bd_intf_pins hardware_trigger_2/S_AXIS_LGAIN]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN3_1 [get_bd_intf_pins S_AXIS_LGAIN3] [get_bd_intf_pins hardware_trigger_3/S_AXIS_LGAIN]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN4_1 [get_bd_intf_pins S_AXIS_LGAIN4] [get_bd_intf_pins hardware_trigger_4/S_AXIS_LGAIN]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN5_1 [get_bd_intf_pins S_AXIS_LGAIN5] [get_bd_intf_pins hardware_trigger_5/S_AXIS_LGAIN]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN6_1 [get_bd_intf_pins S_AXIS_LGAIN6] [get_bd_intf_pins hardware_trigger_6/S_AXIS_LGAIN]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN7_1 [get_bd_intf_pins S_AXIS_LGAIN7] [get_bd_intf_pins hardware_trigger_7/S_AXIS_LGAIN]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN8_1 [get_bd_intf_pins S_AXIS_LGAIN8] [get_bd_intf_pins hardware_trigger_8/S_AXIS_LGAIN]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN9_1 [get_bd_intf_pins S_AXIS_LGAIN9] [get_bd_intf_pins hardware_trigger_9/S_AXIS_LGAIN]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins hardware_trigger_0/S_AXIS_LGAIN]
  connect_bd_intf_net -intf_net S_AXIS_RFADC10_1 [get_bd_intf_pins S_AXIS_RFADC10] [get_bd_intf_pins hardware_trigger_10/S_AXIS_RFADC]
  connect_bd_intf_net -intf_net S_AXIS_RFADC11_1 [get_bd_intf_pins S_AXIS_RFADC11] [get_bd_intf_pins hardware_trigger_11/S_AXIS_RFADC]
  connect_bd_intf_net -intf_net S_AXIS_RFADC12_1 [get_bd_intf_pins S_AXIS_RFADC12] [get_bd_intf_pins hardware_trigger_12/S_AXIS_RFADC]
  connect_bd_intf_net -intf_net S_AXIS_RFADC13_1 [get_bd_intf_pins S_AXIS_RFADC13] [get_bd_intf_pins hardware_trigger_13/S_AXIS_RFADC]
  connect_bd_intf_net -intf_net S_AXIS_RFADC14_1 [get_bd_intf_pins S_AXIS_RFADC14] [get_bd_intf_pins hardware_trigger_14/S_AXIS_RFADC]
  connect_bd_intf_net -intf_net S_AXIS_RFADC15_1 [get_bd_intf_pins S_AXIS_RFADC15] [get_bd_intf_pins hardware_trigger_15/S_AXIS_RFADC]
  connect_bd_intf_net -intf_net S_AXIS_RFADC1_1 [get_bd_intf_pins S_AXIS_RFADC1] [get_bd_intf_pins hardware_trigger_1/S_AXIS_RFADC]
  connect_bd_intf_net -intf_net S_AXIS_RFADC2_1 [get_bd_intf_pins S_AXIS_RFADC2] [get_bd_intf_pins hardware_trigger_2/S_AXIS_RFADC]
  connect_bd_intf_net -intf_net S_AXIS_RFADC3_1 [get_bd_intf_pins S_AXIS_RFADC3] [get_bd_intf_pins hardware_trigger_3/S_AXIS_RFADC]
  connect_bd_intf_net -intf_net S_AXIS_RFADC4_1 [get_bd_intf_pins S_AXIS_RFADC4] [get_bd_intf_pins hardware_trigger_4/S_AXIS_RFADC]
  connect_bd_intf_net -intf_net S_AXIS_RFADC5_1 [get_bd_intf_pins S_AXIS_RFADC5] [get_bd_intf_pins hardware_trigger_5/S_AXIS_RFADC]
  connect_bd_intf_net -intf_net S_AXIS_RFADC6_1 [get_bd_intf_pins S_AXIS_RFADC6] [get_bd_intf_pins hardware_trigger_6/S_AXIS_RFADC]
  connect_bd_intf_net -intf_net S_AXIS_RFADC7_1 [get_bd_intf_pins S_AXIS_RFADC7] [get_bd_intf_pins hardware_trigger_7/S_AXIS_RFADC]
  connect_bd_intf_net -intf_net S_AXIS_RFADC8_1 [get_bd_intf_pins S_AXIS_RFADC8] [get_bd_intf_pins hardware_trigger_8/S_AXIS_RFADC]
  connect_bd_intf_net -intf_net S_AXIS_RFADC9_1 [get_bd_intf_pins S_AXIS_RFADC9] [get_bd_intf_pins hardware_trigger_9/S_AXIS_RFADC]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins hardware_trigger_0/S_AXIS_RFADC]
  connect_bd_intf_net -intf_net S_AXI_1 [get_bd_intf_pins S_AXI] [get_bd_intf_pins trigger_configrator_0/S_AXI]
  connect_bd_intf_net -intf_net async_pl_ddr_mmu_0_MM2S_CMD_M_AXIS [get_bd_intf_pins async_pl_ddr_mmu_0/MM2S_CMD_M_AXIS] [get_bd_intf_pins axi_datamover_0/S_AXIS_MM2S_CMD]
  connect_bd_intf_net -intf_net async_pl_ddr_mmu_0_M_AXIS [get_bd_intf_pins async_pl_ddr_mmu_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net async_pl_ddr_mmu_0_S2MM_CMD_M_AXIS [get_bd_intf_pins async_pl_ddr_mmu_0/S2MM_CMD_M_AXIS] [get_bd_intf_pins axi_datamover_0/S_AXIS_S2MM_CMD]
  connect_bd_intf_net -intf_net async_pl_ddr_mmu_0_S2MM_M_AXIS [get_bd_intf_pins async_pl_ddr_mmu_0/S2MM_M_AXIS] [get_bd_intf_pins axi_datamover_0/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net axi_datamover_0_M_AXI [get_bd_intf_pins M_AXI] [get_bd_intf_pins axi_datamover_0/M_AXI]
  connect_bd_intf_net -intf_net axi_datamover_0_M_AXIS_MM2S [get_bd_intf_pins async_pl_ddr_mmu_0/MM2S_S_AXIS] [get_bd_intf_pins axi_datamover_0/M_AXIS_MM2S]
  connect_bd_intf_net -intf_net axi_datamover_0_M_AXIS_MM2S_STS [get_bd_intf_pins async_pl_ddr_mmu_0/MM2S_STS_S_AXIS] [get_bd_intf_pins axi_datamover_0/M_AXIS_MM2S_STS]
  connect_bd_intf_net -intf_net axi_datamover_0_M_AXIS_S2MM_STS [get_bd_intf_pins async_pl_ddr_mmu_0/S2MM_STS_S_AXIS] [get_bd_intf_pins axi_datamover_0/M_AXIS_S2MM_STS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net axis_interconnect_0_M00_AXIS [get_bd_intf_pins async_pl_ddr_mmu_0/S_AXIS] [get_bd_intf_pins axis_interconnect_0/M00_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_0_M_AXIS [get_bd_intf_pins axis_interconnect_0/S00_AXIS] [get_bd_intf_pins hardware_trigger_0/M_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_0_M_AXIS_RFDAC [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins hardware_trigger_0/M_AXIS_RFDAC]
  connect_bd_intf_net -intf_net hardware_trigger_10_M_AXIS [get_bd_intf_pins axis_interconnect_0/S10_AXIS] [get_bd_intf_pins hardware_trigger_10/M_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_10_M_AXIS_RFDAC [get_bd_intf_pins M_AXIS_RFDAC10] [get_bd_intf_pins hardware_trigger_10/M_AXIS_RFDAC]
  connect_bd_intf_net -intf_net hardware_trigger_11_M_AXIS [get_bd_intf_pins axis_interconnect_0/S11_AXIS] [get_bd_intf_pins hardware_trigger_11/M_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_11_M_AXIS_RFDAC [get_bd_intf_pins M_AXIS_RFDAC11] [get_bd_intf_pins hardware_trigger_11/M_AXIS_RFDAC]
  connect_bd_intf_net -intf_net hardware_trigger_12_M_AXIS [get_bd_intf_pins axis_interconnect_0/S12_AXIS] [get_bd_intf_pins hardware_trigger_12/M_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_12_M_AXIS_RFDAC [get_bd_intf_pins M_AXIS_RFDAC12] [get_bd_intf_pins hardware_trigger_12/M_AXIS_RFDAC]
  connect_bd_intf_net -intf_net hardware_trigger_13_M_AXIS [get_bd_intf_pins axis_interconnect_0/S13_AXIS] [get_bd_intf_pins hardware_trigger_13/M_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_13_M_AXIS_RFDAC [get_bd_intf_pins M_AXIS_RFDAC13] [get_bd_intf_pins hardware_trigger_13/M_AXIS_RFDAC]
  connect_bd_intf_net -intf_net hardware_trigger_14_M_AXIS [get_bd_intf_pins axis_interconnect_0/S14_AXIS] [get_bd_intf_pins hardware_trigger_14/M_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_14_M_AXIS_RFDAC [get_bd_intf_pins M_AXIS_RFDAC14] [get_bd_intf_pins hardware_trigger_14/M_AXIS_RFDAC]
  connect_bd_intf_net -intf_net hardware_trigger_15_M_AXIS [get_bd_intf_pins axis_interconnect_0/S15_AXIS] [get_bd_intf_pins hardware_trigger_15/M_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_15_M_AXIS_RFDAC [get_bd_intf_pins M_AXIS_RFDAC15] [get_bd_intf_pins hardware_trigger_15/M_AXIS_RFDAC]
  connect_bd_intf_net -intf_net hardware_trigger_1_M_AXIS [get_bd_intf_pins axis_interconnect_0/S01_AXIS] [get_bd_intf_pins hardware_trigger_1/M_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_1_M_AXIS_RFDAC [get_bd_intf_pins M_AXIS_RFDAC1] [get_bd_intf_pins hardware_trigger_1/M_AXIS_RFDAC]
  connect_bd_intf_net -intf_net hardware_trigger_2_M_AXIS [get_bd_intf_pins axis_interconnect_0/S02_AXIS] [get_bd_intf_pins hardware_trigger_2/M_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_2_M_AXIS_RFDAC [get_bd_intf_pins M_AXIS_RFDAC2] [get_bd_intf_pins hardware_trigger_2/M_AXIS_RFDAC]
  connect_bd_intf_net -intf_net hardware_trigger_3_M_AXIS [get_bd_intf_pins axis_interconnect_0/S03_AXIS] [get_bd_intf_pins hardware_trigger_3/M_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_3_M_AXIS_RFDAC [get_bd_intf_pins M_AXIS_RFDAC3] [get_bd_intf_pins hardware_trigger_3/M_AXIS_RFDAC]
  connect_bd_intf_net -intf_net hardware_trigger_4_M_AXIS [get_bd_intf_pins axis_interconnect_0/S04_AXIS] [get_bd_intf_pins hardware_trigger_4/M_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_4_M_AXIS_RFDAC [get_bd_intf_pins M_AXIS_RFDAC4] [get_bd_intf_pins hardware_trigger_4/M_AXIS_RFDAC]
  connect_bd_intf_net -intf_net hardware_trigger_5_M_AXIS [get_bd_intf_pins axis_interconnect_0/S05_AXIS] [get_bd_intf_pins hardware_trigger_5/M_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_5_M_AXIS_RFDAC [get_bd_intf_pins M_AXIS_RFDAC5] [get_bd_intf_pins hardware_trigger_5/M_AXIS_RFDAC]
  connect_bd_intf_net -intf_net hardware_trigger_6_M_AXIS [get_bd_intf_pins axis_interconnect_0/S06_AXIS] [get_bd_intf_pins hardware_trigger_6/M_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_6_M_AXIS_RFDAC [get_bd_intf_pins M_AXIS_RFDAC6] [get_bd_intf_pins hardware_trigger_6/M_AXIS_RFDAC]
  connect_bd_intf_net -intf_net hardware_trigger_7_M_AXIS [get_bd_intf_pins axis_interconnect_0/S07_AXIS] [get_bd_intf_pins hardware_trigger_7/M_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_7_M_AXIS_RFDAC [get_bd_intf_pins M_AXIS_RFDAC7] [get_bd_intf_pins hardware_trigger_7/M_AXIS_RFDAC]
  connect_bd_intf_net -intf_net hardware_trigger_8_M_AXIS [get_bd_intf_pins axis_interconnect_0/S08_AXIS] [get_bd_intf_pins hardware_trigger_8/M_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_8_M_AXIS_RFDAC [get_bd_intf_pins M_AXIS_RFDAC8] [get_bd_intf_pins hardware_trigger_8/M_AXIS_RFDAC]
  connect_bd_intf_net -intf_net hardware_trigger_9_M_AXIS [get_bd_intf_pins axis_interconnect_0/S09_AXIS] [get_bd_intf_pins hardware_trigger_9/M_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_9_M_AXIS_RFDAC [get_bd_intf_pins M_AXIS_RFDAC9] [get_bd_intf_pins hardware_trigger_9/M_AXIS_RFDAC]
  connect_bd_intf_net -intf_net trigger_configrator_0_CH0_CONTROL [get_bd_intf_pins hardware_trigger_0/TRIGGER_CONTROL] [get_bd_intf_pins trigger_configrator_0/CH0_CONTROL]
  connect_bd_intf_net -intf_net trigger_configrator_0_CH10_CONTROL [get_bd_intf_pins hardware_trigger_10/TRIGGER_CONTROL] [get_bd_intf_pins trigger_configrator_0/CH10_CONTROL]
  connect_bd_intf_net -intf_net trigger_configrator_0_CH11_CONTROL [get_bd_intf_pins hardware_trigger_11/TRIGGER_CONTROL] [get_bd_intf_pins trigger_configrator_0/CH11_CONTROL]
  connect_bd_intf_net -intf_net trigger_configrator_0_CH12_CONTROL [get_bd_intf_pins hardware_trigger_12/TRIGGER_CONTROL] [get_bd_intf_pins trigger_configrator_0/CH12_CONTROL]
  connect_bd_intf_net -intf_net trigger_configrator_0_CH13_CONTROL [get_bd_intf_pins hardware_trigger_13/TRIGGER_CONTROL] [get_bd_intf_pins trigger_configrator_0/CH13_CONTROL]
  connect_bd_intf_net -intf_net trigger_configrator_0_CH14_CONTROL [get_bd_intf_pins hardware_trigger_14/TRIGGER_CONTROL] [get_bd_intf_pins trigger_configrator_0/CH14_CONTROL]
  connect_bd_intf_net -intf_net trigger_configrator_0_CH15_CONTROL [get_bd_intf_pins hardware_trigger_15/TRIGGER_CONTROL] [get_bd_intf_pins trigger_configrator_0/CH15_CONTROL]
  connect_bd_intf_net -intf_net trigger_configrator_0_CH1_CONTROL [get_bd_intf_pins hardware_trigger_1/TRIGGER_CONTROL] [get_bd_intf_pins trigger_configrator_0/CH1_CONTROL]
  connect_bd_intf_net -intf_net trigger_configrator_0_CH2_CONTROL [get_bd_intf_pins hardware_trigger_2/TRIGGER_CONTROL] [get_bd_intf_pins trigger_configrator_0/CH2_CONTROL]
  connect_bd_intf_net -intf_net trigger_configrator_0_CH3_CONTROL [get_bd_intf_pins hardware_trigger_3/TRIGGER_CONTROL] [get_bd_intf_pins trigger_configrator_0/CH3_CONTROL]
  connect_bd_intf_net -intf_net trigger_configrator_0_CH4_CONTROL [get_bd_intf_pins hardware_trigger_4/TRIGGER_CONTROL] [get_bd_intf_pins trigger_configrator_0/CH4_CONTROL]
  connect_bd_intf_net -intf_net trigger_configrator_0_CH5_CONTROL [get_bd_intf_pins hardware_trigger_5/TRIGGER_CONTROL] [get_bd_intf_pins trigger_configrator_0/CH5_CONTROL]
  connect_bd_intf_net -intf_net trigger_configrator_0_CH6_CONTROL [get_bd_intf_pins hardware_trigger_6/TRIGGER_CONTROL] [get_bd_intf_pins trigger_configrator_0/CH6_CONTROL]
  connect_bd_intf_net -intf_net trigger_configrator_0_CH7_CONTROL [get_bd_intf_pins hardware_trigger_7/TRIGGER_CONTROL] [get_bd_intf_pins trigger_configrator_0/CH7_CONTROL]
  connect_bd_intf_net -intf_net trigger_configrator_0_CH8_CONTROL [get_bd_intf_pins hardware_trigger_8/TRIGGER_CONTROL] [get_bd_intf_pins trigger_configrator_0/CH8_CONTROL]
  connect_bd_intf_net -intf_net trigger_configrator_0_CH9_CONTROL [get_bd_intf_pins hardware_trigger_9/TRIGGER_CONTROL] [get_bd_intf_pins trigger_configrator_0/CH9_CONTROL]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins hardware_trigger_0/EXTERNAL_TRIGGER] [get_bd_pins hardware_trigger_1/EXTERNAL_TRIGGER] [get_bd_pins hardware_trigger_10/EXTERNAL_TRIGGER] [get_bd_pins hardware_trigger_11/EXTERNAL_TRIGGER] [get_bd_pins hardware_trigger_12/EXTERNAL_TRIGGER] [get_bd_pins hardware_trigger_13/EXTERNAL_TRIGGER] [get_bd_pins hardware_trigger_14/EXTERNAL_TRIGGER] [get_bd_pins hardware_trigger_15/EXTERNAL_TRIGGER] [get_bd_pins hardware_trigger_2/EXTERNAL_TRIGGER] [get_bd_pins hardware_trigger_3/EXTERNAL_TRIGGER] [get_bd_pins hardware_trigger_4/EXTERNAL_TRIGGER] [get_bd_pins hardware_trigger_5/EXTERNAL_TRIGGER] [get_bd_pins hardware_trigger_6/EXTERNAL_TRIGGER] [get_bd_pins hardware_trigger_7/EXTERNAL_TRIGGER] [get_bd_pins hardware_trigger_8/EXTERNAL_TRIGGER] [get_bd_pins hardware_trigger_9/EXTERNAL_TRIGGER]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins hardware_trigger_0/MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins hardware_trigger_1/MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins hardware_trigger_10/MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins hardware_trigger_11/MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins hardware_trigger_12/MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins hardware_trigger_13/MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins hardware_trigger_14/MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins hardware_trigger_15/MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins hardware_trigger_2/MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins hardware_trigger_3/MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins hardware_trigger_4/MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins hardware_trigger_5/MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins hardware_trigger_6/MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins hardware_trigger_7/MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins hardware_trigger_8/MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins hardware_trigger_9/MODE_SWITCH_LOWER_THRESHOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins hardware_trigger_0/MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins hardware_trigger_1/MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins hardware_trigger_10/MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins hardware_trigger_11/MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins hardware_trigger_12/MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins hardware_trigger_13/MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins hardware_trigger_14/MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins hardware_trigger_15/MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins hardware_trigger_2/MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins hardware_trigger_3/MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins hardware_trigger_4/MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins hardware_trigger_5/MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins hardware_trigger_6/MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins hardware_trigger_7/MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins hardware_trigger_8/MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins hardware_trigger_9/MODE_SWITCH_UPPER_THRESHOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_pl_ddr_mmu_0/ACLK] [get_bd_pins axi_datamover_0/m_axi_mm2s_aclk] [get_bd_pins axi_datamover_0/m_axi_s2mm_aclk] [get_bd_pins axi_datamover_0/m_axis_mm2s_cmdsts_aclk] [get_bd_pins axi_datamover_0/m_axis_s2mm_cmdsts_awclk] [get_bd_pins axis_dwidth_converter_0/aclk] [get_bd_pins axis_interconnect_0/ACLK] [get_bd_pins axis_interconnect_0/M00_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S00_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S01_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S02_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S03_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S04_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S05_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S06_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S07_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S08_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S09_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S10_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S11_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S12_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S13_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S14_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S15_AXIS_ACLK] [get_bd_pins hardware_trigger_0/M_AXIS_ACLK] [get_bd_pins hardware_trigger_1/M_AXIS_ACLK] [get_bd_pins hardware_trigger_10/M_AXIS_ACLK] [get_bd_pins hardware_trigger_11/M_AXIS_ACLK] [get_bd_pins hardware_trigger_12/M_AXIS_ACLK] [get_bd_pins hardware_trigger_13/M_AXIS_ACLK] [get_bd_pins hardware_trigger_14/M_AXIS_ACLK] [get_bd_pins hardware_trigger_15/M_AXIS_ACLK] [get_bd_pins hardware_trigger_2/M_AXIS_ACLK] [get_bd_pins hardware_trigger_3/M_AXIS_ACLK] [get_bd_pins hardware_trigger_4/M_AXIS_ACLK] [get_bd_pins hardware_trigger_5/M_AXIS_ACLK] [get_bd_pins hardware_trigger_6/M_AXIS_ACLK] [get_bd_pins hardware_trigger_7/M_AXIS_ACLK] [get_bd_pins hardware_trigger_8/M_AXIS_ACLK] [get_bd_pins hardware_trigger_9/M_AXIS_ACLK]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_pl_ddr_mmu_0/ARESETN] [get_bd_pins axi_datamover_0/m_axi_mm2s_aresetn] [get_bd_pins axi_datamover_0/m_axi_s2mm_aresetn] [get_bd_pins axi_datamover_0/m_axis_mm2s_cmdsts_aresetn] [get_bd_pins axi_datamover_0/m_axis_s2mm_cmdsts_aresetn] [get_bd_pins axis_dwidth_converter_0/aresetn] [get_bd_pins axis_interconnect_0/ARESETN] [get_bd_pins axis_interconnect_0/M00_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S00_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S01_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S02_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S03_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S04_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S05_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S06_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S07_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S08_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S09_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S10_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S11_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S12_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S13_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S14_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S15_AXIS_ARESETN] [get_bd_pins hardware_trigger_0/M_AXIS_ARESETN] [get_bd_pins hardware_trigger_1/M_AXIS_ARESETN] [get_bd_pins hardware_trigger_10/M_AXIS_ARESETN] [get_bd_pins hardware_trigger_11/M_AXIS_ARESETN] [get_bd_pins hardware_trigger_12/M_AXIS_ARESETN] [get_bd_pins hardware_trigger_13/M_AXIS_ARESETN] [get_bd_pins hardware_trigger_14/M_AXIS_ARESETN] [get_bd_pins hardware_trigger_15/M_AXIS_ARESETN] [get_bd_pins hardware_trigger_2/M_AXIS_ARESETN] [get_bd_pins hardware_trigger_3/M_AXIS_ARESETN] [get_bd_pins hardware_trigger_4/M_AXIS_ARESETN] [get_bd_pins hardware_trigger_5/M_AXIS_ARESETN] [get_bd_pins hardware_trigger_6/M_AXIS_ARESETN] [get_bd_pins hardware_trigger_7/M_AXIS_ARESETN] [get_bd_pins hardware_trigger_8/M_AXIS_ARESETN] [get_bd_pins hardware_trigger_9/M_AXIS_ARESETN]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_pl_ddr_mmu_0/CLK] [get_bd_pins c_counter_binary_0/CLK] [get_bd_pins hardware_trigger_0/S_AXIS_ACLK] [get_bd_pins hardware_trigger_1/S_AXIS_ACLK] [get_bd_pins hardware_trigger_10/S_AXIS_ACLK] [get_bd_pins hardware_trigger_11/S_AXIS_ACLK] [get_bd_pins hardware_trigger_12/S_AXIS_ACLK] [get_bd_pins hardware_trigger_13/S_AXIS_ACLK] [get_bd_pins hardware_trigger_14/S_AXIS_ACLK] [get_bd_pins hardware_trigger_15/S_AXIS_ACLK] [get_bd_pins hardware_trigger_2/S_AXIS_ACLK] [get_bd_pins hardware_trigger_3/S_AXIS_ACLK] [get_bd_pins hardware_trigger_4/S_AXIS_ACLK] [get_bd_pins hardware_trigger_5/S_AXIS_ACLK] [get_bd_pins hardware_trigger_6/S_AXIS_ACLK] [get_bd_pins hardware_trigger_7/S_AXIS_ACLK] [get_bd_pins hardware_trigger_8/S_AXIS_ACLK] [get_bd_pins hardware_trigger_9/S_AXIS_ACLK] [get_bd_pins trigger_configrator_0/S_AXI_ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins hardware_trigger_0/S_AXIS_ARESETN] [get_bd_pins hardware_trigger_1/S_AXIS_ARESETN] [get_bd_pins hardware_trigger_10/S_AXIS_ARESETN] [get_bd_pins hardware_trigger_11/S_AXIS_ARESETN] [get_bd_pins hardware_trigger_12/S_AXIS_ARESETN] [get_bd_pins hardware_trigger_13/S_AXIS_ARESETN] [get_bd_pins hardware_trigger_14/S_AXIS_ARESETN] [get_bd_pins hardware_trigger_15/S_AXIS_ARESETN] [get_bd_pins hardware_trigger_2/S_AXIS_ARESETN] [get_bd_pins hardware_trigger_3/S_AXIS_ARESETN] [get_bd_pins hardware_trigger_4/S_AXIS_ARESETN] [get_bd_pins hardware_trigger_5/S_AXIS_ARESETN] [get_bd_pins hardware_trigger_6/S_AXIS_ARESETN] [get_bd_pins hardware_trigger_7/S_AXIS_ARESETN] [get_bd_pins hardware_trigger_8/S_AXIS_ARESETN] [get_bd_pins hardware_trigger_9/S_AXIS_ARESETN] [get_bd_pins trigger_configrator_0/S_AXI_ARESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net c_counter_binary_0_Q [get_bd_pins c_counter_binary_0/Q] [get_bd_pins hardware_trigger_0/TIMESTAMP] [get_bd_pins hardware_trigger_1/TIMESTAMP] [get_bd_pins hardware_trigger_10/TIMESTAMP] [get_bd_pins hardware_trigger_11/TIMESTAMP] [get_bd_pins hardware_trigger_12/TIMESTAMP] [get_bd_pins hardware_trigger_13/TIMESTAMP] [get_bd_pins hardware_trigger_14/TIMESTAMP] [get_bd_pins hardware_trigger_15/TIMESTAMP] [get_bd_pins hardware_trigger_2/TIMESTAMP] [get_bd_pins hardware_trigger_3/TIMESTAMP] [get_bd_pins hardware_trigger_4/TIMESTAMP] [get_bd_pins hardware_trigger_5/TIMESTAMP] [get_bd_pins hardware_trigger_6/TIMESTAMP] [get_bd_pins hardware_trigger_7/TIMESTAMP] [get_bd_pins hardware_trigger_8/TIMESTAMP] [get_bd_pins hardware_trigger_9/TIMESTAMP]
  connect_bd_net -net hardware_trigger_0_DATAFRAMEGEN_ERROR [get_bd_pins hardware_trigger_0/DATAFRAMEGEN_ERROR] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net hardware_trigger_0_HGAIN_SATURATION [get_bd_pins hardware_trigger_0/HGAIN_SATURATION] [get_bd_pins xlconcat_1/In0]
  connect_bd_net -net hardware_trigger_10_DATAFRAMEGEN_ERROR [get_bd_pins hardware_trigger_10/DATAFRAMEGEN_ERROR] [get_bd_pins xlconcat_0/In10]
  connect_bd_net -net hardware_trigger_10_HGAIN_SATURATION [get_bd_pins hardware_trigger_10/HGAIN_SATURATION] [get_bd_pins xlconcat_1/In10]
  connect_bd_net -net hardware_trigger_11_DATAFRAMEGEN_ERROR [get_bd_pins hardware_trigger_11/DATAFRAMEGEN_ERROR] [get_bd_pins xlconcat_0/In11]
  connect_bd_net -net hardware_trigger_11_HGAIN_SATURATION [get_bd_pins hardware_trigger_11/HGAIN_SATURATION] [get_bd_pins xlconcat_1/In11]
  connect_bd_net -net hardware_trigger_12_DATAFRAMEGEN_ERROR [get_bd_pins hardware_trigger_12/DATAFRAMEGEN_ERROR] [get_bd_pins xlconcat_0/In12]
  connect_bd_net -net hardware_trigger_12_HGAIN_SATURATION [get_bd_pins hardware_trigger_12/HGAIN_SATURATION] [get_bd_pins xlconcat_1/In12]
  connect_bd_net -net hardware_trigger_13_DATAFRAMEGEN_ERROR [get_bd_pins hardware_trigger_13/DATAFRAMEGEN_ERROR] [get_bd_pins xlconcat_0/In13]
  connect_bd_net -net hardware_trigger_13_HGAIN_SATURATION [get_bd_pins hardware_trigger_13/HGAIN_SATURATION] [get_bd_pins xlconcat_1/In13]
  connect_bd_net -net hardware_trigger_14_DATAFRAMEGEN_ERROR [get_bd_pins hardware_trigger_14/DATAFRAMEGEN_ERROR] [get_bd_pins xlconcat_0/In14]
  connect_bd_net -net hardware_trigger_14_HGAIN_SATURATION [get_bd_pins hardware_trigger_14/HGAIN_SATURATION] [get_bd_pins xlconcat_1/In14]
  connect_bd_net -net hardware_trigger_15_DATAFRAMEGEN_ERROR [get_bd_pins hardware_trigger_15/DATAFRAMEGEN_ERROR] [get_bd_pins xlconcat_0/In15]
  connect_bd_net -net hardware_trigger_15_HGAIN_SATURATION [get_bd_pins hardware_trigger_15/HGAIN_SATURATION] [get_bd_pins xlconcat_1/In15]
  connect_bd_net -net hardware_trigger_1_DATAFRAMEGEN_ERROR [get_bd_pins hardware_trigger_1/DATAFRAMEGEN_ERROR] [get_bd_pins xlconcat_0/In1]
  connect_bd_net -net hardware_trigger_1_HGAIN_SATURATION [get_bd_pins hardware_trigger_1/HGAIN_SATURATION] [get_bd_pins xlconcat_1/In1]
  connect_bd_net -net hardware_trigger_2_DATAFRAMEGEN_ERROR [get_bd_pins hardware_trigger_2/DATAFRAMEGEN_ERROR] [get_bd_pins xlconcat_0/In2]
  connect_bd_net -net hardware_trigger_2_HGAIN_SATURATION [get_bd_pins hardware_trigger_2/HGAIN_SATURATION] [get_bd_pins xlconcat_1/In2]
  connect_bd_net -net hardware_trigger_3_DATAFRAMEGEN_ERROR [get_bd_pins hardware_trigger_3/DATAFRAMEGEN_ERROR] [get_bd_pins xlconcat_0/In3]
  connect_bd_net -net hardware_trigger_3_HGAIN_SATURATION [get_bd_pins hardware_trigger_3/HGAIN_SATURATION] [get_bd_pins xlconcat_1/In3]
  connect_bd_net -net hardware_trigger_4_DATAFRAMEGEN_ERROR [get_bd_pins hardware_trigger_4/DATAFRAMEGEN_ERROR] [get_bd_pins xlconcat_0/In4]
  connect_bd_net -net hardware_trigger_4_HGAIN_SATURATION [get_bd_pins hardware_trigger_4/HGAIN_SATURATION] [get_bd_pins xlconcat_1/In4]
  connect_bd_net -net hardware_trigger_5_DATAFRAMEGEN_ERROR [get_bd_pins hardware_trigger_5/DATAFRAMEGEN_ERROR] [get_bd_pins xlconcat_0/In5]
  connect_bd_net -net hardware_trigger_5_HGAIN_SATURATION [get_bd_pins hardware_trigger_5/HGAIN_SATURATION] [get_bd_pins xlconcat_1/In5]
  connect_bd_net -net hardware_trigger_6_DATAFRAMEGEN_ERROR [get_bd_pins hardware_trigger_6/DATAFRAMEGEN_ERROR] [get_bd_pins xlconcat_0/In6]
  connect_bd_net -net hardware_trigger_6_HGAIN_SATURATION [get_bd_pins hardware_trigger_6/HGAIN_SATURATION] [get_bd_pins xlconcat_1/In6]
  connect_bd_net -net hardware_trigger_7_DATAFRAMEGEN_ERROR [get_bd_pins hardware_trigger_7/DATAFRAMEGEN_ERROR] [get_bd_pins xlconcat_0/In7]
  connect_bd_net -net hardware_trigger_7_HGAIN_SATURATION [get_bd_pins hardware_trigger_7/HGAIN_SATURATION] [get_bd_pins xlconcat_1/In7]
  connect_bd_net -net hardware_trigger_8_DATAFRAMEGEN_ERROR [get_bd_pins hardware_trigger_8/DATAFRAMEGEN_ERROR] [get_bd_pins xlconcat_0/In8]
  connect_bd_net -net hardware_trigger_8_HGAIN_SATURATION [get_bd_pins hardware_trigger_8/HGAIN_SATURATION] [get_bd_pins xlconcat_1/In8]
  connect_bd_net -net hardware_trigger_9_DATAFRAMEGEN_ERROR [get_bd_pins hardware_trigger_9/DATAFRAMEGEN_ERROR] [get_bd_pins xlconcat_0/In9]
  connect_bd_net -net hardware_trigger_9_HGAIN_SATURATION [get_bd_pins hardware_trigger_9/HGAIN_SATURATION] [get_bd_pins xlconcat_1/In9]
  connect_bd_net -net trigger_configrator_0_MAX_TRIGGER_LENGTH [get_bd_pins async_pl_ddr_mmu_0/MAX_TRIGGER_LENGTH] [get_bd_pins hardware_trigger_0/MAX_TRIGGER_LENGTH] [get_bd_pins hardware_trigger_1/MAX_TRIGGER_LENGTH] [get_bd_pins hardware_trigger_10/MAX_TRIGGER_LENGTH] [get_bd_pins hardware_trigger_11/MAX_TRIGGER_LENGTH] [get_bd_pins hardware_trigger_12/MAX_TRIGGER_LENGTH] [get_bd_pins hardware_trigger_13/MAX_TRIGGER_LENGTH] [get_bd_pins hardware_trigger_14/MAX_TRIGGER_LENGTH] [get_bd_pins hardware_trigger_15/MAX_TRIGGER_LENGTH] [get_bd_pins hardware_trigger_2/MAX_TRIGGER_LENGTH] [get_bd_pins hardware_trigger_3/MAX_TRIGGER_LENGTH] [get_bd_pins hardware_trigger_4/MAX_TRIGGER_LENGTH] [get_bd_pins hardware_trigger_5/MAX_TRIGGER_LENGTH] [get_bd_pins hardware_trigger_6/MAX_TRIGGER_LENGTH] [get_bd_pins hardware_trigger_7/MAX_TRIGGER_LENGTH] [get_bd_pins hardware_trigger_8/MAX_TRIGGER_LENGTH] [get_bd_pins hardware_trigger_9/MAX_TRIGGER_LENGTH] [get_bd_pins trigger_configrator_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net trigger_configrator_0_SET_CONFIG [get_bd_pins async_pl_ddr_mmu_0/SET_CONFIG] [get_bd_pins hardware_trigger_0/SET_CONFIG] [get_bd_pins hardware_trigger_1/SET_CONFIG] [get_bd_pins hardware_trigger_10/SET_CONFIG] [get_bd_pins hardware_trigger_11/SET_CONFIG] [get_bd_pins hardware_trigger_12/SET_CONFIG] [get_bd_pins hardware_trigger_13/SET_CONFIG] [get_bd_pins hardware_trigger_14/SET_CONFIG] [get_bd_pins hardware_trigger_15/SET_CONFIG] [get_bd_pins hardware_trigger_2/SET_CONFIG] [get_bd_pins hardware_trigger_3/SET_CONFIG] [get_bd_pins hardware_trigger_4/SET_CONFIG] [get_bd_pins hardware_trigger_5/SET_CONFIG] [get_bd_pins hardware_trigger_6/SET_CONFIG] [get_bd_pins hardware_trigger_7/SET_CONFIG] [get_bd_pins hardware_trigger_8/SET_CONFIG] [get_bd_pins hardware_trigger_9/SET_CONFIG] [get_bd_pins trigger_configrator_0/SET_CONFIG]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins async_pl_ddr_mmu_0/RESET] [get_bd_pins c_counter_binary_0/SCLR] [get_bd_pins util_vector_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlconcat_1_dout [get_bd_pins HGAIN_SATURATION] [get_bd_pins xlconcat_1/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set IIC_SFP1_0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:iic_rtl:1.0 IIC_SFP1_0 ]

  set IIC_SFP2_0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:iic_rtl:1.0 IIC_SFP2_0 ]

  set PL_SYSREF [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 PL_SYSREF ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {7812500} \
   ] $PL_SYSREF

  set PL_SYSTEM_CLK [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 PL_SYSTEM_CLK ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {31250000} \
   ] $PL_SYSTEM_CLK

  set SPI_BASEDAC_0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:spi_rtl:1.0 SPI_BASEDAC_0 ]

  set Vp_Vn_0 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vp_Vn_0 ]

  set adc0_clk [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 adc0_clk ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {250000000.0} \
   ] $adc0_clk

  set adc1_clk [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 adc1_clk ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {250000000.0} \
   ] $adc1_clk

  set adc2_clk [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 adc2_clk ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {250000000.0} \
   ] $adc2_clk

  set adc3_clk [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 adc3_clk ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {250000000.0} \
   ] $adc3_clk

  set sysref_in [ create_bd_intf_port -mode Slave -vlnv xilinx.com:display_usp_rf_data_converter:diff_pins_rtl:1.0 sysref_in ]

  set vin00 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin00 ]

  set vin01 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin01 ]

  set vin02 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin02 ]

  set vin03 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin03 ]

  set vin10 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin10 ]

  set vin11 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin11 ]

  set vin12 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin12 ]

  set vin13 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin13 ]

  set vin20 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin20 ]

  set vin21 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin21 ]

  set vin22 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin22 ]

  set vin23 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin23 ]

  set vin30 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin30 ]

  set vin31 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin31 ]

  set vin32 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin32 ]

  set vin33 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin33 ]

  set xiphy_rx_pins_0 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:display_high_speed_selectio_wiz:hssio_data_rx_rtl:1.0 xiphy_rx_pins_0 ]

  set xiphy_rx_pins_1 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:display_high_speed_selectio_wiz:hssio_data_rx_rtl:1.0 xiphy_rx_pins_1 ]

  set xiphy_rx_pins_2 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:display_high_speed_selectio_wiz:hssio_data_rx_rtl:1.0 xiphy_rx_pins_2 ]

  set xiphy_rx_pins_3 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:display_high_speed_selectio_wiz:hssio_data_rx_rtl:1.0 xiphy_rx_pins_3 ]


  # Create ports
  set CDCI6214_EEPROM_SEL_0 [ create_bd_port -dir O CDCI6214_EEPROM_SEL_0 ]
  set CDCI6214_OE_0 [ create_bd_port -dir O CDCI6214_OE_0 ]
  set CDCI6214_OPMODE_0 [ create_bd_port -dir O CDCI6214_OPMODE_0 ]
  set CDCI6214_REF_SEL_0 [ create_bd_port -dir O CDCI6214_REF_SEL_0 ]
  set CDCI6214_STATUS_0 [ create_bd_port -dir I CDCI6214_STATUS_0 ]
  set GPI_0 [ create_bd_port -dir I -from 3 -to 0 GPI_0 ]
  set GPO_0 [ create_bd_port -dir O -from 3 -to 0 GPO_0 ]
  set IIC_CDCI6214_0_scl_io [ create_bd_port -dir IO IIC_CDCI6214_0_scl_io ]
  set IIC_CDCI6214_0_sda_io [ create_bd_port -dir IO IIC_CDCI6214_0_sda_io ]
  set LADC_CTRL1_0 [ create_bd_port -dir O -from 7 -to 0 LADC_CTRL1_0 ]
  set LADC_CTRL2_0 [ create_bd_port -dir O -from 7 -to 0 LADC_CTRL2_0 ]
  set LADC_OPMODE_0 [ create_bd_port -dir O LADC_OPMODE_0 ]
  set LDAC_SDATA_0 [ create_bd_port -dir I -from 6 -to 0 LDAC_SDATA_0 ]
  set LDAC_SEN_0 [ create_bd_port -dir O -from 6 -to 0 LDAC_SEN_0 ]
  set LEMO [ create_bd_port -dir I -from 1 -to 0 LEMO ]
  set PL_USER_CLK2_LED [ create_bd_port -dir O PL_USER_CLK2_LED ]
  set PL_USER_CLK_LED [ create_bd_port -dir O PL_USER_CLK_LED ]
  set PL_USER_CLK_LOCKED_LED [ create_bd_port -dir O PL_USER_CLK_LOCKED_LED ]
  set PS_PL_CLK_LED [ create_bd_port -dir O PS_PL_CLK_LED ]
  set SFP1_MOD_ABS_0 [ create_bd_port -dir I SFP1_MOD_ABS_0 ]
  set SFP1_RS0_0 [ create_bd_port -dir O SFP1_RS0_0 ]
  set SFP1_RS1_0 [ create_bd_port -dir O SFP1_RS1_0 ]
  set SFP1_RX_LOS_0 [ create_bd_port -dir I SFP1_RX_LOS_0 ]
  set SFP1_TX_DISABLE_0 [ create_bd_port -dir O SFP1_TX_DISABLE_0 ]
  set SFP1_TX_FAULT_0 [ create_bd_port -dir I SFP1_TX_FAULT_0 ]
  set SFP2_MOD_ABS_0 [ create_bd_port -dir I SFP2_MOD_ABS_0 ]
  set SFP2_RS0_0 [ create_bd_port -dir O SFP2_RS0_0 ]
  set SFP2_RS1_0 [ create_bd_port -dir O SFP2_RS1_0 ]
  set SFP2_RX_LOS_0 [ create_bd_port -dir I SFP2_RX_LOS_0 ]
  set SFP2_TX_DISABLE_0 [ create_bd_port -dir O SFP2_TX_DISABLE_0 ]
  set SFP2_TX_FAULT_0 [ create_bd_port -dir I SFP2_TX_FAULT_0 ]
  set SPI_LADC_0_io0_io [ create_bd_port -dir IO SPI_LADC_0_io0_io ]
  set SPI_LADC_0_io1_io [ create_bd_port -dir IO SPI_LADC_0_io1_io ]
  set SPI_LADC_0_sck_io [ create_bd_port -dir IO SPI_LADC_0_sck_io ]
  set SPI_LADC_0_ss_io [ create_bd_port -dir IO SPI_LADC_0_ss_io ]
  set SYS_RST [ create_bd_port -dir I -type rst SYS_RST ]
  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] $SYS_RST

  # Create instance: axi_bram_ctrl_0, and set properties
  set axi_bram_ctrl_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_bram_ctrl:4.1 axi_bram_ctrl_0 ]
  set_property -dict [ list \
   CONFIG.DATA_WIDTH {256} \
   CONFIG.ECC_TYPE {0} \
 ] $axi_bram_ctrl_0

  # Create instance: axi_dma_0, and set properties
  set axi_dma_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_0 ]
  set_property -dict [ list \
   CONFIG.c_include_mm2s {0} \
   CONFIG.c_include_sg {0} \
   CONFIG.c_m_axi_s2mm_data_width {128} \
   CONFIG.c_s2mm_burst_size {256} \
   CONFIG.c_sg_include_stscntrl_strm {0} \
 ] $axi_dma_0

  # Create instance: axi_dma_connector_0, and set properties
  set block_name axi_dma_connector
  set block_cell_name axi_dma_connector_0
  if { [catch {set axi_dma_connector_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axi_dma_connector_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axi_gpio_0, and set properties
  set axi_gpio_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_0 ]
  set_property -dict [ list \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_ALL_OUTPUTS_2 {1} \
   CONFIG.C_GPIO2_WIDTH {16} \
   CONFIG.C_GPIO_WIDTH {16} \
   CONFIG.C_IS_DUAL {1} \
 ] $axi_gpio_0

  # Create instance: axi_smc, and set properties
  set axi_smc [ create_bd_cell -type ip -vlnv xilinx.com:ip:smartconnect:1.0 axi_smc ]
  set_property -dict [ list \
   CONFIG.NUM_SI {1} \
 ] $axi_smc

  # Create instance: axi_smc_1, and set properties
  set axi_smc_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:smartconnect:1.0 axi_smc_1 ]
  set_property -dict [ list \
   CONFIG.NUM_MI {7} \
   CONFIG.NUM_SI {1} \
 ] $axi_smc_1

  # Create instance: blk_mem_gen_0, and set properties
  set blk_mem_gen_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 blk_mem_gen_0 ]
  set_property -dict [ list \
   CONFIG.Assume_Synchronous_Clk {true} \
   CONFIG.EN_SAFETY_CKT {false} \
   CONFIG.Enable_B {Use_ENB_Pin} \
   CONFIG.Memory_Type {True_Dual_Port_RAM} \
   CONFIG.Operating_Mode_A {NO_CHANGE} \
   CONFIG.Operating_Mode_B {NO_CHANGE} \
   CONFIG.PRIM_type_to_Implement {URAM} \
   CONFIG.Port_B_Clock {100} \
   CONFIG.Port_B_Enable_Rate {100} \
   CONFIG.Port_B_Write_Rate {50} \
   CONFIG.Use_RSTB_Pin {true} \
 ] $blk_mem_gen_0

  # Create instance: hardware_trigger_blocks
  create_hier_cell_hardware_trigger_blocks [current_bd_instance .] hardware_trigger_blocks

  # Create instance: led_chika_0, and set properties
  set block_name led_chika
  set block_cell_name led_chika_0
  if { [catch {set led_chika_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $led_chika_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.CLOCK_FREQ_MHZ {125} \
 ] $led_chika_0

  # Create instance: led_chika_1, and set properties
  set block_name led_chika
  set block_cell_name led_chika_1
  if { [catch {set led_chika_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $led_chika_1 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.CLOCK_FREQ_MHZ {125} \
 ] $led_chika_1

  # Create instance: led_chika_2, and set properties
  set block_name led_chika
  set block_cell_name led_chika_2
  if { [catch {set led_chika_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $led_chika_2 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.CLOCK_FREQ_MHZ {200} \
 ] $led_chika_2

  # Create instance: lgain_adc_blocks
  create_hier_cell_lgain_adc_blocks [current_bd_instance .] lgain_adc_blocks

  # Create instance: mts_clk
  create_hier_cell_mts_clk [current_bd_instance .] mts_clk

  # Create instance: peripheral_ctrl_block
  create_hier_cell_peripheral_ctrl_block [current_bd_instance .] peripheral_ctrl_block

  # Create instance: pl_clk0_rst, and set properties
  set pl_clk0_rst [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 pl_clk0_rst ]

  # Create instance: pl_intr_concat, and set properties
  set pl_intr_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 pl_intr_concat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {6} \
 ] $pl_intr_concat

  # Create instance: pl_user_clk2_rst, and set properties
  set pl_user_clk2_rst [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 pl_user_clk2_rst ]

  # Create instance: pl_user_clk_rst, and set properties
  set pl_user_clk_rst [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 pl_user_clk_rst ]

  # Create instance: ps8_0_axi_periph, and set properties
  set ps8_0_axi_periph [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 ps8_0_axi_periph ]
  set_property -dict [ list \
   CONFIG.NUM_MI {4} \
 ] $ps8_0_axi_periph

  # Create instance: rfadc_block
  create_hier_cell_rfadc_block [current_bd_instance .] rfadc_block

  # Create instance: system_ila_0, and set properties
  set system_ila_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:system_ila:1.1 system_ila_0 ]
  set_property -dict [ list \
   CONFIG.ALL_PROBE_SAME_MU_CNT {2} \
   CONFIG.C_ADV_TRIGGER {true} \
   CONFIG.C_BRAM_CNT {10} \
   CONFIG.C_DATA_DEPTH {2048} \
   CONFIG.C_EN_STRG_QUAL {1} \
   CONFIG.C_INPUT_PIPE_STAGES {2} \
   CONFIG.C_MON_TYPE {MIX} \
   CONFIG.C_NUM_MONITOR_SLOTS {16} \
   CONFIG.C_NUM_OF_PROBES {4} \
   CONFIG.C_PROBE0_MU_CNT {2} \
   CONFIG.C_PROBE0_TYPE {0} \
   CONFIG.C_PROBE1_MU_CNT {2} \
   CONFIG.C_PROBE1_TYPE {0} \
   CONFIG.C_PROBE2_MU_CNT {2} \
   CONFIG.C_PROBE2_TYPE {0} \
   CONFIG.C_PROBE3_MU_CNT {2} \
   CONFIG.C_PROBE3_TYPE {0} \
   CONFIG.C_SLOT_0_APC_EN {0} \
   CONFIG.C_SLOT_0_AXI_DATA_SEL {1} \
   CONFIG.C_SLOT_0_AXI_TRIG_SEL {1} \
   CONFIG.C_SLOT_0_INTF_TYPE {xilinx.com:interface:axis_rtl:1.0} \
   CONFIG.C_SLOT_10_APC_EN {0} \
   CONFIG.C_SLOT_10_AXI_DATA_SEL {1} \
   CONFIG.C_SLOT_10_AXI_TRIG_SEL {1} \
   CONFIG.C_SLOT_10_INTF_TYPE {xilinx.com:interface:axis_rtl:1.0} \
   CONFIG.C_SLOT_11_APC_EN {0} \
   CONFIG.C_SLOT_11_AXI_DATA_SEL {1} \
   CONFIG.C_SLOT_11_AXI_TRIG_SEL {1} \
   CONFIG.C_SLOT_11_INTF_TYPE {xilinx.com:interface:axis_rtl:1.0} \
   CONFIG.C_SLOT_12_APC_EN {0} \
   CONFIG.C_SLOT_12_AXI_DATA_SEL {1} \
   CONFIG.C_SLOT_12_AXI_TRIG_SEL {1} \
   CONFIG.C_SLOT_12_INTF_TYPE {xilinx.com:interface:axis_rtl:1.0} \
   CONFIG.C_SLOT_13_APC_EN {0} \
   CONFIG.C_SLOT_13_AXI_DATA_SEL {1} \
   CONFIG.C_SLOT_13_AXI_TRIG_SEL {1} \
   CONFIG.C_SLOT_13_INTF_TYPE {xilinx.com:interface:axis_rtl:1.0} \
   CONFIG.C_SLOT_14_APC_EN {0} \
   CONFIG.C_SLOT_14_AXI_DATA_SEL {1} \
   CONFIG.C_SLOT_14_AXI_TRIG_SEL {1} \
   CONFIG.C_SLOT_14_INTF_TYPE {xilinx.com:interface:axis_rtl:1.0} \
   CONFIG.C_SLOT_15_APC_EN {0} \
   CONFIG.C_SLOT_15_AXI_DATA_SEL {1} \
   CONFIG.C_SLOT_15_AXI_TRIG_SEL {1} \
   CONFIG.C_SLOT_15_INTF_TYPE {xilinx.com:interface:axis_rtl:1.0} \
   CONFIG.C_SLOT_1_APC_EN {0} \
   CONFIG.C_SLOT_1_AXI_DATA_SEL {1} \
   CONFIG.C_SLOT_1_AXI_TRIG_SEL {1} \
   CONFIG.C_SLOT_1_INTF_TYPE {xilinx.com:interface:axis_rtl:1.0} \
   CONFIG.C_SLOT_2_APC_EN {0} \
   CONFIG.C_SLOT_2_AXI_DATA_SEL {1} \
   CONFIG.C_SLOT_2_AXI_TRIG_SEL {1} \
   CONFIG.C_SLOT_2_INTF_TYPE {xilinx.com:interface:axis_rtl:1.0} \
   CONFIG.C_SLOT_3_APC_EN {0} \
   CONFIG.C_SLOT_3_AXI_DATA_SEL {1} \
   CONFIG.C_SLOT_3_AXI_TRIG_SEL {1} \
   CONFIG.C_SLOT_3_INTF_TYPE {xilinx.com:interface:axis_rtl:1.0} \
   CONFIG.C_SLOT_4_APC_EN {0} \
   CONFIG.C_SLOT_4_AXI_DATA_SEL {1} \
   CONFIG.C_SLOT_4_AXI_TRIG_SEL {1} \
   CONFIG.C_SLOT_4_INTF_TYPE {xilinx.com:interface:axis_rtl:1.0} \
   CONFIG.C_SLOT_5_APC_EN {0} \
   CONFIG.C_SLOT_5_AXI_DATA_SEL {1} \
   CONFIG.C_SLOT_5_AXI_TRIG_SEL {1} \
   CONFIG.C_SLOT_5_INTF_TYPE {xilinx.com:interface:axis_rtl:1.0} \
   CONFIG.C_SLOT_6_APC_EN {0} \
   CONFIG.C_SLOT_6_AXI_DATA_SEL {1} \
   CONFIG.C_SLOT_6_AXI_TRIG_SEL {1} \
   CONFIG.C_SLOT_6_INTF_TYPE {xilinx.com:interface:axis_rtl:1.0} \
   CONFIG.C_SLOT_7_APC_EN {0} \
   CONFIG.C_SLOT_7_AXI_DATA_SEL {1} \
   CONFIG.C_SLOT_7_AXI_TRIG_SEL {1} \
   CONFIG.C_SLOT_7_INTF_TYPE {xilinx.com:interface:axis_rtl:1.0} \
   CONFIG.C_SLOT_8_APC_EN {0} \
   CONFIG.C_SLOT_8_AXI_DATA_SEL {1} \
   CONFIG.C_SLOT_8_AXI_TRIG_SEL {1} \
   CONFIG.C_SLOT_8_INTF_TYPE {xilinx.com:interface:axis_rtl:1.0} \
   CONFIG.C_SLOT_9_APC_EN {0} \
   CONFIG.C_SLOT_9_AXI_DATA_SEL {1} \
   CONFIG.C_SLOT_9_AXI_TRIG_SEL {1} \
   CONFIG.C_SLOT_9_INTF_TYPE {xilinx.com:interface:axis_rtl:1.0} \
 ] $system_ila_0

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {2} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: zynq_ultra_ps_e_0, and set properties
  set zynq_ultra_ps_e_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:zynq_ultra_ps_e:3.3 zynq_ultra_ps_e_0 ]
  set_property -dict [ list \
   CONFIG.CAN0_BOARD_INTERFACE {custom} \
   CONFIG.CAN1_BOARD_INTERFACE {custom} \
   CONFIG.CSU_BOARD_INTERFACE {custom} \
   CONFIG.DP_BOARD_INTERFACE {custom} \
   CONFIG.GEM0_BOARD_INTERFACE {custom} \
   CONFIG.GEM1_BOARD_INTERFACE {custom} \
   CONFIG.GEM2_BOARD_INTERFACE {custom} \
   CONFIG.GEM3_BOARD_INTERFACE {custom} \
   CONFIG.GPIO_BOARD_INTERFACE {custom} \
   CONFIG.IIC0_BOARD_INTERFACE {custom} \
   CONFIG.IIC1_BOARD_INTERFACE {custom} \
   CONFIG.NAND_BOARD_INTERFACE {custom} \
   CONFIG.PCIE_BOARD_INTERFACE {custom} \
   CONFIG.PJTAG_BOARD_INTERFACE {custom} \
   CONFIG.PMU_BOARD_INTERFACE {custom} \
   CONFIG.PSU_BANK_0_IO_STANDARD {LVCMOS18} \
   CONFIG.PSU_BANK_1_IO_STANDARD {LVCMOS33} \
   CONFIG.PSU_BANK_2_IO_STANDARD {LVCMOS18} \
   CONFIG.PSU_BANK_3_IO_STANDARD {LVCMOS33} \
   CONFIG.PSU_DDR_RAM_HIGHADDR {0xFFFFFFFF} \
   CONFIG.PSU_DDR_RAM_HIGHADDR_OFFSET {0x800000000} \
   CONFIG.PSU_DDR_RAM_LOWADDR_OFFSET {0x80000000} \
   CONFIG.PSU_DYNAMIC_DDR_CONFIG_EN {0} \
   CONFIG.PSU_IMPORT_BOARD_PRESET {} \
   CONFIG.PSU_MIO_0_DIRECTION {out} \
   CONFIG.PSU_MIO_0_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_0_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_0_POLARITY {Default} \
   CONFIG.PSU_MIO_0_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_0_SLEW {fast} \
   CONFIG.PSU_MIO_10_DIRECTION {inout} \
   CONFIG.PSU_MIO_10_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_10_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_10_POLARITY {Default} \
   CONFIG.PSU_MIO_10_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_10_SLEW {fast} \
   CONFIG.PSU_MIO_11_DIRECTION {inout} \
   CONFIG.PSU_MIO_11_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_11_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_11_POLARITY {Default} \
   CONFIG.PSU_MIO_11_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_11_SLEW {fast} \
   CONFIG.PSU_MIO_12_DIRECTION {out} \
   CONFIG.PSU_MIO_12_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_12_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_12_POLARITY {Default} \
   CONFIG.PSU_MIO_12_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_12_SLEW {fast} \
   CONFIG.PSU_MIO_13_DIRECTION {inout} \
   CONFIG.PSU_MIO_13_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_13_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_13_POLARITY {Default} \
   CONFIG.PSU_MIO_13_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_13_SLEW {fast} \
   CONFIG.PSU_MIO_14_DIRECTION {inout} \
   CONFIG.PSU_MIO_14_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_14_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_14_POLARITY {Default} \
   CONFIG.PSU_MIO_14_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_14_SLEW {fast} \
   CONFIG.PSU_MIO_15_DIRECTION {inout} \
   CONFIG.PSU_MIO_15_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_15_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_15_POLARITY {Default} \
   CONFIG.PSU_MIO_15_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_15_SLEW {fast} \
   CONFIG.PSU_MIO_16_DIRECTION {inout} \
   CONFIG.PSU_MIO_16_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_16_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_16_POLARITY {Default} \
   CONFIG.PSU_MIO_16_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_16_SLEW {fast} \
   CONFIG.PSU_MIO_17_DIRECTION {inout} \
   CONFIG.PSU_MIO_17_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_17_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_17_POLARITY {Default} \
   CONFIG.PSU_MIO_17_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_17_SLEW {fast} \
   CONFIG.PSU_MIO_18_DIRECTION {inout} \
   CONFIG.PSU_MIO_18_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_18_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_18_POLARITY {Default} \
   CONFIG.PSU_MIO_18_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_18_SLEW {fast} \
   CONFIG.PSU_MIO_19_DIRECTION {inout} \
   CONFIG.PSU_MIO_19_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_19_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_19_POLARITY {Default} \
   CONFIG.PSU_MIO_19_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_19_SLEW {fast} \
   CONFIG.PSU_MIO_1_DIRECTION {in} \
   CONFIG.PSU_MIO_1_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_1_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_1_POLARITY {Default} \
   CONFIG.PSU_MIO_1_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_1_SLEW {fast} \
   CONFIG.PSU_MIO_20_DIRECTION {inout} \
   CONFIG.PSU_MIO_20_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_20_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_20_POLARITY {Default} \
   CONFIG.PSU_MIO_20_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_20_SLEW {fast} \
   CONFIG.PSU_MIO_21_DIRECTION {inout} \
   CONFIG.PSU_MIO_21_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_21_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_21_POLARITY {Default} \
   CONFIG.PSU_MIO_21_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_21_SLEW {fast} \
   CONFIG.PSU_MIO_22_DIRECTION {out} \
   CONFIG.PSU_MIO_22_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_22_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_22_POLARITY {Default} \
   CONFIG.PSU_MIO_22_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_22_SLEW {fast} \
   CONFIG.PSU_MIO_23_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_23_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_23_POLARITY {Default} \
   CONFIG.PSU_MIO_23_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_23_SLEW {fast} \
   CONFIG.PSU_MIO_24_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_24_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_24_POLARITY {Default} \
   CONFIG.PSU_MIO_24_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_24_SLEW {fast} \
   CONFIG.PSU_MIO_25_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_25_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_25_POLARITY {Default} \
   CONFIG.PSU_MIO_25_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_25_SLEW {fast} \
   CONFIG.PSU_MIO_26_DIRECTION {inout} \
   CONFIG.PSU_MIO_26_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_26_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_26_POLARITY {Default} \
   CONFIG.PSU_MIO_26_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_26_SLEW {fast} \
   CONFIG.PSU_MIO_27_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_27_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_27_POLARITY {Default} \
   CONFIG.PSU_MIO_27_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_27_SLEW {fast} \
   CONFIG.PSU_MIO_28_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_28_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_28_POLARITY {Default} \
   CONFIG.PSU_MIO_28_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_28_SLEW {fast} \
   CONFIG.PSU_MIO_29_DIRECTION {inout} \
   CONFIG.PSU_MIO_29_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_29_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_29_POLARITY {Default} \
   CONFIG.PSU_MIO_29_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_29_SLEW {fast} \
   CONFIG.PSU_MIO_2_DIRECTION {inout} \
   CONFIG.PSU_MIO_2_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_2_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_2_POLARITY {Default} \
   CONFIG.PSU_MIO_2_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_2_SLEW {fast} \
   CONFIG.PSU_MIO_30_DIRECTION {inout} \
   CONFIG.PSU_MIO_30_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_30_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_30_POLARITY {Default} \
   CONFIG.PSU_MIO_30_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_30_SLEW {fast} \
   CONFIG.PSU_MIO_31_DIRECTION {inout} \
   CONFIG.PSU_MIO_31_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_31_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_31_POLARITY {Default} \
   CONFIG.PSU_MIO_31_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_31_SLEW {fast} \
   CONFIG.PSU_MIO_32_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_32_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_32_POLARITY {Default} \
   CONFIG.PSU_MIO_32_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_32_SLEW {fast} \
   CONFIG.PSU_MIO_33_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_33_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_33_POLARITY {Default} \
   CONFIG.PSU_MIO_33_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_33_SLEW {fast} \
   CONFIG.PSU_MIO_34_DIRECTION {in} \
   CONFIG.PSU_MIO_34_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_34_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_34_POLARITY {Default} \
   CONFIG.PSU_MIO_34_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_34_SLEW {fast} \
   CONFIG.PSU_MIO_35_DIRECTION {out} \
   CONFIG.PSU_MIO_35_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_35_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_35_POLARITY {Default} \
   CONFIG.PSU_MIO_35_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_35_SLEW {fast} \
   CONFIG.PSU_MIO_36_DIRECTION {inout} \
   CONFIG.PSU_MIO_36_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_36_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_36_POLARITY {Default} \
   CONFIG.PSU_MIO_36_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_36_SLEW {fast} \
   CONFIG.PSU_MIO_37_DIRECTION {inout} \
   CONFIG.PSU_MIO_37_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_37_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_37_POLARITY {Default} \
   CONFIG.PSU_MIO_37_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_37_SLEW {fast} \
   CONFIG.PSU_MIO_38_DIRECTION {out} \
   CONFIG.PSU_MIO_38_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_38_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_38_POLARITY {Default} \
   CONFIG.PSU_MIO_38_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_38_SLEW {fast} \
   CONFIG.PSU_MIO_39_DIRECTION {in} \
   CONFIG.PSU_MIO_39_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_39_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_39_POLARITY {Default} \
   CONFIG.PSU_MIO_39_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_39_SLEW {fast} \
   CONFIG.PSU_MIO_3_DIRECTION {inout} \
   CONFIG.PSU_MIO_3_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_3_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_3_POLARITY {Default} \
   CONFIG.PSU_MIO_3_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_3_SLEW {fast} \
   CONFIG.PSU_MIO_40_DIRECTION {inout} \
   CONFIG.PSU_MIO_40_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_40_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_40_POLARITY {Default} \
   CONFIG.PSU_MIO_40_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_40_SLEW {fast} \
   CONFIG.PSU_MIO_41_DIRECTION {inout} \
   CONFIG.PSU_MIO_41_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_41_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_41_POLARITY {Default} \
   CONFIG.PSU_MIO_41_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_41_SLEW {fast} \
   CONFIG.PSU_MIO_42_DIRECTION {inout} \
   CONFIG.PSU_MIO_42_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_42_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_42_POLARITY {Default} \
   CONFIG.PSU_MIO_42_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_42_SLEW {fast} \
   CONFIG.PSU_MIO_43_DIRECTION {inout} \
   CONFIG.PSU_MIO_43_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_43_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_43_POLARITY {Default} \
   CONFIG.PSU_MIO_43_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_43_SLEW {fast} \
   CONFIG.PSU_MIO_44_DIRECTION {inout} \
   CONFIG.PSU_MIO_44_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_44_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_44_POLARITY {Default} \
   CONFIG.PSU_MIO_44_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_44_SLEW {fast} \
   CONFIG.PSU_MIO_45_DIRECTION {in} \
   CONFIG.PSU_MIO_45_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_45_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_45_POLARITY {Default} \
   CONFIG.PSU_MIO_45_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_45_SLEW {fast} \
   CONFIG.PSU_MIO_46_DIRECTION {inout} \
   CONFIG.PSU_MIO_46_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_46_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_46_POLARITY {Default} \
   CONFIG.PSU_MIO_46_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_46_SLEW {fast} \
   CONFIG.PSU_MIO_47_DIRECTION {inout} \
   CONFIG.PSU_MIO_47_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_47_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_47_POLARITY {Default} \
   CONFIG.PSU_MIO_47_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_47_SLEW {fast} \
   CONFIG.PSU_MIO_48_DIRECTION {inout} \
   CONFIG.PSU_MIO_48_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_48_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_48_POLARITY {Default} \
   CONFIG.PSU_MIO_48_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_48_SLEW {fast} \
   CONFIG.PSU_MIO_49_DIRECTION {inout} \
   CONFIG.PSU_MIO_49_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_49_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_49_POLARITY {Default} \
   CONFIG.PSU_MIO_49_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_49_SLEW {fast} \
   CONFIG.PSU_MIO_4_DIRECTION {out} \
   CONFIG.PSU_MIO_4_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_4_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_4_POLARITY {Default} \
   CONFIG.PSU_MIO_4_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_4_SLEW {fast} \
   CONFIG.PSU_MIO_50_DIRECTION {inout} \
   CONFIG.PSU_MIO_50_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_50_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_50_POLARITY {Default} \
   CONFIG.PSU_MIO_50_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_50_SLEW {fast} \
   CONFIG.PSU_MIO_51_DIRECTION {out} \
   CONFIG.PSU_MIO_51_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_51_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_51_POLARITY {Default} \
   CONFIG.PSU_MIO_51_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_51_SLEW {fast} \
   CONFIG.PSU_MIO_52_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_52_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_52_POLARITY {Default} \
   CONFIG.PSU_MIO_52_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_52_SLEW {fast} \
   CONFIG.PSU_MIO_53_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_53_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_53_POLARITY {Default} \
   CONFIG.PSU_MIO_53_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_53_SLEW {fast} \
   CONFIG.PSU_MIO_54_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_54_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_54_POLARITY {Default} \
   CONFIG.PSU_MIO_54_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_54_SLEW {fast} \
   CONFIG.PSU_MIO_55_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_55_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_55_POLARITY {Default} \
   CONFIG.PSU_MIO_55_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_55_SLEW {fast} \
   CONFIG.PSU_MIO_56_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_56_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_56_POLARITY {Default} \
   CONFIG.PSU_MIO_56_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_56_SLEW {fast} \
   CONFIG.PSU_MIO_57_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_57_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_57_POLARITY {Default} \
   CONFIG.PSU_MIO_57_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_57_SLEW {fast} \
   CONFIG.PSU_MIO_58_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_58_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_58_POLARITY {Default} \
   CONFIG.PSU_MIO_58_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_58_SLEW {fast} \
   CONFIG.PSU_MIO_59_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_59_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_59_POLARITY {Default} \
   CONFIG.PSU_MIO_59_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_59_SLEW {fast} \
   CONFIG.PSU_MIO_5_DIRECTION {out} \
   CONFIG.PSU_MIO_5_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_5_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_5_POLARITY {Default} \
   CONFIG.PSU_MIO_5_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_5_SLEW {fast} \
   CONFIG.PSU_MIO_60_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_60_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_60_POLARITY {Default} \
   CONFIG.PSU_MIO_60_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_60_SLEW {fast} \
   CONFIG.PSU_MIO_61_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_61_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_61_POLARITY {Default} \
   CONFIG.PSU_MIO_61_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_61_SLEW {fast} \
   CONFIG.PSU_MIO_62_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_62_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_62_POLARITY {Default} \
   CONFIG.PSU_MIO_62_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_62_SLEW {fast} \
   CONFIG.PSU_MIO_63_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_63_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_63_POLARITY {Default} \
   CONFIG.PSU_MIO_63_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_63_SLEW {fast} \
   CONFIG.PSU_MIO_64_DIRECTION {out} \
   CONFIG.PSU_MIO_64_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_64_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_64_POLARITY {Default} \
   CONFIG.PSU_MIO_64_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_64_SLEW {fast} \
   CONFIG.PSU_MIO_65_DIRECTION {out} \
   CONFIG.PSU_MIO_65_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_65_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_65_POLARITY {Default} \
   CONFIG.PSU_MIO_65_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_65_SLEW {fast} \
   CONFIG.PSU_MIO_66_DIRECTION {out} \
   CONFIG.PSU_MIO_66_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_66_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_66_POLARITY {Default} \
   CONFIG.PSU_MIO_66_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_66_SLEW {fast} \
   CONFIG.PSU_MIO_67_DIRECTION {out} \
   CONFIG.PSU_MIO_67_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_67_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_67_POLARITY {Default} \
   CONFIG.PSU_MIO_67_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_67_SLEW {fast} \
   CONFIG.PSU_MIO_68_DIRECTION {out} \
   CONFIG.PSU_MIO_68_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_68_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_68_POLARITY {Default} \
   CONFIG.PSU_MIO_68_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_68_SLEW {fast} \
   CONFIG.PSU_MIO_69_DIRECTION {out} \
   CONFIG.PSU_MIO_69_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_69_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_69_POLARITY {Default} \
   CONFIG.PSU_MIO_69_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_69_SLEW {fast} \
   CONFIG.PSU_MIO_6_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_6_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_6_POLARITY {Default} \
   CONFIG.PSU_MIO_6_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_6_SLEW {fast} \
   CONFIG.PSU_MIO_70_DIRECTION {in} \
   CONFIG.PSU_MIO_70_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_70_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_70_POLARITY {Default} \
   CONFIG.PSU_MIO_70_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_70_SLEW {fast} \
   CONFIG.PSU_MIO_71_DIRECTION {in} \
   CONFIG.PSU_MIO_71_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_71_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_71_POLARITY {Default} \
   CONFIG.PSU_MIO_71_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_71_SLEW {fast} \
   CONFIG.PSU_MIO_72_DIRECTION {in} \
   CONFIG.PSU_MIO_72_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_72_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_72_POLARITY {Default} \
   CONFIG.PSU_MIO_72_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_72_SLEW {fast} \
   CONFIG.PSU_MIO_73_DIRECTION {in} \
   CONFIG.PSU_MIO_73_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_73_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_73_POLARITY {Default} \
   CONFIG.PSU_MIO_73_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_73_SLEW {fast} \
   CONFIG.PSU_MIO_74_DIRECTION {in} \
   CONFIG.PSU_MIO_74_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_74_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_74_POLARITY {Default} \
   CONFIG.PSU_MIO_74_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_74_SLEW {fast} \
   CONFIG.PSU_MIO_75_DIRECTION {in} \
   CONFIG.PSU_MIO_75_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_75_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_75_POLARITY {Default} \
   CONFIG.PSU_MIO_75_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_75_SLEW {fast} \
   CONFIG.PSU_MIO_76_DIRECTION {out} \
   CONFIG.PSU_MIO_76_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_76_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_76_POLARITY {Default} \
   CONFIG.PSU_MIO_76_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_76_SLEW {fast} \
   CONFIG.PSU_MIO_77_DIRECTION {inout} \
   CONFIG.PSU_MIO_77_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_77_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_77_POLARITY {Default} \
   CONFIG.PSU_MIO_77_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_77_SLEW {fast} \
   CONFIG.PSU_MIO_7_DIRECTION {out} \
   CONFIG.PSU_MIO_7_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_7_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_7_POLARITY {Default} \
   CONFIG.PSU_MIO_7_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_7_SLEW {fast} \
   CONFIG.PSU_MIO_8_DIRECTION {inout} \
   CONFIG.PSU_MIO_8_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_8_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_8_POLARITY {Default} \
   CONFIG.PSU_MIO_8_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_8_SLEW {fast} \
   CONFIG.PSU_MIO_9_DIRECTION {inout} \
   CONFIG.PSU_MIO_9_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_9_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_9_POLARITY {Default} \
   CONFIG.PSU_MIO_9_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_9_SLEW {fast} \
   CONFIG.PSU_MIO_TREE_PERIPHERALS {Quad SPI Flash#Quad SPI Flash###Quad SPI Flash#Quad SPI Flash#####################SPI 0###SPI 0#SPI 0#SPI 0###UART 0#UART 0###SD 0#SD 0#SD 0#SD 0#SD 0#SD 0#SD 0####################Gem 3#Gem 3#Gem 3#Gem 3#Gem 3#Gem 3#Gem 3#Gem 3#Gem 3#Gem 3#Gem 3#Gem 3#MDIO 3#MDIO 3} \
   CONFIG.PSU_MIO_TREE_SIGNALS {sclk_out#miso_mo1###mosi_mi0#n_ss_out#####################sclk_out###n_ss_out[0]#miso#mosi###rxd#txd###sdio0_clk_out#sdio0_cd_n#sdio0_cmd_out#sdio0_data_out[0]#sdio0_data_out[1]#sdio0_data_out[2]#sdio0_data_out[3]####################rgmii_tx_clk#rgmii_txd[0]#rgmii_txd[1]#rgmii_txd[2]#rgmii_txd[3]#rgmii_tx_ctl#rgmii_rx_clk#rgmii_rxd[0]#rgmii_rxd[1]#rgmii_rxd[2]#rgmii_rxd[3]#rgmii_rx_ctl#gem3_mdc#gem3_mdio_out} \
   CONFIG.PSU_PERIPHERAL_BOARD_PRESET {} \
   CONFIG.PSU_SD0_INTERNAL_BUS_WIDTH {4} \
   CONFIG.PSU_SD1_INTERNAL_BUS_WIDTH {4} \
   CONFIG.PSU_SMC_CYCLE_T0 {NA} \
   CONFIG.PSU_SMC_CYCLE_T1 {NA} \
   CONFIG.PSU_SMC_CYCLE_T2 {NA} \
   CONFIG.PSU_SMC_CYCLE_T3 {NA} \
   CONFIG.PSU_SMC_CYCLE_T4 {NA} \
   CONFIG.PSU_SMC_CYCLE_T5 {NA} \
   CONFIG.PSU_SMC_CYCLE_T6 {NA} \
   CONFIG.PSU_USB3__DUAL_CLOCK_ENABLE {0} \
   CONFIG.PSU_VALUE_SILVERSION {3} \
   CONFIG.PSU__ACPU0__POWER__ON {1} \
   CONFIG.PSU__ACPU1__POWER__ON {1} \
   CONFIG.PSU__ACPU2__POWER__ON {1} \
   CONFIG.PSU__ACPU3__POWER__ON {1} \
   CONFIG.PSU__ACTUAL__IP {1} \
   CONFIG.PSU__ACT_DDR_FREQ_MHZ {800.000000} \
   CONFIG.PSU__AFI0_COHERENCY {0} \
   CONFIG.PSU__AFI1_COHERENCY {0} \
   CONFIG.PSU__AUX_REF_CLK__FREQMHZ {33.333} \
   CONFIG.PSU__CAN0_LOOP_CAN1__ENABLE {0} \
   CONFIG.PSU__CAN0__GRP_CLK__ENABLE {0} \
   CONFIG.PSU__CAN0__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__CAN1__GRP_CLK__ENABLE {0} \
   CONFIG.PSU__CAN1__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__CRF_APB__ACPU_CTRL__ACT_FREQMHZ {1200.000000} \
   CONFIG.PSU__CRF_APB__ACPU_CTRL__DIVISOR0 {1} \
   CONFIG.PSU__CRF_APB__ACPU_CTRL__FREQMHZ {1200} \
   CONFIG.PSU__CRF_APB__ACPU_CTRL__SRCSEL {APLL} \
   CONFIG.PSU__CRF_APB__ACPU__FRAC_ENABLED {0} \
   CONFIG.PSU__CRF_APB__AFI0_REF_CTRL__ACT_FREQMHZ {667} \
   CONFIG.PSU__CRF_APB__AFI0_REF_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRF_APB__AFI0_REF_CTRL__FREQMHZ {667} \
   CONFIG.PSU__CRF_APB__AFI0_REF_CTRL__SRCSEL {DPLL} \
   CONFIG.PSU__CRF_APB__AFI0_REF__ENABLE {0} \
   CONFIG.PSU__CRF_APB__AFI1_REF_CTRL__ACT_FREQMHZ {667} \
   CONFIG.PSU__CRF_APB__AFI1_REF_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRF_APB__AFI1_REF_CTRL__FREQMHZ {667} \
   CONFIG.PSU__CRF_APB__AFI1_REF_CTRL__SRCSEL {DPLL} \
   CONFIG.PSU__CRF_APB__AFI1_REF__ENABLE {0} \
   CONFIG.PSU__CRF_APB__AFI2_REF_CTRL__ACT_FREQMHZ {667} \
   CONFIG.PSU__CRF_APB__AFI2_REF_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRF_APB__AFI2_REF_CTRL__FREQMHZ {667} \
   CONFIG.PSU__CRF_APB__AFI2_REF_CTRL__SRCSEL {DPLL} \
   CONFIG.PSU__CRF_APB__AFI2_REF__ENABLE {0} \
   CONFIG.PSU__CRF_APB__AFI3_REF_CTRL__ACT_FREQMHZ {667} \
   CONFIG.PSU__CRF_APB__AFI3_REF_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRF_APB__AFI3_REF_CTRL__FREQMHZ {667} \
   CONFIG.PSU__CRF_APB__AFI3_REF_CTRL__SRCSEL {DPLL} \
   CONFIG.PSU__CRF_APB__AFI3_REF__ENABLE {0} \
   CONFIG.PSU__CRF_APB__AFI4_REF_CTRL__ACT_FREQMHZ {667} \
   CONFIG.PSU__CRF_APB__AFI4_REF_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRF_APB__AFI4_REF_CTRL__FREQMHZ {667} \
   CONFIG.PSU__CRF_APB__AFI4_REF_CTRL__SRCSEL {DPLL} \
   CONFIG.PSU__CRF_APB__AFI4_REF__ENABLE {0} \
   CONFIG.PSU__CRF_APB__AFI5_REF_CTRL__ACT_FREQMHZ {667} \
   CONFIG.PSU__CRF_APB__AFI5_REF_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRF_APB__AFI5_REF_CTRL__FREQMHZ {667} \
   CONFIG.PSU__CRF_APB__AFI5_REF_CTRL__SRCSEL {DPLL} \
   CONFIG.PSU__CRF_APB__AFI5_REF__ENABLE {0} \
   CONFIG.PSU__CRF_APB__APLL_CTRL__DIV2 {1} \
   CONFIG.PSU__CRF_APB__APLL_CTRL__FBDIV {48} \
   CONFIG.PSU__CRF_APB__APLL_CTRL__FRACDATA {0.000000} \
   CONFIG.PSU__CRF_APB__APLL_CTRL__FRACFREQ {27.138} \
   CONFIG.PSU__CRF_APB__APLL_CTRL__SRCSEL {PSS_REF_CLK} \
   CONFIG.PSU__CRF_APB__APLL_FRAC_CFG__ENABLED {0} \
   CONFIG.PSU__CRF_APB__APLL_TO_LPD_CTRL__DIVISOR0 {3} \
   CONFIG.PSU__CRF_APB__APM_CTRL__ACT_FREQMHZ {1} \
   CONFIG.PSU__CRF_APB__APM_CTRL__DIVISOR0 {1} \
   CONFIG.PSU__CRF_APB__APM_CTRL__FREQMHZ {1} \
   CONFIG.PSU__CRF_APB__DBG_FPD_CTRL__ACT_FREQMHZ {250.000000} \
   CONFIG.PSU__CRF_APB__DBG_FPD_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRF_APB__DBG_FPD_CTRL__FREQMHZ {250} \
   CONFIG.PSU__CRF_APB__DBG_FPD_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRF_APB__DBG_TRACE_CTRL__ACT_FREQMHZ {250} \
   CONFIG.PSU__CRF_APB__DBG_TRACE_CTRL__DIVISOR0 {5} \
   CONFIG.PSU__CRF_APB__DBG_TRACE_CTRL__FREQMHZ {250} \
   CONFIG.PSU__CRF_APB__DBG_TRACE_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRF_APB__DBG_TSTMP_CTRL__ACT_FREQMHZ {250.000000} \
   CONFIG.PSU__CRF_APB__DBG_TSTMP_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRF_APB__DBG_TSTMP_CTRL__FREQMHZ {250} \
   CONFIG.PSU__CRF_APB__DBG_TSTMP_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRF_APB__DDR_CTRL__ACT_FREQMHZ {400.000000} \
   CONFIG.PSU__CRF_APB__DDR_CTRL__DIVISOR0 {3} \
   CONFIG.PSU__CRF_APB__DDR_CTRL__FREQMHZ {800} \
   CONFIG.PSU__CRF_APB__DDR_CTRL__SRCSEL {DPLL} \
   CONFIG.PSU__CRF_APB__DPDMA_REF_CTRL__ACT_FREQMHZ {600.000000} \
   CONFIG.PSU__CRF_APB__DPDMA_REF_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRF_APB__DPDMA_REF_CTRL__FREQMHZ {600} \
   CONFIG.PSU__CRF_APB__DPDMA_REF_CTRL__SRCSEL {DPLL} \
   CONFIG.PSU__CRF_APB__DPLL_CTRL__DIV2 {1} \
   CONFIG.PSU__CRF_APB__DPLL_CTRL__FBDIV {48} \
   CONFIG.PSU__CRF_APB__DPLL_CTRL__FRACDATA {0.000000} \
   CONFIG.PSU__CRF_APB__DPLL_CTRL__FRACFREQ {27.138} \
   CONFIG.PSU__CRF_APB__DPLL_CTRL__SRCSEL {PSS_REF_CLK} \
   CONFIG.PSU__CRF_APB__DPLL_FRAC_CFG__ENABLED {0} \
   CONFIG.PSU__CRF_APB__DPLL_TO_LPD_CTRL__DIVISOR0 {3} \
   CONFIG.PSU__CRF_APB__DP_AUDIO_REF_CTRL__ACT_FREQMHZ {25} \
   CONFIG.PSU__CRF_APB__DP_AUDIO_REF_CTRL__DIVISOR0 {63} \
   CONFIG.PSU__CRF_APB__DP_AUDIO_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRF_APB__DP_AUDIO_REF_CTRL__FREQMHZ {25} \
   CONFIG.PSU__CRF_APB__DP_AUDIO_REF_CTRL__SRCSEL {VPLL} \
   CONFIG.PSU__CRF_APB__DP_AUDIO__FRAC_ENABLED {0} \
   CONFIG.PSU__CRF_APB__DP_STC_REF_CTRL__ACT_FREQMHZ {27} \
   CONFIG.PSU__CRF_APB__DP_STC_REF_CTRL__DIVISOR0 {6} \
   CONFIG.PSU__CRF_APB__DP_STC_REF_CTRL__DIVISOR1 {10} \
   CONFIG.PSU__CRF_APB__DP_STC_REF_CTRL__FREQMHZ {27} \
   CONFIG.PSU__CRF_APB__DP_STC_REF_CTRL__SRCSEL {VPLL} \
   CONFIG.PSU__CRF_APB__DP_VIDEO_REF_CTRL__ACT_FREQMHZ {320} \
   CONFIG.PSU__CRF_APB__DP_VIDEO_REF_CTRL__DIVISOR0 {5} \
   CONFIG.PSU__CRF_APB__DP_VIDEO_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRF_APB__DP_VIDEO_REF_CTRL__FREQMHZ {300} \
   CONFIG.PSU__CRF_APB__DP_VIDEO_REF_CTRL__SRCSEL {DPLL} \
   CONFIG.PSU__CRF_APB__DP_VIDEO__FRAC_ENABLED {0} \
   CONFIG.PSU__CRF_APB__GDMA_REF_CTRL__ACT_FREQMHZ {600.000000} \
   CONFIG.PSU__CRF_APB__GDMA_REF_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRF_APB__GDMA_REF_CTRL__FREQMHZ {600} \
   CONFIG.PSU__CRF_APB__GDMA_REF_CTRL__SRCSEL {DPLL} \
   CONFIG.PSU__CRF_APB__GPU_REF_CTRL__ACT_FREQMHZ {0} \
   CONFIG.PSU__CRF_APB__GPU_REF_CTRL__DIVISOR0 {3} \
   CONFIG.PSU__CRF_APB__GPU_REF_CTRL__FREQMHZ {600} \
   CONFIG.PSU__CRF_APB__GPU_REF_CTRL__SRCSEL {DPLL} \
   CONFIG.PSU__CRF_APB__GTGREF0_REF_CTRL__ACT_FREQMHZ {-1} \
   CONFIG.PSU__CRF_APB__GTGREF0_REF_CTRL__DIVISOR0 {-1} \
   CONFIG.PSU__CRF_APB__GTGREF0_REF_CTRL__FREQMHZ {-1} \
   CONFIG.PSU__CRF_APB__GTGREF0_REF_CTRL__SRCSEL {NA} \
   CONFIG.PSU__CRF_APB__GTGREF0__ENABLE {NA} \
   CONFIG.PSU__CRF_APB__PCIE_REF_CTRL__ACT_FREQMHZ {250} \
   CONFIG.PSU__CRF_APB__PCIE_REF_CTRL__DIVISOR0 {6} \
   CONFIG.PSU__CRF_APB__PCIE_REF_CTRL__FREQMHZ {250} \
   CONFIG.PSU__CRF_APB__PCIE_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRF_APB__SATA_REF_CTRL__ACT_FREQMHZ {250} \
   CONFIG.PSU__CRF_APB__SATA_REF_CTRL__DIVISOR0 {5} \
   CONFIG.PSU__CRF_APB__SATA_REF_CTRL__FREQMHZ {250} \
   CONFIG.PSU__CRF_APB__SATA_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRF_APB__TOPSW_LSBUS_CTRL__ACT_FREQMHZ {100.000000} \
   CONFIG.PSU__CRF_APB__TOPSW_LSBUS_CTRL__DIVISOR0 {5} \
   CONFIG.PSU__CRF_APB__TOPSW_LSBUS_CTRL__FREQMHZ {100} \
   CONFIG.PSU__CRF_APB__TOPSW_LSBUS_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRF_APB__TOPSW_MAIN_CTRL__ACT_FREQMHZ {525.000000} \
   CONFIG.PSU__CRF_APB__TOPSW_MAIN_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRF_APB__TOPSW_MAIN_CTRL__FREQMHZ {533.333} \
   CONFIG.PSU__CRF_APB__TOPSW_MAIN_CTRL__SRCSEL {VPLL} \
   CONFIG.PSU__CRF_APB__VPLL_CTRL__DIV2 {1} \
   CONFIG.PSU__CRF_APB__VPLL_CTRL__FBDIV {42} \
   CONFIG.PSU__CRF_APB__VPLL_CTRL__FRACDATA {0.000000} \
   CONFIG.PSU__CRF_APB__VPLL_CTRL__FRACFREQ {27.138} \
   CONFIG.PSU__CRF_APB__VPLL_CTRL__SRCSEL {PSS_REF_CLK} \
   CONFIG.PSU__CRF_APB__VPLL_FRAC_CFG__ENABLED {0} \
   CONFIG.PSU__CRF_APB__VPLL_TO_LPD_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRL_APB__ADMA_REF_CTRL__ACT_FREQMHZ {500.000000} \
   CONFIG.PSU__CRL_APB__ADMA_REF_CTRL__DIVISOR0 {3} \
   CONFIG.PSU__CRL_APB__ADMA_REF_CTRL__FREQMHZ {500} \
   CONFIG.PSU__CRL_APB__ADMA_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__AFI6_REF_CTRL__ACT_FREQMHZ {500} \
   CONFIG.PSU__CRL_APB__AFI6_REF_CTRL__DIVISOR0 {3} \
   CONFIG.PSU__CRL_APB__AFI6_REF_CTRL__FREQMHZ {500} \
   CONFIG.PSU__CRL_APB__AFI6_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__AFI6__ENABLE {0} \
   CONFIG.PSU__CRL_APB__AMS_REF_CTRL__ACT_FREQMHZ {50.000000} \
   CONFIG.PSU__CRL_APB__AMS_REF_CTRL__DIVISOR0 {30} \
   CONFIG.PSU__CRL_APB__AMS_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__AMS_REF_CTRL__FREQMHZ {50} \
   CONFIG.PSU__CRL_APB__AMS_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__CAN0_REF_CTRL__ACT_FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__CAN0_REF_CTRL__DIVISOR0 {15} \
   CONFIG.PSU__CRL_APB__CAN0_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__CAN0_REF_CTRL__FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__CAN0_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__CAN1_REF_CTRL__ACT_FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__CAN1_REF_CTRL__DIVISOR0 {15} \
   CONFIG.PSU__CRL_APB__CAN1_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__CAN1_REF_CTRL__FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__CAN1_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__CPU_R5_CTRL__ACT_FREQMHZ {500.000000} \
   CONFIG.PSU__CRL_APB__CPU_R5_CTRL__DIVISOR0 {3} \
   CONFIG.PSU__CRL_APB__CPU_R5_CTRL__FREQMHZ {500} \
   CONFIG.PSU__CRL_APB__CPU_R5_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__CSU_PLL_CTRL__ACT_FREQMHZ {180} \
   CONFIG.PSU__CRL_APB__CSU_PLL_CTRL__DIVISOR0 {3} \
   CONFIG.PSU__CRL_APB__CSU_PLL_CTRL__FREQMHZ {180} \
   CONFIG.PSU__CRL_APB__CSU_PLL_CTRL__SRCSEL {SysOsc} \
   CONFIG.PSU__CRL_APB__DBG_LPD_CTRL__ACT_FREQMHZ {250.000000} \
   CONFIG.PSU__CRL_APB__DBG_LPD_CTRL__DIVISOR0 {6} \
   CONFIG.PSU__CRL_APB__DBG_LPD_CTRL__FREQMHZ {250} \
   CONFIG.PSU__CRL_APB__DBG_LPD_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__DEBUG_R5_ATCLK_CTRL__ACT_FREQMHZ {1000} \
   CONFIG.PSU__CRL_APB__DEBUG_R5_ATCLK_CTRL__DIVISOR0 {6} \
   CONFIG.PSU__CRL_APB__DEBUG_R5_ATCLK_CTRL__FREQMHZ {1000} \
   CONFIG.PSU__CRL_APB__DEBUG_R5_ATCLK_CTRL__SRCSEL {RPLL} \
   CONFIG.PSU__CRL_APB__DLL_REF_CTRL__ACT_FREQMHZ {1500.000000} \
   CONFIG.PSU__CRL_APB__DLL_REF_CTRL__FREQMHZ {1500} \
   CONFIG.PSU__CRL_APB__DLL_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__GEM0_REF_CTRL__ACT_FREQMHZ {125} \
   CONFIG.PSU__CRL_APB__GEM0_REF_CTRL__DIVISOR0 {12} \
   CONFIG.PSU__CRL_APB__GEM0_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__GEM0_REF_CTRL__FREQMHZ {125} \
   CONFIG.PSU__CRL_APB__GEM0_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__GEM1_REF_CTRL__ACT_FREQMHZ {125} \
   CONFIG.PSU__CRL_APB__GEM1_REF_CTRL__DIVISOR0 {12} \
   CONFIG.PSU__CRL_APB__GEM1_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__GEM1_REF_CTRL__FREQMHZ {125} \
   CONFIG.PSU__CRL_APB__GEM1_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__GEM2_REF_CTRL__ACT_FREQMHZ {125} \
   CONFIG.PSU__CRL_APB__GEM2_REF_CTRL__DIVISOR0 {12} \
   CONFIG.PSU__CRL_APB__GEM2_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__GEM2_REF_CTRL__FREQMHZ {125} \
   CONFIG.PSU__CRL_APB__GEM2_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__GEM3_REF_CTRL__ACT_FREQMHZ {125.000000} \
   CONFIG.PSU__CRL_APB__GEM3_REF_CTRL__DIVISOR0 {12} \
   CONFIG.PSU__CRL_APB__GEM3_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__GEM3_REF_CTRL__FREQMHZ {125} \
   CONFIG.PSU__CRL_APB__GEM3_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__GEM_TSU_REF_CTRL__ACT_FREQMHZ {250.000000} \
   CONFIG.PSU__CRL_APB__GEM_TSU_REF_CTRL__DIVISOR0 {6} \
   CONFIG.PSU__CRL_APB__GEM_TSU_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__GEM_TSU_REF_CTRL__FREQMHZ {250} \
   CONFIG.PSU__CRL_APB__GEM_TSU_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__I2C0_REF_CTRL__ACT_FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__I2C0_REF_CTRL__DIVISOR0 {15} \
   CONFIG.PSU__CRL_APB__I2C0_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__I2C0_REF_CTRL__FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__I2C0_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__I2C1_REF_CTRL__ACT_FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__I2C1_REF_CTRL__DIVISOR0 {15} \
   CONFIG.PSU__CRL_APB__I2C1_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__I2C1_REF_CTRL__FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__I2C1_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__IOPLL_CTRL__DIV2 {1} \
   CONFIG.PSU__CRL_APB__IOPLL_CTRL__FBDIV {60} \
   CONFIG.PSU__CRL_APB__IOPLL_CTRL__FRACDATA {0.000000} \
   CONFIG.PSU__CRL_APB__IOPLL_CTRL__FRACFREQ {27.138} \
   CONFIG.PSU__CRL_APB__IOPLL_CTRL__SRCSEL {PSS_REF_CLK} \
   CONFIG.PSU__CRL_APB__IOPLL_FRAC_CFG__ENABLED {0} \
   CONFIG.PSU__CRL_APB__IOPLL_TO_FPD_CTRL__DIVISOR0 {3} \
   CONFIG.PSU__CRL_APB__IOU_SWITCH_CTRL__ACT_FREQMHZ {250.000000} \
   CONFIG.PSU__CRL_APB__IOU_SWITCH_CTRL__DIVISOR0 {4} \
   CONFIG.PSU__CRL_APB__IOU_SWITCH_CTRL__FREQMHZ {267} \
   CONFIG.PSU__CRL_APB__IOU_SWITCH_CTRL__SRCSEL {RPLL} \
   CONFIG.PSU__CRL_APB__LPD_LSBUS_CTRL__ACT_FREQMHZ {100.000000} \
   CONFIG.PSU__CRL_APB__LPD_LSBUS_CTRL__DIVISOR0 {15} \
   CONFIG.PSU__CRL_APB__LPD_LSBUS_CTRL__FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__LPD_LSBUS_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__LPD_SWITCH_CTRL__ACT_FREQMHZ {500.000000} \
   CONFIG.PSU__CRL_APB__LPD_SWITCH_CTRL__DIVISOR0 {3} \
   CONFIG.PSU__CRL_APB__LPD_SWITCH_CTRL__FREQMHZ {500} \
   CONFIG.PSU__CRL_APB__LPD_SWITCH_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__NAND_REF_CTRL__ACT_FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__NAND_REF_CTRL__DIVISOR0 {15} \
   CONFIG.PSU__CRL_APB__NAND_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__NAND_REF_CTRL__FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__NAND_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__OCM_MAIN_CTRL__ACT_FREQMHZ {500} \
   CONFIG.PSU__CRL_APB__OCM_MAIN_CTRL__DIVISOR0 {3} \
   CONFIG.PSU__CRL_APB__OCM_MAIN_CTRL__FREQMHZ {500} \
   CONFIG.PSU__CRL_APB__OCM_MAIN_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__PCAP_CTRL__ACT_FREQMHZ {187.500000} \
   CONFIG.PSU__CRL_APB__PCAP_CTRL__DIVISOR0 {8} \
   CONFIG.PSU__CRL_APB__PCAP_CTRL__FREQMHZ {200} \
   CONFIG.PSU__CRL_APB__PCAP_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__PL0_REF_CTRL__ACT_FREQMHZ {125.000000} \
   CONFIG.PSU__CRL_APB__PL0_REF_CTRL__DIVISOR0 {8} \
   CONFIG.PSU__CRL_APB__PL0_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__PL0_REF_CTRL__FREQMHZ {125} \
   CONFIG.PSU__CRL_APB__PL0_REF_CTRL__SRCSEL {RPLL} \
   CONFIG.PSU__CRL_APB__PL1_REF_CTRL__ACT_FREQMHZ {10.000000} \
   CONFIG.PSU__CRL_APB__PL1_REF_CTRL__DIVISOR0 {50} \
   CONFIG.PSU__CRL_APB__PL1_REF_CTRL__DIVISOR1 {2} \
   CONFIG.PSU__CRL_APB__PL1_REF_CTRL__FREQMHZ {10} \
   CONFIG.PSU__CRL_APB__PL1_REF_CTRL__SRCSEL {RPLL} \
   CONFIG.PSU__CRL_APB__PL2_REF_CTRL__ACT_FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__PL2_REF_CTRL__DIVISOR0 {4} \
   CONFIG.PSU__CRL_APB__PL2_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__PL2_REF_CTRL__FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__PL2_REF_CTRL__SRCSEL {RPLL} \
   CONFIG.PSU__CRL_APB__PL3_REF_CTRL__ACT_FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__PL3_REF_CTRL__DIVISOR0 {4} \
   CONFIG.PSU__CRL_APB__PL3_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__PL3_REF_CTRL__FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__PL3_REF_CTRL__SRCSEL {RPLL} \
   CONFIG.PSU__CRL_APB__QSPI_REF_CTRL__ACT_FREQMHZ {300.000000} \
   CONFIG.PSU__CRL_APB__QSPI_REF_CTRL__DIVISOR0 {5} \
   CONFIG.PSU__CRL_APB__QSPI_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__QSPI_REF_CTRL__FREQMHZ {300} \
   CONFIG.PSU__CRL_APB__QSPI_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__RPLL_CTRL__DIV2 {1} \
   CONFIG.PSU__CRL_APB__RPLL_CTRL__FBDIV {40} \
   CONFIG.PSU__CRL_APB__RPLL_CTRL__FRACDATA {0.000000} \
   CONFIG.PSU__CRL_APB__RPLL_CTRL__FRACFREQ {27.138} \
   CONFIG.PSU__CRL_APB__RPLL_CTRL__SRCSEL {PSS_REF_CLK} \
   CONFIG.PSU__CRL_APB__RPLL_FRAC_CFG__ENABLED {0} \
   CONFIG.PSU__CRL_APB__RPLL_TO_FPD_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRL_APB__SDIO0_REF_CTRL__ACT_FREQMHZ {200.000000} \
   CONFIG.PSU__CRL_APB__SDIO0_REF_CTRL__DIVISOR0 {5} \
   CONFIG.PSU__CRL_APB__SDIO0_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__SDIO0_REF_CTRL__FREQMHZ {200} \
   CONFIG.PSU__CRL_APB__SDIO0_REF_CTRL__SRCSEL {RPLL} \
   CONFIG.PSU__CRL_APB__SDIO1_REF_CTRL__ACT_FREQMHZ {200} \
   CONFIG.PSU__CRL_APB__SDIO1_REF_CTRL__DIVISOR0 {7} \
   CONFIG.PSU__CRL_APB__SDIO1_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__SDIO1_REF_CTRL__FREQMHZ {200} \
   CONFIG.PSU__CRL_APB__SDIO1_REF_CTRL__SRCSEL {RPLL} \
   CONFIG.PSU__CRL_APB__SPI0_REF_CTRL__ACT_FREQMHZ {200.000000} \
   CONFIG.PSU__CRL_APB__SPI0_REF_CTRL__DIVISOR0 {5} \
   CONFIG.PSU__CRL_APB__SPI0_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__SPI0_REF_CTRL__FREQMHZ {200} \
   CONFIG.PSU__CRL_APB__SPI0_REF_CTRL__SRCSEL {RPLL} \
   CONFIG.PSU__CRL_APB__SPI1_REF_CTRL__ACT_FREQMHZ {214} \
   CONFIG.PSU__CRL_APB__SPI1_REF_CTRL__DIVISOR0 {7} \
   CONFIG.PSU__CRL_APB__SPI1_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__SPI1_REF_CTRL__FREQMHZ {200} \
   CONFIG.PSU__CRL_APB__SPI1_REF_CTRL__SRCSEL {RPLL} \
   CONFIG.PSU__CRL_APB__TIMESTAMP_REF_CTRL__ACT_FREQMHZ {50.000000} \
   CONFIG.PSU__CRL_APB__TIMESTAMP_REF_CTRL__DIVISOR0 {1} \
   CONFIG.PSU__CRL_APB__TIMESTAMP_REF_CTRL__FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__TIMESTAMP_REF_CTRL__SRCSEL {PSS_REF_CLK} \
   CONFIG.PSU__CRL_APB__UART0_REF_CTRL__ACT_FREQMHZ {100.000000} \
   CONFIG.PSU__CRL_APB__UART0_REF_CTRL__DIVISOR0 {15} \
   CONFIG.PSU__CRL_APB__UART0_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__UART0_REF_CTRL__FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__UART0_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__UART1_REF_CTRL__ACT_FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__UART1_REF_CTRL__DIVISOR0 {15} \
   CONFIG.PSU__CRL_APB__UART1_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__UART1_REF_CTRL__FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__UART1_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__USB0_BUS_REF_CTRL__ACT_FREQMHZ {250} \
   CONFIG.PSU__CRL_APB__USB0_BUS_REF_CTRL__DIVISOR0 {6} \
   CONFIG.PSU__CRL_APB__USB0_BUS_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__USB0_BUS_REF_CTRL__FREQMHZ {250} \
   CONFIG.PSU__CRL_APB__USB0_BUS_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__USB1_BUS_REF_CTRL__ACT_FREQMHZ {250} \
   CONFIG.PSU__CRL_APB__USB1_BUS_REF_CTRL__DIVISOR0 {6} \
   CONFIG.PSU__CRL_APB__USB1_BUS_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__USB1_BUS_REF_CTRL__FREQMHZ {250} \
   CONFIG.PSU__CRL_APB__USB1_BUS_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__USB3_DUAL_REF_CTRL__ACT_FREQMHZ {20} \
   CONFIG.PSU__CRL_APB__USB3_DUAL_REF_CTRL__DIVISOR0 {5} \
   CONFIG.PSU__CRL_APB__USB3_DUAL_REF_CTRL__DIVISOR1 {15} \
   CONFIG.PSU__CRL_APB__USB3_DUAL_REF_CTRL__FREQMHZ {20} \
   CONFIG.PSU__CRL_APB__USB3_DUAL_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__USB3__ENABLE {0} \
   CONFIG.PSU__CSUPMU__PERIPHERAL__VALID {0} \
   CONFIG.PSU__CSU_COHERENCY {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_0__ENABLE {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_0__ERASE_BBRAM {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_10__ENABLE {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_10__ERASE_BBRAM {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_11__ENABLE {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_11__ERASE_BBRAM {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_12__ENABLE {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_12__ERASE_BBRAM {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_1__ENABLE {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_1__ERASE_BBRAM {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_2__ENABLE {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_2__ERASE_BBRAM {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_3__ENABLE {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_3__ERASE_BBRAM {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_4__ENABLE {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_4__ERASE_BBRAM {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_5__ENABLE {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_5__ERASE_BBRAM {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_6__ENABLE {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_6__ERASE_BBRAM {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_7__ENABLE {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_7__ERASE_BBRAM {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_8__ENABLE {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_8__ERASE_BBRAM {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_9__ENABLE {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_9__ERASE_BBRAM {0} \
   CONFIG.PSU__CSU__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__DDRC__ADDR_MIRROR {0} \
   CONFIG.PSU__DDRC__AL {0} \
   CONFIG.PSU__DDRC__BANK_ADDR_COUNT {2} \
   CONFIG.PSU__DDRC__BG_ADDR_COUNT {1} \
   CONFIG.PSU__DDRC__BRC_MAPPING {ROW_BANK_COL} \
   CONFIG.PSU__DDRC__BUS_WIDTH {64 Bit} \
   CONFIG.PSU__DDRC__CL {12} \
   CONFIG.PSU__DDRC__CLOCK_STOP_EN {0} \
   CONFIG.PSU__DDRC__COL_ADDR_COUNT {10} \
   CONFIG.PSU__DDRC__COMPONENTS {Components} \
   CONFIG.PSU__DDRC__CWL {11} \
   CONFIG.PSU__DDRC__DDR3L_T_REF_RANGE {NA} \
   CONFIG.PSU__DDRC__DDR3_T_REF_RANGE {NA} \
   CONFIG.PSU__DDRC__DDR4_ADDR_MAPPING {1} \
   CONFIG.PSU__DDRC__DDR4_CAL_MODE_ENABLE {0} \
   CONFIG.PSU__DDRC__DDR4_CRC_CONTROL {0} \
   CONFIG.PSU__DDRC__DDR4_MAXPWR_SAVING_EN {0} \
   CONFIG.PSU__DDRC__DDR4_T_REF_MODE {0} \
   CONFIG.PSU__DDRC__DDR4_T_REF_RANGE {Normal (0-85)} \
   CONFIG.PSU__DDRC__DEEP_PWR_DOWN_EN {0} \
   CONFIG.PSU__DDRC__DEVICE_CAPACITY {8192 MBits} \
   CONFIG.PSU__DDRC__DIMM_ADDR_MIRROR {0} \
   CONFIG.PSU__DDRC__DM_DBI {DM_NO_DBI} \
   CONFIG.PSU__DDRC__DQMAP_0_3 {0} \
   CONFIG.PSU__DDRC__DQMAP_12_15 {0} \
   CONFIG.PSU__DDRC__DQMAP_16_19 {0} \
   CONFIG.PSU__DDRC__DQMAP_20_23 {0} \
   CONFIG.PSU__DDRC__DQMAP_24_27 {0} \
   CONFIG.PSU__DDRC__DQMAP_28_31 {0} \
   CONFIG.PSU__DDRC__DQMAP_32_35 {0} \
   CONFIG.PSU__DDRC__DQMAP_36_39 {0} \
   CONFIG.PSU__DDRC__DQMAP_40_43 {0} \
   CONFIG.PSU__DDRC__DQMAP_44_47 {0} \
   CONFIG.PSU__DDRC__DQMAP_48_51 {0} \
   CONFIG.PSU__DDRC__DQMAP_4_7 {0} \
   CONFIG.PSU__DDRC__DQMAP_52_55 {0} \
   CONFIG.PSU__DDRC__DQMAP_56_59 {0} \
   CONFIG.PSU__DDRC__DQMAP_60_63 {0} \
   CONFIG.PSU__DDRC__DQMAP_64_67 {0} \
   CONFIG.PSU__DDRC__DQMAP_68_71 {0} \
   CONFIG.PSU__DDRC__DQMAP_8_11 {0} \
   CONFIG.PSU__DDRC__DRAM_WIDTH {16 Bits} \
   CONFIG.PSU__DDRC__ECC {Disabled} \
   CONFIG.PSU__DDRC__ECC_SCRUB {0} \
   CONFIG.PSU__DDRC__ENABLE {1} \
   CONFIG.PSU__DDRC__ENABLE_2T_TIMING {0} \
   CONFIG.PSU__DDRC__ENABLE_DP_SWITCH {0} \
   CONFIG.PSU__DDRC__ENABLE_LP4_HAS_ECC_COMP {0} \
   CONFIG.PSU__DDRC__ENABLE_LP4_SLOWBOOT {0} \
   CONFIG.PSU__DDRC__EN_2ND_CLK {0} \
   CONFIG.PSU__DDRC__FGRM {1X} \
   CONFIG.PSU__DDRC__FREQ_MHZ {1} \
   CONFIG.PSU__DDRC__LPDDR3_DUALRANK_SDP {0} \
   CONFIG.PSU__DDRC__LPDDR3_T_REF_RANGE {NA} \
   CONFIG.PSU__DDRC__LPDDR4_T_REF_RANGE {NA} \
   CONFIG.PSU__DDRC__LP_ASR {manual normal} \
   CONFIG.PSU__DDRC__MEMORY_TYPE {DDR 4} \
   CONFIG.PSU__DDRC__PARITY_ENABLE {0} \
   CONFIG.PSU__DDRC__PER_BANK_REFRESH {0} \
   CONFIG.PSU__DDRC__PHY_DBI_MODE {0} \
   CONFIG.PSU__DDRC__PLL_BYPASS {0} \
   CONFIG.PSU__DDRC__PWR_DOWN_EN {0} \
   CONFIG.PSU__DDRC__RANK_ADDR_COUNT {0} \
   CONFIG.PSU__DDRC__RD_DQS_CENTER {0} \
   CONFIG.PSU__DDRC__ROW_ADDR_COUNT {16} \
   CONFIG.PSU__DDRC__SB_TARGET {12-12-12} \
   CONFIG.PSU__DDRC__SELF_REF_ABORT {0} \
   CONFIG.PSU__DDRC__SPEED_BIN {DDR4_1600L} \
   CONFIG.PSU__DDRC__STATIC_RD_MODE {0} \
   CONFIG.PSU__DDRC__TRAIN_DATA_EYE {1} \
   CONFIG.PSU__DDRC__TRAIN_READ_GATE {1} \
   CONFIG.PSU__DDRC__TRAIN_WRITE_LEVEL {1} \
   CONFIG.PSU__DDRC__T_FAW {35} \
   CONFIG.PSU__DDRC__T_RAS_MIN {35} \
   CONFIG.PSU__DDRC__T_RC {50} \
   CONFIG.PSU__DDRC__T_RCD {12} \
   CONFIG.PSU__DDRC__T_RP {12} \
   CONFIG.PSU__DDRC__VENDOR_PART {OTHERS} \
   CONFIG.PSU__DDRC__VIDEO_BUFFER_SIZE {0} \
   CONFIG.PSU__DDRC__VREF {1} \
   CONFIG.PSU__DDR_HIGH_ADDRESS_GUI_ENABLE {1} \
   CONFIG.PSU__DDR_QOS_ENABLE {0} \
   CONFIG.PSU__DDR_QOS_FIX_HP0_RDQOS {} \
   CONFIG.PSU__DDR_QOS_FIX_HP0_WRQOS {} \
   CONFIG.PSU__DDR_QOS_FIX_HP1_RDQOS {} \
   CONFIG.PSU__DDR_QOS_FIX_HP1_WRQOS {} \
   CONFIG.PSU__DDR_QOS_FIX_HP2_RDQOS {} \
   CONFIG.PSU__DDR_QOS_FIX_HP2_WRQOS {} \
   CONFIG.PSU__DDR_QOS_FIX_HP3_RDQOS {} \
   CONFIG.PSU__DDR_QOS_FIX_HP3_WRQOS {} \
   CONFIG.PSU__DDR_QOS_HP0_RDQOS {} \
   CONFIG.PSU__DDR_QOS_HP0_WRQOS {} \
   CONFIG.PSU__DDR_QOS_HP1_RDQOS {} \
   CONFIG.PSU__DDR_QOS_HP1_WRQOS {} \
   CONFIG.PSU__DDR_QOS_HP2_RDQOS {} \
   CONFIG.PSU__DDR_QOS_HP2_WRQOS {} \
   CONFIG.PSU__DDR_QOS_HP3_RDQOS {} \
   CONFIG.PSU__DDR_QOS_HP3_WRQOS {} \
   CONFIG.PSU__DDR_QOS_RD_HPR_THRSHLD {} \
   CONFIG.PSU__DDR_QOS_RD_LPR_THRSHLD {} \
   CONFIG.PSU__DDR_QOS_WR_THRSHLD {} \
   CONFIG.PSU__DDR_SW_REFRESH_ENABLED {1} \
   CONFIG.PSU__DDR__INTERFACE__FREQMHZ {400.000} \
   CONFIG.PSU__DEVICE_TYPE {RFSOC} \
   CONFIG.PSU__DISPLAYPORT__LANE0__ENABLE {0} \
   CONFIG.PSU__DISPLAYPORT__LANE1__ENABLE {0} \
   CONFIG.PSU__DISPLAYPORT__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__DLL__ISUSED {1} \
   CONFIG.PSU__DPAUX__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__ENABLE__DDR__REFRESH__SIGNALS {0} \
   CONFIG.PSU__ENET0__FIFO__ENABLE {0} \
   CONFIG.PSU__ENET0__GRP_MDIO__ENABLE {0} \
   CONFIG.PSU__ENET0__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__ENET0__PTP__ENABLE {0} \
   CONFIG.PSU__ENET0__TSU__ENABLE {0} \
   CONFIG.PSU__ENET1__FIFO__ENABLE {0} \
   CONFIG.PSU__ENET1__GRP_MDIO__ENABLE {0} \
   CONFIG.PSU__ENET1__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__ENET1__PTP__ENABLE {0} \
   CONFIG.PSU__ENET1__TSU__ENABLE {0} \
   CONFIG.PSU__ENET2__FIFO__ENABLE {0} \
   CONFIG.PSU__ENET2__GRP_MDIO__ENABLE {0} \
   CONFIG.PSU__ENET2__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__ENET2__PTP__ENABLE {0} \
   CONFIG.PSU__ENET2__TSU__ENABLE {0} \
   CONFIG.PSU__ENET3__FIFO__ENABLE {0} \
   CONFIG.PSU__ENET3__GRP_MDIO__ENABLE {1} \
   CONFIG.PSU__ENET3__GRP_MDIO__IO {MIO 76 .. 77} \
   CONFIG.PSU__ENET3__PERIPHERAL__ENABLE {1} \
   CONFIG.PSU__ENET3__PERIPHERAL__IO {MIO 64 .. 75} \
   CONFIG.PSU__ENET3__PTP__ENABLE {0} \
   CONFIG.PSU__ENET3__TSU__ENABLE {0} \
   CONFIG.PSU__EN_AXI_STATUS_PORTS {0} \
   CONFIG.PSU__EN_EMIO_TRACE {0} \
   CONFIG.PSU__EP__IP {0} \
   CONFIG.PSU__EXPAND__CORESIGHT {0} \
   CONFIG.PSU__EXPAND__FPD_SLAVES {0} \
   CONFIG.PSU__EXPAND__GIC {0} \
   CONFIG.PSU__EXPAND__LOWER_LPS_SLAVES {0} \
   CONFIG.PSU__EXPAND__UPPER_LPS_SLAVES {0} \
   CONFIG.PSU__FPDMASTERS_COHERENCY {0} \
   CONFIG.PSU__FPD_SLCR__WDT1__ACT_FREQMHZ {100} \
   CONFIG.PSU__FPD_SLCR__WDT1__FREQMHZ {100} \
   CONFIG.PSU__FPD_SLCR__WDT_CLK_SEL__SELECT {APB} \
   CONFIG.PSU__FPGA_PL0_ENABLE {1} \
   CONFIG.PSU__FPGA_PL1_ENABLE {1} \
   CONFIG.PSU__FPGA_PL2_ENABLE {0} \
   CONFIG.PSU__FPGA_PL3_ENABLE {0} \
   CONFIG.PSU__FP__POWER__ON {1} \
   CONFIG.PSU__FTM__CTI_IN_0 {0} \
   CONFIG.PSU__FTM__CTI_IN_1 {0} \
   CONFIG.PSU__FTM__CTI_IN_2 {0} \
   CONFIG.PSU__FTM__CTI_IN_3 {0} \
   CONFIG.PSU__FTM__CTI_OUT_0 {0} \
   CONFIG.PSU__FTM__CTI_OUT_1 {0} \
   CONFIG.PSU__FTM__CTI_OUT_2 {0} \
   CONFIG.PSU__FTM__CTI_OUT_3 {0} \
   CONFIG.PSU__FTM__GPI {0} \
   CONFIG.PSU__FTM__GPO {0} \
   CONFIG.PSU__GEM0_COHERENCY {0} \
   CONFIG.PSU__GEM0_ROUTE_THROUGH_FPD {0} \
   CONFIG.PSU__GEM1_COHERENCY {0} \
   CONFIG.PSU__GEM1_ROUTE_THROUGH_FPD {0} \
   CONFIG.PSU__GEM2_COHERENCY {0} \
   CONFIG.PSU__GEM2_ROUTE_THROUGH_FPD {0} \
   CONFIG.PSU__GEM3_COHERENCY {0} \
   CONFIG.PSU__GEM3_ROUTE_THROUGH_FPD {0} \
   CONFIG.PSU__GEM__TSU__ENABLE {0} \
   CONFIG.PSU__GEN_IPI_0__MASTER {APU} \
   CONFIG.PSU__GEN_IPI_10__MASTER {NONE} \
   CONFIG.PSU__GEN_IPI_1__MASTER {RPU0} \
   CONFIG.PSU__GEN_IPI_2__MASTER {RPU1} \
   CONFIG.PSU__GEN_IPI_3__MASTER {PMU} \
   CONFIG.PSU__GEN_IPI_4__MASTER {PMU} \
   CONFIG.PSU__GEN_IPI_5__MASTER {PMU} \
   CONFIG.PSU__GEN_IPI_6__MASTER {PMU} \
   CONFIG.PSU__GEN_IPI_7__MASTER {NONE} \
   CONFIG.PSU__GEN_IPI_8__MASTER {NONE} \
   CONFIG.PSU__GEN_IPI_9__MASTER {NONE} \
   CONFIG.PSU__GPIO0_MIO__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__GPIO1_MIO__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__GPIO2_MIO__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__GPIO_EMIO_WIDTH {1} \
   CONFIG.PSU__GPIO_EMIO__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__GPIO_EMIO__WIDTH {[94:0]} \
   CONFIG.PSU__GPU_PP0__POWER__ON {0} \
   CONFIG.PSU__GPU_PP1__POWER__ON {0} \
   CONFIG.PSU__GT_REF_CLK__FREQMHZ {33.333} \
   CONFIG.PSU__GT__PRE_EMPH_LVL_4 {} \
   CONFIG.PSU__GT__VLT_SWNG_LVL_4 {} \
   CONFIG.PSU__HIGH_ADDRESS__ENABLE {1} \
   CONFIG.PSU__HPM0_FPD__NUM_READ_THREADS {4} \
   CONFIG.PSU__HPM0_FPD__NUM_WRITE_THREADS {4} \
   CONFIG.PSU__HPM0_LPD__NUM_READ_THREADS {4} \
   CONFIG.PSU__HPM0_LPD__NUM_WRITE_THREADS {4} \
   CONFIG.PSU__HPM1_FPD__NUM_READ_THREADS {4} \
   CONFIG.PSU__HPM1_FPD__NUM_WRITE_THREADS {4} \
   CONFIG.PSU__I2C0_LOOP_I2C1__ENABLE {0} \
   CONFIG.PSU__I2C0__GRP_INT__ENABLE {0} \
   CONFIG.PSU__I2C0__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__I2C1__GRP_INT__ENABLE {0} \
   CONFIG.PSU__I2C1__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__IOU_SLCR__IOU_TTC_APB_CLK__TTC0_SEL {APB} \
   CONFIG.PSU__IOU_SLCR__IOU_TTC_APB_CLK__TTC1_SEL {APB} \
   CONFIG.PSU__IOU_SLCR__IOU_TTC_APB_CLK__TTC2_SEL {APB} \
   CONFIG.PSU__IOU_SLCR__IOU_TTC_APB_CLK__TTC3_SEL {APB} \
   CONFIG.PSU__IOU_SLCR__TTC0__ACT_FREQMHZ {100.000000} \
   CONFIG.PSU__IOU_SLCR__TTC0__FREQMHZ {100.000000} \
   CONFIG.PSU__IOU_SLCR__TTC1__ACT_FREQMHZ {100.000000} \
   CONFIG.PSU__IOU_SLCR__TTC1__FREQMHZ {100.000000} \
   CONFIG.PSU__IOU_SLCR__TTC2__ACT_FREQMHZ {100.000000} \
   CONFIG.PSU__IOU_SLCR__TTC2__FREQMHZ {100.000000} \
   CONFIG.PSU__IOU_SLCR__TTC3__ACT_FREQMHZ {100.000000} \
   CONFIG.PSU__IOU_SLCR__TTC3__FREQMHZ {100.000000} \
   CONFIG.PSU__IOU_SLCR__WDT0__ACT_FREQMHZ {100} \
   CONFIG.PSU__IOU_SLCR__WDT0__FREQMHZ {100} \
   CONFIG.PSU__IOU_SLCR__WDT_CLK_SEL__SELECT {APB} \
   CONFIG.PSU__IRQ_P2F_ADMA_CHAN__INT {0} \
   CONFIG.PSU__IRQ_P2F_AIB_AXI__INT {0} \
   CONFIG.PSU__IRQ_P2F_AMS__INT {0} \
   CONFIG.PSU__IRQ_P2F_APM_FPD__INT {0} \
   CONFIG.PSU__IRQ_P2F_APU_COMM__INT {0} \
   CONFIG.PSU__IRQ_P2F_APU_CPUMNT__INT {0} \
   CONFIG.PSU__IRQ_P2F_APU_CTI__INT {0} \
   CONFIG.PSU__IRQ_P2F_APU_EXTERR__INT {0} \
   CONFIG.PSU__IRQ_P2F_APU_IPI__INT {0} \
   CONFIG.PSU__IRQ_P2F_APU_L2ERR__INT {0} \
   CONFIG.PSU__IRQ_P2F_APU_PMU__INT {0} \
   CONFIG.PSU__IRQ_P2F_APU_REGS__INT {0} \
   CONFIG.PSU__IRQ_P2F_ATB_LPD__INT {0} \
   CONFIG.PSU__IRQ_P2F_CAN0__INT {0} \
   CONFIG.PSU__IRQ_P2F_CAN1__INT {0} \
   CONFIG.PSU__IRQ_P2F_CLKMON__INT {0} \
   CONFIG.PSU__IRQ_P2F_CSUPMU_WDT__INT {0} \
   CONFIG.PSU__IRQ_P2F_CSU_DMA__INT {0} \
   CONFIG.PSU__IRQ_P2F_CSU__INT {0} \
   CONFIG.PSU__IRQ_P2F_DDR_SS__INT {0} \
   CONFIG.PSU__IRQ_P2F_DPDMA__INT {0} \
   CONFIG.PSU__IRQ_P2F_DPORT__INT {0} \
   CONFIG.PSU__IRQ_P2F_EFUSE__INT {0} \
   CONFIG.PSU__IRQ_P2F_ENT0_WAKEUP__INT {0} \
   CONFIG.PSU__IRQ_P2F_ENT0__INT {0} \
   CONFIG.PSU__IRQ_P2F_ENT1_WAKEUP__INT {0} \
   CONFIG.PSU__IRQ_P2F_ENT1__INT {0} \
   CONFIG.PSU__IRQ_P2F_ENT2_WAKEUP__INT {0} \
   CONFIG.PSU__IRQ_P2F_ENT2__INT {0} \
   CONFIG.PSU__IRQ_P2F_ENT3_WAKEUP__INT {0} \
   CONFIG.PSU__IRQ_P2F_ENT3__INT {0} \
   CONFIG.PSU__IRQ_P2F_FPD_APB__INT {0} \
   CONFIG.PSU__IRQ_P2F_FPD_ATB_ERR__INT {0} \
   CONFIG.PSU__IRQ_P2F_FP_WDT__INT {0} \
   CONFIG.PSU__IRQ_P2F_GDMA_CHAN__INT {0} \
   CONFIG.PSU__IRQ_P2F_GPIO__INT {0} \
   CONFIG.PSU__IRQ_P2F_GPU__INT {0} \
   CONFIG.PSU__IRQ_P2F_I2C0__INT {0} \
   CONFIG.PSU__IRQ_P2F_I2C1__INT {0} \
   CONFIG.PSU__IRQ_P2F_LPD_APB__INT {0} \
   CONFIG.PSU__IRQ_P2F_LPD_APM__INT {0} \
   CONFIG.PSU__IRQ_P2F_LP_WDT__INT {0} \
   CONFIG.PSU__IRQ_P2F_NAND__INT {0} \
   CONFIG.PSU__IRQ_P2F_OCM_ERR__INT {0} \
   CONFIG.PSU__IRQ_P2F_PCIE_DMA__INT {0} \
   CONFIG.PSU__IRQ_P2F_PCIE_LEGACY__INT {0} \
   CONFIG.PSU__IRQ_P2F_PCIE_MSC__INT {0} \
   CONFIG.PSU__IRQ_P2F_PCIE_MSI__INT {0} \
   CONFIG.PSU__IRQ_P2F_PL_IPI__INT {0} \
   CONFIG.PSU__IRQ_P2F_QSPI__INT {0} \
   CONFIG.PSU__IRQ_P2F_R5_CORE0_ECC_ERR__INT {0} \
   CONFIG.PSU__IRQ_P2F_R5_CORE1_ECC_ERR__INT {0} \
   CONFIG.PSU__IRQ_P2F_RPU_IPI__INT {0} \
   CONFIG.PSU__IRQ_P2F_RPU_PERMON__INT {0} \
   CONFIG.PSU__IRQ_P2F_RTC_ALARM__INT {0} \
   CONFIG.PSU__IRQ_P2F_RTC_SECONDS__INT {0} \
   CONFIG.PSU__IRQ_P2F_SATA__INT {0} \
   CONFIG.PSU__IRQ_P2F_SDIO0_WAKE__INT {0} \
   CONFIG.PSU__IRQ_P2F_SDIO0__INT {0} \
   CONFIG.PSU__IRQ_P2F_SDIO1_WAKE__INT {0} \
   CONFIG.PSU__IRQ_P2F_SDIO1__INT {0} \
   CONFIG.PSU__IRQ_P2F_SPI0__INT {0} \
   CONFIG.PSU__IRQ_P2F_SPI1__INT {0} \
   CONFIG.PSU__IRQ_P2F_TTC0__INT0 {0} \
   CONFIG.PSU__IRQ_P2F_TTC0__INT1 {0} \
   CONFIG.PSU__IRQ_P2F_TTC0__INT2 {0} \
   CONFIG.PSU__IRQ_P2F_TTC1__INT0 {0} \
   CONFIG.PSU__IRQ_P2F_TTC1__INT1 {0} \
   CONFIG.PSU__IRQ_P2F_TTC1__INT2 {0} \
   CONFIG.PSU__IRQ_P2F_TTC2__INT0 {0} \
   CONFIG.PSU__IRQ_P2F_TTC2__INT1 {0} \
   CONFIG.PSU__IRQ_P2F_TTC2__INT2 {0} \
   CONFIG.PSU__IRQ_P2F_TTC3__INT0 {0} \
   CONFIG.PSU__IRQ_P2F_TTC3__INT1 {0} \
   CONFIG.PSU__IRQ_P2F_TTC3__INT2 {0} \
   CONFIG.PSU__IRQ_P2F_UART0__INT {0} \
   CONFIG.PSU__IRQ_P2F_UART1__INT {0} \
   CONFIG.PSU__IRQ_P2F_USB3_ENDPOINT__INT0 {0} \
   CONFIG.PSU__IRQ_P2F_USB3_ENDPOINT__INT1 {0} \
   CONFIG.PSU__IRQ_P2F_USB3_OTG__INT0 {0} \
   CONFIG.PSU__IRQ_P2F_USB3_OTG__INT1 {0} \
   CONFIG.PSU__IRQ_P2F_USB3_PMU_WAKEUP__INT {0} \
   CONFIG.PSU__IRQ_P2F_XMPU_FPD__INT {0} \
   CONFIG.PSU__IRQ_P2F_XMPU_LPD__INT {0} \
   CONFIG.PSU__IRQ_P2F__INTF_FPD_SMMU__INT {0} \
   CONFIG.PSU__IRQ_P2F__INTF_PPD_CCI__INT {0} \
   CONFIG.PSU__L2_BANK0__POWER__ON {1} \
   CONFIG.PSU__LPDMA0_COHERENCY {0} \
   CONFIG.PSU__LPDMA1_COHERENCY {0} \
   CONFIG.PSU__LPDMA2_COHERENCY {0} \
   CONFIG.PSU__LPDMA3_COHERENCY {0} \
   CONFIG.PSU__LPDMA4_COHERENCY {0} \
   CONFIG.PSU__LPDMA5_COHERENCY {0} \
   CONFIG.PSU__LPDMA6_COHERENCY {0} \
   CONFIG.PSU__LPDMA7_COHERENCY {0} \
   CONFIG.PSU__LPD_SLCR__CSUPMU_WDT_CLK_SEL__SELECT {APB} \
   CONFIG.PSU__LPD_SLCR__CSUPMU__ACT_FREQMHZ {100} \
   CONFIG.PSU__LPD_SLCR__CSUPMU__FREQMHZ {100} \
   CONFIG.PSU__MAXIGP0__DATA_WIDTH {128} \
   CONFIG.PSU__MAXIGP1__DATA_WIDTH {128} \
   CONFIG.PSU__MAXIGP2__DATA_WIDTH {32} \
   CONFIG.PSU__M_AXI_GP0_SUPPORTS_NARROW_BURST {1} \
   CONFIG.PSU__M_AXI_GP1_SUPPORTS_NARROW_BURST {1} \
   CONFIG.PSU__M_AXI_GP2_SUPPORTS_NARROW_BURST {1} \
   CONFIG.PSU__NAND_COHERENCY {0} \
   CONFIG.PSU__NAND_ROUTE_THROUGH_FPD {0} \
   CONFIG.PSU__NAND__CHIP_ENABLE__ENABLE {0} \
   CONFIG.PSU__NAND__DATA_STROBE__ENABLE {0} \
   CONFIG.PSU__NAND__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__NAND__READY0_BUSY__ENABLE {0} \
   CONFIG.PSU__NAND__READY1_BUSY__ENABLE {0} \
   CONFIG.PSU__NAND__READY_BUSY__ENABLE {0} \
   CONFIG.PSU__NUM_FABRIC_RESETS {1} \
   CONFIG.PSU__OCM_BANK0__POWER__ON {1} \
   CONFIG.PSU__OCM_BANK1__POWER__ON {1} \
   CONFIG.PSU__OCM_BANK2__POWER__ON {1} \
   CONFIG.PSU__OCM_BANK3__POWER__ON {1} \
   CONFIG.PSU__OVERRIDE_HPX_QOS {0} \
   CONFIG.PSU__OVERRIDE__BASIC_CLOCK {0} \
   CONFIG.PSU__PCIE__ACS_VIOLAION {0} \
   CONFIG.PSU__PCIE__ACS_VIOLATION {0} \
   CONFIG.PSU__PCIE__AER_CAPABILITY {0} \
   CONFIG.PSU__PCIE__ATOMICOP_EGRESS_BLOCKED {0} \
   CONFIG.PSU__PCIE__BAR0_64BIT {0} \
   CONFIG.PSU__PCIE__BAR0_ENABLE {0} \
   CONFIG.PSU__PCIE__BAR0_PREFETCHABLE {0} \
   CONFIG.PSU__PCIE__BAR0_VAL {} \
   CONFIG.PSU__PCIE__BAR1_64BIT {0} \
   CONFIG.PSU__PCIE__BAR1_ENABLE {0} \
   CONFIG.PSU__PCIE__BAR1_PREFETCHABLE {0} \
   CONFIG.PSU__PCIE__BAR1_VAL {} \
   CONFIG.PSU__PCIE__BAR2_64BIT {0} \
   CONFIG.PSU__PCIE__BAR2_ENABLE {0} \
   CONFIG.PSU__PCIE__BAR2_PREFETCHABLE {0} \
   CONFIG.PSU__PCIE__BAR2_VAL {} \
   CONFIG.PSU__PCIE__BAR3_64BIT {0} \
   CONFIG.PSU__PCIE__BAR3_ENABLE {0} \
   CONFIG.PSU__PCIE__BAR3_PREFETCHABLE {0} \
   CONFIG.PSU__PCIE__BAR3_VAL {} \
   CONFIG.PSU__PCIE__BAR4_64BIT {0} \
   CONFIG.PSU__PCIE__BAR4_ENABLE {0} \
   CONFIG.PSU__PCIE__BAR4_PREFETCHABLE {0} \
   CONFIG.PSU__PCIE__BAR4_VAL {} \
   CONFIG.PSU__PCIE__BAR5_64BIT {0} \
   CONFIG.PSU__PCIE__BAR5_ENABLE {0} \
   CONFIG.PSU__PCIE__BAR5_PREFETCHABLE {0} \
   CONFIG.PSU__PCIE__BAR5_VAL {} \
   CONFIG.PSU__PCIE__CLASS_CODE_BASE {} \
   CONFIG.PSU__PCIE__CLASS_CODE_INTERFACE {} \
   CONFIG.PSU__PCIE__CLASS_CODE_SUB {} \
   CONFIG.PSU__PCIE__CLASS_CODE_VALUE {} \
   CONFIG.PSU__PCIE__COMPLETER_ABORT {0} \
   CONFIG.PSU__PCIE__COMPLTION_TIMEOUT {0} \
   CONFIG.PSU__PCIE__CORRECTABLE_INT_ERR {0} \
   CONFIG.PSU__PCIE__CRS_SW_VISIBILITY {0} \
   CONFIG.PSU__PCIE__DEVICE_ID {} \
   CONFIG.PSU__PCIE__ECRC_CHECK {0} \
   CONFIG.PSU__PCIE__ECRC_ERR {0} \
   CONFIG.PSU__PCIE__ECRC_GEN {0} \
   CONFIG.PSU__PCIE__EROM_ENABLE {0} \
   CONFIG.PSU__PCIE__EROM_VAL {} \
   CONFIG.PSU__PCIE__FLOW_CONTROL_ERR {0} \
   CONFIG.PSU__PCIE__FLOW_CONTROL_PROTOCOL_ERR {0} \
   CONFIG.PSU__PCIE__HEADER_LOG_OVERFLOW {0} \
   CONFIG.PSU__PCIE__INTX_GENERATION {0} \
   CONFIG.PSU__PCIE__LANE0__ENABLE {0} \
   CONFIG.PSU__PCIE__LANE1__ENABLE {0} \
   CONFIG.PSU__PCIE__LANE2__ENABLE {0} \
   CONFIG.PSU__PCIE__LANE3__ENABLE {0} \
   CONFIG.PSU__PCIE__MC_BLOCKED_TLP {0} \
   CONFIG.PSU__PCIE__MSIX_BAR_INDICATOR {} \
   CONFIG.PSU__PCIE__MSIX_CAPABILITY {0} \
   CONFIG.PSU__PCIE__MSIX_PBA_BAR_INDICATOR {} \
   CONFIG.PSU__PCIE__MSIX_PBA_OFFSET {0} \
   CONFIG.PSU__PCIE__MSIX_TABLE_OFFSET {0} \
   CONFIG.PSU__PCIE__MSIX_TABLE_SIZE {0} \
   CONFIG.PSU__PCIE__MSI_64BIT_ADDR_CAPABLE {0} \
   CONFIG.PSU__PCIE__MSI_CAPABILITY {0} \
   CONFIG.PSU__PCIE__MULTIHEADER {0} \
   CONFIG.PSU__PCIE__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__PCIE__PERIPHERAL__ENDPOINT_ENABLE {1} \
   CONFIG.PSU__PCIE__PERIPHERAL__ROOTPORT_ENABLE {0} \
   CONFIG.PSU__PCIE__PERM_ROOT_ERR_UPDATE {0} \
   CONFIG.PSU__PCIE__RECEIVER_ERR {0} \
   CONFIG.PSU__PCIE__RECEIVER_OVERFLOW {0} \
   CONFIG.PSU__PCIE__RESET__POLARITY {Active Low} \
   CONFIG.PSU__PCIE__REVISION_ID {} \
   CONFIG.PSU__PCIE__SUBSYSTEM_ID {} \
   CONFIG.PSU__PCIE__SUBSYSTEM_VENDOR_ID {} \
   CONFIG.PSU__PCIE__SURPRISE_DOWN {0} \
   CONFIG.PSU__PCIE__TLP_PREFIX_BLOCKED {0} \
   CONFIG.PSU__PCIE__UNCORRECTABL_INT_ERR {0} \
   CONFIG.PSU__PCIE__VENDOR_ID {} \
   CONFIG.PSU__PJTAG__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__PL_CLK0_BUF {TRUE} \
   CONFIG.PSU__PL_CLK1_BUF {TRUE} \
   CONFIG.PSU__PL_CLK2_BUF {FALSE} \
   CONFIG.PSU__PL_CLK3_BUF {FALSE} \
   CONFIG.PSU__PL__POWER__ON {1} \
   CONFIG.PSU__PMU_COHERENCY {0} \
   CONFIG.PSU__PMU__AIBACK__ENABLE {0} \
   CONFIG.PSU__PMU__EMIO_GPI__ENABLE {0} \
   CONFIG.PSU__PMU__EMIO_GPO__ENABLE {0} \
   CONFIG.PSU__PMU__GPI0__ENABLE {0} \
   CONFIG.PSU__PMU__GPI1__ENABLE {0} \
   CONFIG.PSU__PMU__GPI2__ENABLE {0} \
   CONFIG.PSU__PMU__GPI3__ENABLE {0} \
   CONFIG.PSU__PMU__GPI4__ENABLE {0} \
   CONFIG.PSU__PMU__GPI5__ENABLE {0} \
   CONFIG.PSU__PMU__GPO0__ENABLE {0} \
   CONFIG.PSU__PMU__GPO1__ENABLE {0} \
   CONFIG.PSU__PMU__GPO2__ENABLE {0} \
   CONFIG.PSU__PMU__GPO3__ENABLE {0} \
   CONFIG.PSU__PMU__GPO4__ENABLE {0} \
   CONFIG.PSU__PMU__GPO5__ENABLE {0} \
   CONFIG.PSU__PMU__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__PMU__PLERROR__ENABLE {0} \
   CONFIG.PSU__PRESET_APPLIED {0} \
   CONFIG.PSU__PROTECTION__DDR_SEGMENTS {NONE} \
   CONFIG.PSU__PROTECTION__DEBUG {0} \
   CONFIG.PSU__PROTECTION__ENABLE {0} \
   CONFIG.PSU__PROTECTION__FPD_SEGMENTS {SA:0xFD1A0000; SIZE:1280; UNIT:KB; RegionTZ:Secure; WrAllowed:Read/Write; subsystemId:PMU Firmware| SA:0xFD000000; SIZE:64; UNIT:KB; RegionTZ:Secure; WrAllowed:Read/Write; subsystemId:PMU Firmware| SA:0xFD010000; SIZE:64; UNIT:KB; RegionTZ:Secure; WrAllowed:Read/Write; subsystemId:PMU Firmware| SA:0xFD020000; SIZE:64; UNIT:KB; RegionTZ:Secure; WrAllowed:Read/Write; subsystemId:PMU Firmware| SA:0xFD030000; SIZE:64; UNIT:KB; RegionTZ:Secure; WrAllowed:Read/Write; subsystemId:PMU Firmware| SA:0xFD040000; SIZE:64; UNIT:KB; RegionTZ:Secure; WrAllowed:Read/Write; subsystemId:PMU Firmware| SA:0xFD050000; SIZE:64; UNIT:KB; RegionTZ:Secure; WrAllowed:Read/Write; subsystemId:PMU Firmware| SA:0xFD610000; SIZE:512; UNIT:KB; RegionTZ:Secure; WrAllowed:Read/Write; subsystemId:PMU Firmware| SA:0xFD5D0000; SIZE:64; UNIT:KB; RegionTZ:Secure; WrAllowed:Read/Write; subsystemId:PMU Firmware|SA:0xFD1A0000 ; SIZE:1280; UNIT:KB; RegionTZ:Secure ; WrAllowed:Read/Write; subsystemId:Secure Subsystem} \
   CONFIG.PSU__PROTECTION__LOCK_UNUSED_SEGMENTS {0} \
   CONFIG.PSU__PROTECTION__LPD_SEGMENTS {SA:0xFF980000; SIZE:64; UNIT:KB; RegionTZ:Secure; WrAllowed:Read/Write; subsystemId:PMU Firmware| SA:0xFF5E0000; SIZE:2560; UNIT:KB; RegionTZ:Secure; WrAllowed:Read/Write; subsystemId:PMU Firmware| SA:0xFFCC0000; SIZE:64; UNIT:KB; RegionTZ:Secure; WrAllowed:Read/Write; subsystemId:PMU Firmware| SA:0xFF180000; SIZE:768; UNIT:KB; RegionTZ:Secure; WrAllowed:Read/Write; subsystemId:PMU Firmware| SA:0xFF410000; SIZE:640; UNIT:KB; RegionTZ:Secure; WrAllowed:Read/Write; subsystemId:PMU Firmware| SA:0xFFA70000; SIZE:64; UNIT:KB; RegionTZ:Secure; WrAllowed:Read/Write; subsystemId:PMU Firmware| SA:0xFF9A0000; SIZE:64; UNIT:KB; RegionTZ:Secure; WrAllowed:Read/Write; subsystemId:PMU Firmware|SA:0xFF5E0000 ; SIZE:2560; UNIT:KB; RegionTZ:Secure ; WrAllowed:Read/Write; subsystemId:Secure Subsystem|SA:0xFFCC0000 ; SIZE:64; UNIT:KB; RegionTZ:Secure ; WrAllowed:Read/Write; subsystemId:Secure Subsystem|SA:0xFF180000 ; SIZE:768; UNIT:KB; RegionTZ:Secure ; WrAllowed:Read/Write; subsystemId:Secure Subsystem|SA:0xFF9A0000 ; SIZE:64; UNIT:KB; RegionTZ:Secure ; WrAllowed:Read/Write; subsystemId:Secure Subsystem} \
   CONFIG.PSU__PROTECTION__MASTERS {USB1:NonSecure;0|USB0:NonSecure;0|S_AXI_LPD:NA;0|S_AXI_HPC1_FPD:NA;0|S_AXI_HPC0_FPD:NA;1|S_AXI_HP3_FPD:NA;0|S_AXI_HP2_FPD:NA;0|S_AXI_HP1_FPD:NA;0|S_AXI_HP0_FPD:NA;0|S_AXI_ACP:NA;0|S_AXI_ACE:NA;0|SD1:NonSecure;0|SD0:NonSecure;1|SATA1:NonSecure;0|SATA0:NonSecure;0|RPU1:Secure;1|RPU0:Secure;1|QSPI:NonSecure;1|PMU:NA;1|PCIe:NonSecure;0|NAND:NonSecure;0|LDMA:NonSecure;1|GPU:NonSecure;1|GEM3:NonSecure;1|GEM2:NonSecure;0|GEM1:NonSecure;0|GEM0:NonSecure;0|FDMA:NonSecure;1|DP:NonSecure;0|DAP:NA;1|Coresight:NA;1|CSU:NA;1|APU:NA;1} \
   CONFIG.PSU__PROTECTION__MASTERS_TZ {GEM0:NonSecure|SD1:NonSecure|GEM2:NonSecure|GEM1:NonSecure|GEM3:NonSecure|PCIe:NonSecure|DP:NonSecure|NAND:NonSecure|GPU:NonSecure|USB1:NonSecure|USB0:NonSecure|LDMA:NonSecure|FDMA:NonSecure|QSPI:NonSecure|SD0:NonSecure} \
   CONFIG.PSU__PROTECTION__OCM_SEGMENTS {NONE} \
   CONFIG.PSU__PROTECTION__PRESUBSYSTEMS {NONE} \
   CONFIG.PSU__PROTECTION__SLAVES {LPD;USB3_1_XHCI;FE300000;FE3FFFFF;0|LPD;USB3_1;FF9E0000;FF9EFFFF;0|LPD;USB3_0_XHCI;FE200000;FE2FFFFF;0|LPD;USB3_0;FF9D0000;FF9DFFFF;0|LPD;UART1;FF010000;FF01FFFF;0|LPD;UART0;FF000000;FF00FFFF;1|LPD;TTC3;FF140000;FF14FFFF;1|LPD;TTC2;FF130000;FF13FFFF;1|LPD;TTC1;FF120000;FF12FFFF;1|LPD;TTC0;FF110000;FF11FFFF;1|FPD;SWDT1;FD4D0000;FD4DFFFF;0|LPD;SWDT0;FF150000;FF15FFFF;0|LPD;SPI1;FF050000;FF05FFFF;0|LPD;SPI0;FF040000;FF04FFFF;1|FPD;SMMU_REG;FD5F0000;FD5FFFFF;1|FPD;SMMU;FD800000;FDFFFFFF;1|FPD;SIOU;FD3D0000;FD3DFFFF;1|FPD;SERDES;FD400000;FD47FFFF;1|LPD;SD1;FF170000;FF17FFFF;0|LPD;SD0;FF160000;FF16FFFF;1|FPD;SATA;FD0C0000;FD0CFFFF;0|LPD;RTC;FFA60000;FFA6FFFF;1|LPD;RSA_CORE;FFCE0000;FFCEFFFF;1|LPD;RPU;FF9A0000;FF9AFFFF;1|LPD;R5_TCM_RAM_GLOBAL;FFE00000;FFE3FFFF;1|LPD;R5_1_Instruction_Cache;FFEC0000;FFECFFFF;1|LPD;R5_1_Data_Cache;FFED0000;FFEDFFFF;1|LPD;R5_1_BTCM_GLOBAL;FFEB0000;FFEBFFFF;1|LPD;R5_1_ATCM_GLOBAL;FFE90000;FFE9FFFF;1|LPD;R5_0_Instruction_Cache;FFE40000;FFE4FFFF;1|LPD;R5_0_Data_Cache;FFE50000;FFE5FFFF;1|LPD;R5_0_BTCM_GLOBAL;FFE20000;FFE2FFFF;1|LPD;R5_0_ATCM_GLOBAL;FFE00000;FFE0FFFF;1|LPD;QSPI_Linear_Address;C0000000;DFFFFFFF;1|LPD;QSPI;FF0F0000;FF0FFFFF;1|LPD;PMU_RAM;FFDC0000;FFDDFFFF;1|LPD;PMU_GLOBAL;FFD80000;FFDBFFFF;1|FPD;PCIE_MAIN;FD0E0000;FD0EFFFF;0|FPD;PCIE_LOW;E0000000;EFFFFFFF;0|FPD;PCIE_HIGH2;8000000000;BFFFFFFFFF;0|FPD;PCIE_HIGH1;600000000;7FFFFFFFF;0|FPD;PCIE_DMA;FD0F0000;FD0FFFFF;0|FPD;PCIE_ATTRIB;FD480000;FD48FFFF;0|LPD;OCM_XMPU_CFG;FFA70000;FFA7FFFF;1|LPD;OCM_SLCR;FF960000;FF96FFFF;1|OCM;OCM;FFFC0000;FFFFFFFF;1|LPD;NAND;FF100000;FF10FFFF;0|LPD;MBISTJTAG;FFCF0000;FFCFFFFF;1|LPD;LPD_XPPU_SINK;FF9C0000;FF9CFFFF;1|LPD;LPD_XPPU;FF980000;FF98FFFF;1|LPD;LPD_SLCR_SECURE;FF4B0000;FF4DFFFF;1|LPD;LPD_SLCR;FF410000;FF4AFFFF;1|LPD;LPD_GPV;FE100000;FE1FFFFF;1|LPD;LPD_DMA_7;FFAF0000;FFAFFFFF;1|LPD;LPD_DMA_6;FFAE0000;FFAEFFFF;1|LPD;LPD_DMA_5;FFAD0000;FFADFFFF;1|LPD;LPD_DMA_4;FFAC0000;FFACFFFF;1|LPD;LPD_DMA_3;FFAB0000;FFABFFFF;1|LPD;LPD_DMA_2;FFAA0000;FFAAFFFF;1|LPD;LPD_DMA_1;FFA90000;FFA9FFFF;1|LPD;LPD_DMA_0;FFA80000;FFA8FFFF;1|LPD;IPI_CTRL;FF380000;FF3FFFFF;1|LPD;IOU_SLCR;FF180000;FF23FFFF;1|LPD;IOU_SECURE_SLCR;FF240000;FF24FFFF;1|LPD;IOU_SCNTRS;FF260000;FF26FFFF;1|LPD;IOU_SCNTR;FF250000;FF25FFFF;1|LPD;IOU_GPV;FE000000;FE0FFFFF;1|LPD;I2C1;FF030000;FF03FFFF;0|LPD;I2C0;FF020000;FF02FFFF;0|FPD;GPU;FD4B0000;FD4BFFFF;0|LPD;GPIO;FF0A0000;FF0AFFFF;1|LPD;GEM3;FF0E0000;FF0EFFFF;1|LPD;GEM2;FF0D0000;FF0DFFFF;0|LPD;GEM1;FF0C0000;FF0CFFFF;0|LPD;GEM0;FF0B0000;FF0BFFFF;0|FPD;FPD_XMPU_SINK;FD4F0000;FD4FFFFF;1|FPD;FPD_XMPU_CFG;FD5D0000;FD5DFFFF;1|FPD;FPD_SLCR_SECURE;FD690000;FD6CFFFF;1|FPD;FPD_SLCR;FD610000;FD68FFFF;1|FPD;FPD_GPV;FD700000;FD7FFFFF;1|FPD;FPD_DMA_CH7;FD570000;FD57FFFF;1|FPD;FPD_DMA_CH6;FD560000;FD56FFFF;1|FPD;FPD_DMA_CH5;FD550000;FD55FFFF;1|FPD;FPD_DMA_CH4;FD540000;FD54FFFF;1|FPD;FPD_DMA_CH3;FD530000;FD53FFFF;1|FPD;FPD_DMA_CH2;FD520000;FD52FFFF;1|FPD;FPD_DMA_CH1;FD510000;FD51FFFF;1|FPD;FPD_DMA_CH0;FD500000;FD50FFFF;1|LPD;EFUSE;FFCC0000;FFCCFFFF;1|FPD;Display Port;FD4A0000;FD4AFFFF;0|FPD;DPDMA;FD4C0000;FD4CFFFF;0|FPD;DDR_XMPU5_CFG;FD050000;FD05FFFF;1|FPD;DDR_XMPU4_CFG;FD040000;FD04FFFF;1|FPD;DDR_XMPU3_CFG;FD030000;FD03FFFF;1|FPD;DDR_XMPU2_CFG;FD020000;FD02FFFF;1|FPD;DDR_XMPU1_CFG;FD010000;FD01FFFF;1|FPD;DDR_XMPU0_CFG;FD000000;FD00FFFF;1|FPD;DDR_QOS_CTRL;FD090000;FD09FFFF;1|FPD;DDR_PHY;FD080000;FD08FFFF;1|DDR;DDR_LOW;0;7FFFFFFF;1|DDR;DDR_HIGH;800000000;87FFFFFFF;1|FPD;DDDR_CTRL;FD070000;FD070FFF;1|LPD;Coresight;FE800000;FEFFFFFF;1|LPD;CSU_DMA;FFC80000;FFC9FFFF;1|LPD;CSU;FFCA0000;FFCAFFFF;0|LPD;CRL_APB;FF5E0000;FF85FFFF;1|FPD;CRF_APB;FD1A0000;FD2DFFFF;1|FPD;CCI_REG;FD5E0000;FD5EFFFF;1|FPD;CCI_GPV;FD6E0000;FD6EFFFF;1|LPD;CAN1;FF070000;FF07FFFF;0|LPD;CAN0;FF060000;FF06FFFF;0|FPD;APU;FD5C0000;FD5CFFFF;1|LPD;APM_INTC_IOU;FFA20000;FFA2FFFF;1|LPD;APM_FPD_LPD;FFA30000;FFA3FFFF;1|FPD;APM_5;FD490000;FD49FFFF;1|FPD;APM_0;FD0B0000;FD0BFFFF;1|LPD;APM2;FFA10000;FFA1FFFF;1|LPD;APM1;FFA00000;FFA0FFFF;1|LPD;AMS;FFA50000;FFA5FFFF;1|FPD;AFI_5;FD3B0000;FD3BFFFF;1|FPD;AFI_4;FD3A0000;FD3AFFFF;1|FPD;AFI_3;FD390000;FD39FFFF;1|FPD;AFI_2;FD380000;FD38FFFF;1|FPD;AFI_1;FD370000;FD37FFFF;1|FPD;AFI_0;FD360000;FD36FFFF;1|LPD;AFIFM6;FF9B0000;FF9BFFFF;1|FPD;ACPU_GIC;F9010000;F907FFFF;1} \
   CONFIG.PSU__PROTECTION__SUBSYSTEMS {PMU Firmware:PMU|Secure Subsystem:} \
   CONFIG.PSU__PSS_ALT_REF_CLK__ENABLE {0} \
   CONFIG.PSU__PSS_ALT_REF_CLK__FREQMHZ {33.333} \
   CONFIG.PSU__PSS_REF_CLK__FREQMHZ {50} \
   CONFIG.PSU__QSPI_COHERENCY {0} \
   CONFIG.PSU__QSPI_ROUTE_THROUGH_FPD {0} \
   CONFIG.PSU__QSPI__GRP_FBCLK__ENABLE {0} \
   CONFIG.PSU__QSPI__PERIPHERAL__DATA_MODE {x1} \
   CONFIG.PSU__QSPI__PERIPHERAL__ENABLE {1} \
   CONFIG.PSU__QSPI__PERIPHERAL__IO {MIO 0 .. 5} \
   CONFIG.PSU__QSPI__PERIPHERAL__MODE {Single} \
   CONFIG.PSU__REPORT__DBGLOG {0} \
   CONFIG.PSU__RPU_COHERENCY {0} \
   CONFIG.PSU__RPU__POWER__ON {1} \
   CONFIG.PSU__SATA__LANE0__ENABLE {0} \
   CONFIG.PSU__SATA__LANE1__ENABLE {0} \
   CONFIG.PSU__SATA__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__SAXIGP0__DATA_WIDTH {128} \
   CONFIG.PSU__SAXIGP1__DATA_WIDTH {128} \
   CONFIG.PSU__SAXIGP2__DATA_WIDTH {128} \
   CONFIG.PSU__SAXIGP3__DATA_WIDTH {128} \
   CONFIG.PSU__SAXIGP4__DATA_WIDTH {128} \
   CONFIG.PSU__SAXIGP5__DATA_WIDTH {128} \
   CONFIG.PSU__SAXIGP6__DATA_WIDTH {128} \
   CONFIG.PSU__SD0_COHERENCY {0} \
   CONFIG.PSU__SD0_ROUTE_THROUGH_FPD {0} \
   CONFIG.PSU__SD0__DATA_TRANSFER_MODE {4Bit} \
   CONFIG.PSU__SD0__GRP_CD__ENABLE {1} \
   CONFIG.PSU__SD0__GRP_CD__IO {MIO 39} \
   CONFIG.PSU__SD0__GRP_POW__ENABLE {0} \
   CONFIG.PSU__SD0__GRP_WP__ENABLE {0} \
   CONFIG.PSU__SD0__PERIPHERAL__ENABLE {1} \
   CONFIG.PSU__SD0__PERIPHERAL__IO {MIO 38 .. 44} \
   CONFIG.PSU__SD0__RESET__ENABLE {0} \
   CONFIG.PSU__SD0__SLOT_TYPE {SD 2.0} \
   CONFIG.PSU__SD1_COHERENCY {0} \
   CONFIG.PSU__SD1_ROUTE_THROUGH_FPD {0} \
   CONFIG.PSU__SD1__DATA_TRANSFER_MODE {<Select>} \
   CONFIG.PSU__SD1__GRP_CD__ENABLE {0} \
   CONFIG.PSU__SD1__GRP_POW__ENABLE {0} \
   CONFIG.PSU__SD1__GRP_WP__ENABLE {0} \
   CONFIG.PSU__SD1__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__SD1__PERIPHERAL__IO {<Select>} \
   CONFIG.PSU__SD1__RESET__ENABLE {0} \
   CONFIG.PSU__SD1__SLOT_TYPE {<Select>} \
   CONFIG.PSU__SPI0_LOOP_SPI1__ENABLE {0} \
   CONFIG.PSU__SPI0__GRP_SS0__ENABLE {1} \
   CONFIG.PSU__SPI0__GRP_SS0__IO {MIO 29} \
   CONFIG.PSU__SPI0__GRP_SS1__ENABLE {0} \
   CONFIG.PSU__SPI0__GRP_SS2__ENABLE {0} \
   CONFIG.PSU__SPI0__PERIPHERAL__ENABLE {1} \
   CONFIG.PSU__SPI0__PERIPHERAL__IO {MIO 26 .. 31} \
   CONFIG.PSU__SPI1__GRP_SS0__ENABLE {0} \
   CONFIG.PSU__SPI1__GRP_SS1__ENABLE {0} \
   CONFIG.PSU__SPI1__GRP_SS2__ENABLE {0} \
   CONFIG.PSU__SPI1__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__SWDT0__CLOCK__ENABLE {0} \
   CONFIG.PSU__SWDT0__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__SWDT0__PERIPHERAL__IO {NA} \
   CONFIG.PSU__SWDT0__RESET__ENABLE {0} \
   CONFIG.PSU__SWDT1__CLOCK__ENABLE {0} \
   CONFIG.PSU__SWDT1__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__SWDT1__PERIPHERAL__IO {NA} \
   CONFIG.PSU__SWDT1__RESET__ENABLE {0} \
   CONFIG.PSU__TCM0A__POWER__ON {1} \
   CONFIG.PSU__TCM0B__POWER__ON {1} \
   CONFIG.PSU__TCM1A__POWER__ON {1} \
   CONFIG.PSU__TCM1B__POWER__ON {1} \
   CONFIG.PSU__TESTSCAN__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__TRACE_PIPELINE_WIDTH {8} \
   CONFIG.PSU__TRACE__INTERNAL_WIDTH {32} \
   CONFIG.PSU__TRACE__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__TRISTATE__INVERTED {1} \
   CONFIG.PSU__TSU__BUFG_PORT_PAIR {0} \
   CONFIG.PSU__TTC0__CLOCK__ENABLE {0} \
   CONFIG.PSU__TTC0__PERIPHERAL__ENABLE {1} \
   CONFIG.PSU__TTC0__PERIPHERAL__IO {NA} \
   CONFIG.PSU__TTC0__WAVEOUT__ENABLE {0} \
   CONFIG.PSU__TTC1__CLOCK__ENABLE {0} \
   CONFIG.PSU__TTC1__PERIPHERAL__ENABLE {1} \
   CONFIG.PSU__TTC1__PERIPHERAL__IO {NA} \
   CONFIG.PSU__TTC1__WAVEOUT__ENABLE {0} \
   CONFIG.PSU__TTC2__CLOCK__ENABLE {0} \
   CONFIG.PSU__TTC2__PERIPHERAL__ENABLE {1} \
   CONFIG.PSU__TTC2__PERIPHERAL__IO {NA} \
   CONFIG.PSU__TTC2__WAVEOUT__ENABLE {0} \
   CONFIG.PSU__TTC3__CLOCK__ENABLE {0} \
   CONFIG.PSU__TTC3__PERIPHERAL__ENABLE {1} \
   CONFIG.PSU__TTC3__PERIPHERAL__IO {NA} \
   CONFIG.PSU__TTC3__WAVEOUT__ENABLE {0} \
   CONFIG.PSU__UART0_LOOP_UART1__ENABLE {0} \
   CONFIG.PSU__UART0__BAUD_RATE {115200} \
   CONFIG.PSU__UART0__MODEM__ENABLE {0} \
   CONFIG.PSU__UART0__PERIPHERAL__ENABLE {1} \
   CONFIG.PSU__UART0__PERIPHERAL__IO {MIO 34 .. 35} \
   CONFIG.PSU__UART1__MODEM__ENABLE {0} \
   CONFIG.PSU__UART1__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__USB0_COHERENCY {0} \
   CONFIG.PSU__USB0__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__USB0__RESET__ENABLE {0} \
   CONFIG.PSU__USB1_COHERENCY {0} \
   CONFIG.PSU__USB1__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__USB1__RESET__ENABLE {0} \
   CONFIG.PSU__USB2_0__EMIO__ENABLE {0} \
   CONFIG.PSU__USB2_1__EMIO__ENABLE {0} \
   CONFIG.PSU__USB3_0__EMIO__ENABLE {0} \
   CONFIG.PSU__USB3_0__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__USB3_1__EMIO__ENABLE {0} \
   CONFIG.PSU__USB3_1__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__USE_DIFF_RW_CLK_GP0 {0} \
   CONFIG.PSU__USE_DIFF_RW_CLK_GP1 {0} \
   CONFIG.PSU__USE_DIFF_RW_CLK_GP2 {0} \
   CONFIG.PSU__USE_DIFF_RW_CLK_GP3 {0} \
   CONFIG.PSU__USE_DIFF_RW_CLK_GP4 {0} \
   CONFIG.PSU__USE_DIFF_RW_CLK_GP5 {0} \
   CONFIG.PSU__USE_DIFF_RW_CLK_GP6 {0} \
   CONFIG.PSU__USE__ADMA {0} \
   CONFIG.PSU__USE__APU_LEGACY_INTERRUPT {0} \
   CONFIG.PSU__USE__AUDIO {0} \
   CONFIG.PSU__USE__CLK {0} \
   CONFIG.PSU__USE__CLK0 {0} \
   CONFIG.PSU__USE__CLK1 {0} \
   CONFIG.PSU__USE__CLK2 {0} \
   CONFIG.PSU__USE__CLK3 {0} \
   CONFIG.PSU__USE__CROSS_TRIGGER {0} \
   CONFIG.PSU__USE__DDR_INTF_REQUESTED {0} \
   CONFIG.PSU__USE__DEBUG__TEST {0} \
   CONFIG.PSU__USE__EVENT_RPU {0} \
   CONFIG.PSU__USE__FABRIC__RST {1} \
   CONFIG.PSU__USE__FTM {0} \
   CONFIG.PSU__USE__GDMA {0} \
   CONFIG.PSU__USE__IRQ {0} \
   CONFIG.PSU__USE__IRQ0 {1} \
   CONFIG.PSU__USE__IRQ1 {0} \
   CONFIG.PSU__USE__M_AXI_GP0 {1} \
   CONFIG.PSU__USE__M_AXI_GP1 {0} \
   CONFIG.PSU__USE__M_AXI_GP2 {1} \
   CONFIG.PSU__USE__PROC_EVENT_BUS {0} \
   CONFIG.PSU__USE__RPU_LEGACY_INTERRUPT {0} \
   CONFIG.PSU__USE__RST0 {0} \
   CONFIG.PSU__USE__RST1 {0} \
   CONFIG.PSU__USE__RST2 {0} \
   CONFIG.PSU__USE__RST3 {0} \
   CONFIG.PSU__USE__RTC {0} \
   CONFIG.PSU__USE__STM {0} \
   CONFIG.PSU__USE__S_AXI_ACE {0} \
   CONFIG.PSU__USE__S_AXI_ACP {0} \
   CONFIG.PSU__USE__S_AXI_GP0 {1} \
   CONFIG.PSU__USE__S_AXI_GP1 {0} \
   CONFIG.PSU__USE__S_AXI_GP2 {0} \
   CONFIG.PSU__USE__S_AXI_GP3 {0} \
   CONFIG.PSU__USE__S_AXI_GP4 {0} \
   CONFIG.PSU__USE__S_AXI_GP5 {0} \
   CONFIG.PSU__USE__S_AXI_GP6 {0} \
   CONFIG.PSU__USE__USB3_0_HUB {0} \
   CONFIG.PSU__USE__USB3_1_HUB {0} \
   CONFIG.PSU__USE__VIDEO {0} \
   CONFIG.PSU__VIDEO_REF_CLK__ENABLE {0} \
   CONFIG.PSU__VIDEO_REF_CLK__FREQMHZ {33.333} \
   CONFIG.QSPI_BOARD_INTERFACE {custom} \
   CONFIG.SATA_BOARD_INTERFACE {custom} \
   CONFIG.SD0_BOARD_INTERFACE {custom} \
   CONFIG.SD1_BOARD_INTERFACE {custom} \
   CONFIG.SPI0_BOARD_INTERFACE {custom} \
   CONFIG.SPI1_BOARD_INTERFACE {custom} \
   CONFIG.SUBPRESET1 {Custom} \
   CONFIG.SUBPRESET2 {Custom} \
   CONFIG.SWDT0_BOARD_INTERFACE {custom} \
   CONFIG.SWDT1_BOARD_INTERFACE {custom} \
   CONFIG.TRACE_BOARD_INTERFACE {custom} \
   CONFIG.TTC0_BOARD_INTERFACE {custom} \
   CONFIG.TTC1_BOARD_INTERFACE {custom} \
   CONFIG.TTC2_BOARD_INTERFACE {custom} \
   CONFIG.TTC3_BOARD_INTERFACE {custom} \
   CONFIG.UART0_BOARD_INTERFACE {custom} \
   CONFIG.UART1_BOARD_INTERFACE {custom} \
   CONFIG.USB0_BOARD_INTERFACE {custom} \
   CONFIG.USB1_BOARD_INTERFACE {custom} \
 ] $zynq_ultra_ps_e_0

  # Create interface connections
  connect_bd_intf_net -intf_net PL_SYSREF_1 [get_bd_intf_ports PL_SYSREF] [get_bd_intf_pins mts_clk/PL_SYSREF]
  connect_bd_intf_net -intf_net PL_SYSTEM_CLK_1 [get_bd_intf_ports PL_SYSTEM_CLK] [get_bd_intf_pins mts_clk/PL_SYSTEM_CLK]
  connect_bd_intf_net -intf_net S_AXI_2 [get_bd_intf_pins hardware_trigger_blocks/S_AXI] [get_bd_intf_pins ps8_0_axi_periph/M01_AXI]
  connect_bd_intf_net -intf_net Vp_Vn_0_1 [get_bd_intf_ports Vp_Vn_0] [get_bd_intf_pins peripheral_ctrl_block/Vp_Vn_0]
  connect_bd_intf_net -intf_net adc0_clk_1 [get_bd_intf_ports adc0_clk] [get_bd_intf_pins rfadc_block/adc0_clk]
  connect_bd_intf_net -intf_net adc1_clk_1 [get_bd_intf_ports adc1_clk] [get_bd_intf_pins rfadc_block/adc1_clk]
  connect_bd_intf_net -intf_net adc2_clk_1 [get_bd_intf_ports adc2_clk] [get_bd_intf_pins rfadc_block/adc2_clk]
  connect_bd_intf_net -intf_net adc3_clk_1 [get_bd_intf_ports adc3_clk] [get_bd_intf_pins rfadc_block/adc3_clk]
  connect_bd_intf_net -intf_net axi_bram_ctrl_0_BRAM_PORTA [get_bd_intf_pins axi_bram_ctrl_0/BRAM_PORTA] [get_bd_intf_pins blk_mem_gen_0/BRAM_PORTA]
  connect_bd_intf_net -intf_net axi_bram_ctrl_0_BRAM_PORTB [get_bd_intf_pins axi_bram_ctrl_0/BRAM_PORTB] [get_bd_intf_pins blk_mem_gen_0/BRAM_PORTB]
  connect_bd_intf_net -intf_net axi_dma_0_M_AXI_S2MM [get_bd_intf_pins axi_dma_0/M_AXI_S2MM] [get_bd_intf_pins axi_smc/S00_AXI]
  connect_bd_intf_net -intf_net axi_dma_connector_0_M_AXIS [get_bd_intf_pins axi_dma_0/S_AXIS_S2MM] [get_bd_intf_pins axi_dma_connector_0/M_AXIS]
  connect_bd_intf_net -intf_net axi_smc_1_M00_AXI [get_bd_intf_pins axi_smc_1/M00_AXI] [get_bd_intf_pins peripheral_ctrl_block/S_AXI_CDCI6214]
  connect_bd_intf_net -intf_net axi_smc_1_M01_AXI [get_bd_intf_pins axi_smc_1/M01_AXI] [get_bd_intf_pins peripheral_ctrl_block/S_AXI_LITE_BASEDAC]
  connect_bd_intf_net -intf_net axi_smc_1_M02_AXI [get_bd_intf_pins axi_smc_1/M02_AXI] [get_bd_intf_pins peripheral_ctrl_block/S_AXI_LITE_SPI_LADC]
  connect_bd_intf_net -intf_net axi_smc_1_M03_AXI [get_bd_intf_pins axi_smc_1/M03_AXI] [get_bd_intf_pins peripheral_ctrl_block/S_AXI_PERIPHERAL_CTRL]
  connect_bd_intf_net -intf_net axi_smc_1_M04_AXI [get_bd_intf_pins axi_smc_1/M04_AXI] [get_bd_intf_pins peripheral_ctrl_block/S_AXI_SFP1]
  connect_bd_intf_net -intf_net axi_smc_1_M05_AXI [get_bd_intf_pins axi_smc_1/M05_AXI] [get_bd_intf_pins peripheral_ctrl_block/S_AXI_SFP2]
  connect_bd_intf_net -intf_net axi_smc_1_M06_AXI [get_bd_intf_pins axi_smc_1/M06_AXI] [get_bd_intf_pins peripheral_ctrl_block/S_AXI_LITE_SYS]
  connect_bd_intf_net -intf_net axi_smc_M00_AXI [get_bd_intf_pins axi_smc/M00_AXI] [get_bd_intf_pins zynq_ultra_ps_e_0/S_AXI_HPC0_FPD]
  connect_bd_intf_net -intf_net hardware_trigger_blocks_M_AXI [get_bd_intf_pins axi_bram_ctrl_0/S_AXI] [get_bd_intf_pins hardware_trigger_blocks/M_AXI]
  connect_bd_intf_net -intf_net hardware_trigger_blocks_M_AXIS [get_bd_intf_pins axi_dma_connector_0/S_AXIS] [get_bd_intf_pins hardware_trigger_blocks/M_AXIS]
  connect_bd_intf_net -intf_net lgain_adc_blocks_M_AXIS_LGAIN_ADC [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_LGAIN] [get_bd_intf_pins lgain_adc_blocks/M_AXIS_LGAIN_ADC]
connect_bd_intf_net -intf_net [get_bd_intf_nets lgain_adc_blocks_M_AXIS_LGAIN_ADC] [get_bd_intf_pins lgain_adc_blocks/M_AXIS_LGAIN_ADC] [get_bd_intf_pins system_ila_0/SLOT_0_AXIS]
  set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_intf_nets lgain_adc_blocks_M_AXIS_LGAIN_ADC]
  connect_bd_intf_net -intf_net lgain_adc_blocks_M_AXIS_LGAIN_ADC1 [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_LGAIN1] [get_bd_intf_pins lgain_adc_blocks/M_AXIS_LGAIN_ADC1]
connect_bd_intf_net -intf_net [get_bd_intf_nets lgain_adc_blocks_M_AXIS_LGAIN_ADC1] [get_bd_intf_pins lgain_adc_blocks/M_AXIS_LGAIN_ADC1] [get_bd_intf_pins system_ila_0/SLOT_1_AXIS]
  set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_intf_nets lgain_adc_blocks_M_AXIS_LGAIN_ADC1]
  connect_bd_intf_net -intf_net lgain_adc_blocks_M_AXIS_LGAIN_ADC2 [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_LGAIN2] [get_bd_intf_pins lgain_adc_blocks/M_AXIS_LGAIN_ADC2]
connect_bd_intf_net -intf_net [get_bd_intf_nets lgain_adc_blocks_M_AXIS_LGAIN_ADC2] [get_bd_intf_pins lgain_adc_blocks/M_AXIS_LGAIN_ADC2] [get_bd_intf_pins system_ila_0/SLOT_2_AXIS]
  set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_intf_nets lgain_adc_blocks_M_AXIS_LGAIN_ADC2]
  connect_bd_intf_net -intf_net lgain_adc_blocks_M_AXIS_LGAIN_ADC3 [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_LGAIN3] [get_bd_intf_pins lgain_adc_blocks/M_AXIS_LGAIN_ADC3]
connect_bd_intf_net -intf_net [get_bd_intf_nets lgain_adc_blocks_M_AXIS_LGAIN_ADC3] [get_bd_intf_pins lgain_adc_blocks/M_AXIS_LGAIN_ADC3] [get_bd_intf_pins system_ila_0/SLOT_3_AXIS]
  set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_intf_nets lgain_adc_blocks_M_AXIS_LGAIN_ADC3]
  connect_bd_intf_net -intf_net lgain_adc_blocks_M_AXIS_LGAIN_ADC4 [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_LGAIN4] [get_bd_intf_pins lgain_adc_blocks/M_AXIS_LGAIN_ADC4]
connect_bd_intf_net -intf_net [get_bd_intf_nets lgain_adc_blocks_M_AXIS_LGAIN_ADC4] [get_bd_intf_pins lgain_adc_blocks/M_AXIS_LGAIN_ADC4] [get_bd_intf_pins system_ila_0/SLOT_4_AXIS]
  set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_intf_nets lgain_adc_blocks_M_AXIS_LGAIN_ADC4]
  connect_bd_intf_net -intf_net lgain_adc_blocks_M_AXIS_LGAIN_ADC5 [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_LGAIN5] [get_bd_intf_pins lgain_adc_blocks/M_AXIS_LGAIN_ADC5]
connect_bd_intf_net -intf_net [get_bd_intf_nets lgain_adc_blocks_M_AXIS_LGAIN_ADC5] [get_bd_intf_pins lgain_adc_blocks/M_AXIS_LGAIN_ADC5] [get_bd_intf_pins system_ila_0/SLOT_5_AXIS]
  set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_intf_nets lgain_adc_blocks_M_AXIS_LGAIN_ADC5]
  connect_bd_intf_net -intf_net lgain_adc_blocks_M_AXIS_LGAIN_ADC6 [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_LGAIN6] [get_bd_intf_pins lgain_adc_blocks/M_AXIS_LGAIN_ADC6]
connect_bd_intf_net -intf_net [get_bd_intf_nets lgain_adc_blocks_M_AXIS_LGAIN_ADC6] [get_bd_intf_pins lgain_adc_blocks/M_AXIS_LGAIN_ADC6] [get_bd_intf_pins system_ila_0/SLOT_6_AXIS]
  set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_intf_nets lgain_adc_blocks_M_AXIS_LGAIN_ADC6]
  connect_bd_intf_net -intf_net lgain_adc_blocks_M_AXIS_LGAIN_ADC7 [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_LGAIN7] [get_bd_intf_pins lgain_adc_blocks/M_AXIS_LGAIN_ADC7]
connect_bd_intf_net -intf_net [get_bd_intf_nets lgain_adc_blocks_M_AXIS_LGAIN_ADC7] [get_bd_intf_pins lgain_adc_blocks/M_AXIS_LGAIN_ADC7] [get_bd_intf_pins system_ila_0/SLOT_7_AXIS]
  set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_intf_nets lgain_adc_blocks_M_AXIS_LGAIN_ADC7]
  connect_bd_intf_net -intf_net lgain_adc_blocks_M_AXIS_LGAIN_ADC8 [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_LGAIN8] [get_bd_intf_pins lgain_adc_blocks/M_AXIS_LGAIN_ADC8]
connect_bd_intf_net -intf_net [get_bd_intf_nets lgain_adc_blocks_M_AXIS_LGAIN_ADC8] [get_bd_intf_pins lgain_adc_blocks/M_AXIS_LGAIN_ADC8] [get_bd_intf_pins system_ila_0/SLOT_8_AXIS]
  set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_intf_nets lgain_adc_blocks_M_AXIS_LGAIN_ADC8]
  connect_bd_intf_net -intf_net lgain_adc_blocks_M_AXIS_LGAIN_ADC9 [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_LGAIN9] [get_bd_intf_pins lgain_adc_blocks/M_AXIS_LGAIN_ADC9]
connect_bd_intf_net -intf_net [get_bd_intf_nets lgain_adc_blocks_M_AXIS_LGAIN_ADC9] [get_bd_intf_pins lgain_adc_blocks/M_AXIS_LGAIN_ADC9] [get_bd_intf_pins system_ila_0/SLOT_9_AXIS]
  set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_intf_nets lgain_adc_blocks_M_AXIS_LGAIN_ADC9]
  connect_bd_intf_net -intf_net lgain_adc_blocks_M_AXIS_LGAIN_ADC10 [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_LGAIN10] [get_bd_intf_pins lgain_adc_blocks/M_AXIS_LGAIN_ADC10]
connect_bd_intf_net -intf_net [get_bd_intf_nets lgain_adc_blocks_M_AXIS_LGAIN_ADC10] [get_bd_intf_pins lgain_adc_blocks/M_AXIS_LGAIN_ADC10] [get_bd_intf_pins system_ila_0/SLOT_10_AXIS]
  set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_intf_nets lgain_adc_blocks_M_AXIS_LGAIN_ADC10]
  connect_bd_intf_net -intf_net lgain_adc_blocks_M_AXIS_LGAIN_ADC11 [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_LGAIN11] [get_bd_intf_pins lgain_adc_blocks/M_AXIS_LGAIN_ADC11]
connect_bd_intf_net -intf_net [get_bd_intf_nets lgain_adc_blocks_M_AXIS_LGAIN_ADC11] [get_bd_intf_pins lgain_adc_blocks/M_AXIS_LGAIN_ADC11] [get_bd_intf_pins system_ila_0/SLOT_11_AXIS]
  set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_intf_nets lgain_adc_blocks_M_AXIS_LGAIN_ADC11]
  connect_bd_intf_net -intf_net lgain_adc_blocks_M_AXIS_LGAIN_ADC12 [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_LGAIN12] [get_bd_intf_pins lgain_adc_blocks/M_AXIS_LGAIN_ADC12]
connect_bd_intf_net -intf_net [get_bd_intf_nets lgain_adc_blocks_M_AXIS_LGAIN_ADC12] [get_bd_intf_pins lgain_adc_blocks/M_AXIS_LGAIN_ADC12] [get_bd_intf_pins system_ila_0/SLOT_12_AXIS]
  set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_intf_nets lgain_adc_blocks_M_AXIS_LGAIN_ADC12]
  connect_bd_intf_net -intf_net lgain_adc_blocks_M_AXIS_LGAIN_ADC13 [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_LGAIN13] [get_bd_intf_pins lgain_adc_blocks/M_AXIS_LGAIN_ADC13]
connect_bd_intf_net -intf_net [get_bd_intf_nets lgain_adc_blocks_M_AXIS_LGAIN_ADC13] [get_bd_intf_pins lgain_adc_blocks/M_AXIS_LGAIN_ADC13] [get_bd_intf_pins system_ila_0/SLOT_13_AXIS]
  set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_intf_nets lgain_adc_blocks_M_AXIS_LGAIN_ADC13]
  connect_bd_intf_net -intf_net lgain_adc_blocks_M_AXIS_LGAIN_ADC14 [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_LGAIN14] [get_bd_intf_pins lgain_adc_blocks/M_AXIS_LGAIN_ADC14]
connect_bd_intf_net -intf_net [get_bd_intf_nets lgain_adc_blocks_M_AXIS_LGAIN_ADC14] [get_bd_intf_pins lgain_adc_blocks/M_AXIS_LGAIN_ADC14] [get_bd_intf_pins system_ila_0/SLOT_14_AXIS]
  set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_intf_nets lgain_adc_blocks_M_AXIS_LGAIN_ADC14]
  connect_bd_intf_net -intf_net lgain_adc_blocks_M_AXIS_LGAIN_ADC15 [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_LGAIN15] [get_bd_intf_pins lgain_adc_blocks/M_AXIS_LGAIN_ADC15]
connect_bd_intf_net -intf_net [get_bd_intf_nets lgain_adc_blocks_M_AXIS_LGAIN_ADC15] [get_bd_intf_pins lgain_adc_blocks/M_AXIS_LGAIN_ADC15] [get_bd_intf_pins system_ila_0/SLOT_15_AXIS]
  set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_intf_nets lgain_adc_blocks_M_AXIS_LGAIN_ADC15]
  connect_bd_intf_net -intf_net peripheral_ctrl_block_IIC_SFP1 [get_bd_intf_ports IIC_SFP1_0] [get_bd_intf_pins peripheral_ctrl_block/IIC_SFP1]
  connect_bd_intf_net -intf_net peripheral_ctrl_block_IIC_SFP2 [get_bd_intf_ports IIC_SFP2_0] [get_bd_intf_pins peripheral_ctrl_block/IIC_SFP2]
  connect_bd_intf_net -intf_net peripheral_ctrl_block_SPI_BASEDAC [get_bd_intf_ports SPI_BASEDAC_0] [get_bd_intf_pins peripheral_ctrl_block/SPI_BASEDAC]
  connect_bd_intf_net -intf_net ps8_0_axi_periph_M02_AXI [get_bd_intf_pins axi_gpio_0/S_AXI] [get_bd_intf_pins ps8_0_axi_periph/M02_AXI]
  connect_bd_intf_net -intf_net ps8_0_axi_periph_M03_AXI [get_bd_intf_pins axi_dma_0/S_AXI_LITE] [get_bd_intf_pins ps8_0_axi_periph/M03_AXI]
  connect_bd_intf_net -intf_net rfadc_block_M_AXIS_RFADC [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_RFADC] [get_bd_intf_pins rfadc_block/M_AXIS_RFADC]
  connect_bd_intf_net -intf_net rfadc_block_M_AXIS_RFADC1 [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_RFADC1] [get_bd_intf_pins rfadc_block/M_AXIS_RFADC1]
  connect_bd_intf_net -intf_net rfadc_block_M_AXIS_RFADC2 [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_RFADC2] [get_bd_intf_pins rfadc_block/M_AXIS_RFADC2]
  connect_bd_intf_net -intf_net rfadc_block_M_AXIS_RFADC3 [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_RFADC3] [get_bd_intf_pins rfadc_block/M_AXIS_RFADC3]
  connect_bd_intf_net -intf_net rfadc_block_M_AXIS_RFADC4 [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_RFADC4] [get_bd_intf_pins rfadc_block/M_AXIS_RFADC4]
  connect_bd_intf_net -intf_net rfadc_block_M_AXIS_RFADC5 [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_RFADC5] [get_bd_intf_pins rfadc_block/M_AXIS_RFADC5]
  connect_bd_intf_net -intf_net rfadc_block_M_AXIS_RFADC6 [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_RFADC6] [get_bd_intf_pins rfadc_block/M_AXIS_RFADC6]
  connect_bd_intf_net -intf_net rfadc_block_M_AXIS_RFADC7 [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_RFADC7] [get_bd_intf_pins rfadc_block/M_AXIS_RFADC7]
  connect_bd_intf_net -intf_net rfadc_block_M_AXIS_RFADC8 [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_RFADC8] [get_bd_intf_pins rfadc_block/M_AXIS_RFADC8]
  connect_bd_intf_net -intf_net rfadc_block_M_AXIS_RFADC9 [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_RFADC9] [get_bd_intf_pins rfadc_block/M_AXIS_RFADC9]
  connect_bd_intf_net -intf_net rfadc_block_M_AXIS_RFADC10 [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_RFADC10] [get_bd_intf_pins rfadc_block/M_AXIS_RFADC10]
  connect_bd_intf_net -intf_net rfadc_block_M_AXIS_RFADC11 [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_RFADC11] [get_bd_intf_pins rfadc_block/M_AXIS_RFADC11]
  connect_bd_intf_net -intf_net rfadc_block_M_AXIS_RFADC12 [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_RFADC12] [get_bd_intf_pins rfadc_block/M_AXIS_RFADC12]
  connect_bd_intf_net -intf_net rfadc_block_M_AXIS_RFADC13 [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_RFADC13] [get_bd_intf_pins rfadc_block/M_AXIS_RFADC13]
  connect_bd_intf_net -intf_net rfadc_block_M_AXIS_RFADC14 [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_RFADC14] [get_bd_intf_pins rfadc_block/M_AXIS_RFADC14]
  connect_bd_intf_net -intf_net rfadc_block_M_AXIS_RFADC15 [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_RFADC15] [get_bd_intf_pins rfadc_block/M_AXIS_RFADC15]
  connect_bd_intf_net -intf_net s_axi_1 [get_bd_intf_pins ps8_0_axi_periph/M00_AXI] [get_bd_intf_pins rfadc_block/s_axi]
  connect_bd_intf_net -intf_net sysref_in_1 [get_bd_intf_ports sysref_in] [get_bd_intf_pins rfadc_block/sysref_in]
  connect_bd_intf_net -intf_net vin00_1 [get_bd_intf_ports vin00] [get_bd_intf_pins rfadc_block/vin00]
  connect_bd_intf_net -intf_net vin01_1 [get_bd_intf_ports vin01] [get_bd_intf_pins rfadc_block/vin01]
  connect_bd_intf_net -intf_net vin02_1 [get_bd_intf_ports vin02] [get_bd_intf_pins rfadc_block/vin02]
  connect_bd_intf_net -intf_net vin03_1 [get_bd_intf_ports vin03] [get_bd_intf_pins rfadc_block/vin03]
  connect_bd_intf_net -intf_net vin10_1 [get_bd_intf_ports vin10] [get_bd_intf_pins rfadc_block/vin10]
  connect_bd_intf_net -intf_net vin11_1 [get_bd_intf_ports vin11] [get_bd_intf_pins rfadc_block/vin11]
  connect_bd_intf_net -intf_net vin12_1 [get_bd_intf_ports vin12] [get_bd_intf_pins rfadc_block/vin12]
  connect_bd_intf_net -intf_net vin13_1 [get_bd_intf_ports vin13] [get_bd_intf_pins rfadc_block/vin13]
  connect_bd_intf_net -intf_net vin20_1 [get_bd_intf_ports vin20] [get_bd_intf_pins rfadc_block/vin20]
  connect_bd_intf_net -intf_net vin21_1 [get_bd_intf_ports vin21] [get_bd_intf_pins rfadc_block/vin21]
  connect_bd_intf_net -intf_net vin22_1 [get_bd_intf_ports vin22] [get_bd_intf_pins rfadc_block/vin22]
  connect_bd_intf_net -intf_net vin23_1 [get_bd_intf_ports vin23] [get_bd_intf_pins rfadc_block/vin23]
  connect_bd_intf_net -intf_net vin30_1 [get_bd_intf_ports vin30] [get_bd_intf_pins rfadc_block/vin30]
  connect_bd_intf_net -intf_net vin31_1 [get_bd_intf_ports vin31] [get_bd_intf_pins rfadc_block/vin31]
  connect_bd_intf_net -intf_net vin32_1 [get_bd_intf_ports vin32] [get_bd_intf_pins rfadc_block/vin32]
  connect_bd_intf_net -intf_net vin33_1 [get_bd_intf_ports vin33] [get_bd_intf_pins rfadc_block/vin33]
  connect_bd_intf_net -intf_net xiphy_rx_pins_0_1 [get_bd_intf_ports xiphy_rx_pins_0] [get_bd_intf_pins lgain_adc_blocks/xiphy_rx_pins_0]
  connect_bd_intf_net -intf_net xiphy_rx_pins_1_1 [get_bd_intf_ports xiphy_rx_pins_1] [get_bd_intf_pins lgain_adc_blocks/xiphy_rx_pins_1]
  connect_bd_intf_net -intf_net xiphy_rx_pins_2_1 [get_bd_intf_ports xiphy_rx_pins_2] [get_bd_intf_pins lgain_adc_blocks/xiphy_rx_pins_2]
  connect_bd_intf_net -intf_net xiphy_rx_pins_3_1 [get_bd_intf_ports xiphy_rx_pins_3] [get_bd_intf_pins lgain_adc_blocks/xiphy_rx_pins_3]
  connect_bd_intf_net -intf_net zynq_ultra_ps_e_0_M_AXI_HPM0_FPD [get_bd_intf_pins ps8_0_axi_periph/S00_AXI] [get_bd_intf_pins zynq_ultra_ps_e_0/M_AXI_HPM0_FPD]
  connect_bd_intf_net -intf_net zynq_ultra_ps_e_0_M_AXI_HPM0_LPD [get_bd_intf_pins axi_smc_1/S00_AXI] [get_bd_intf_pins zynq_ultra_ps_e_0/M_AXI_HPM0_LPD]

  # Create port connections
  connect_bd_net -net CDCI6214_STATUS_0_1 [get_bd_ports CDCI6214_STATUS_0] [get_bd_pins peripheral_ctrl_block/CDCI6214_STATUS]
  connect_bd_net -net GPI_0_1 [get_bd_ports GPI_0] [get_bd_pins peripheral_ctrl_block/GPI]
  connect_bd_net -net LDAC_SDATA_0_1 [get_bd_ports LDAC_SDATA_0] [get_bd_pins peripheral_ctrl_block/LDAC_SDATA]
  connect_bd_net -net LEMO_1 [get_bd_ports LEMO] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net Net [get_bd_ports SPI_LADC_0_sck_io] [get_bd_pins peripheral_ctrl_block/SPI_LADC_0_sck_io]
  connect_bd_net -net Net1 [get_bd_ports SPI_LADC_0_io0_io] [get_bd_pins peripheral_ctrl_block/SPI_LADC_0_io0_io]
  connect_bd_net -net Net2 [get_bd_ports SPI_LADC_0_io1_io] [get_bd_pins peripheral_ctrl_block/SPI_LADC_0_io1_io]
  connect_bd_net -net Net3 [get_bd_ports SPI_LADC_0_ss_io] [get_bd_pins peripheral_ctrl_block/SPI_LADC_0_ss_io]
  connect_bd_net -net Net4 [get_bd_ports IIC_CDCI6214_0_sda_io] [get_bd_pins peripheral_ctrl_block/IIC_CDCI6214_0_sda_io]
  connect_bd_net -net Net5 [get_bd_ports IIC_CDCI6214_0_scl_io] [get_bd_pins peripheral_ctrl_block/IIC_CDCI6214_0_scl_io]
  connect_bd_net -net SFP1_MOD_ABS_0_1 [get_bd_ports SFP1_MOD_ABS_0] [get_bd_pins peripheral_ctrl_block/SFP1_MOD_ABS]
  connect_bd_net -net SFP1_RX_LOS_0_1 [get_bd_ports SFP1_RX_LOS_0] [get_bd_pins peripheral_ctrl_block/SFP1_RX_LOS]
  connect_bd_net -net SFP1_TX_FAULT_0_1 [get_bd_ports SFP1_TX_FAULT_0] [get_bd_pins peripheral_ctrl_block/SFP1_TX_FAULT]
  connect_bd_net -net SFP2_MOD_ABS_0_1 [get_bd_ports SFP2_MOD_ABS_0] [get_bd_pins peripheral_ctrl_block/SFP2_MOD_ABS]
  connect_bd_net -net SFP2_RX_LOS_0_1 [get_bd_ports SFP2_RX_LOS_0] [get_bd_pins peripheral_ctrl_block/SFP2_RX_LOS]
  connect_bd_net -net SFP2_TX_FAULT_0_1 [get_bd_ports SFP2_TX_FAULT_0] [get_bd_pins peripheral_ctrl_block/SFP2_TX_FAULT]
  connect_bd_net -net SYS_RST_1 [get_bd_ports SYS_RST] [get_bd_pins pl_clk0_rst/ext_reset_in] [get_bd_pins pl_user_clk2_rst/ext_reset_in] [get_bd_pins pl_user_clk_rst/ext_reset_in]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins axi_smc_1/aresetn] [get_bd_pins led_chika_1/RESETN] [get_bd_pins peripheral_ctrl_block/S_ARESETN] [get_bd_pins pl_clk0_rst/peripheral_aresetn]
  connect_bd_net -net axi_dma_0_s2mm_introut [get_bd_pins axi_dma_0/s2mm_introut] [get_bd_pins axi_dma_connector_0/AXIDMA_S2MM_INTR_IN] [get_bd_pins pl_intr_concat/In0]
  connect_bd_net -net axi_gpio_0_gpio2_io_o [get_bd_pins axi_gpio_0/gpio2_io_o] [get_bd_pins hardware_trigger_blocks/MODE_SWITCH_LOWER_THRESHOLD]
  connect_bd_net -net axi_gpio_0_gpio_io_o [get_bd_pins axi_gpio_0/gpio_io_o] [get_bd_pins hardware_trigger_blocks/MODE_SWITCH_UPPER_THRESHOLD]
  connect_bd_net -net c0_ddr4_ui_clk_rst_peripheral_aresetn [get_bd_pins axi_bram_ctrl_0/s_axi_aresetn] [get_bd_pins axi_dma_0/axi_resetn] [get_bd_pins axi_smc/aresetn] [get_bd_pins hardware_trigger_blocks/M_AXIS_ARESETN] [get_bd_pins led_chika_2/RESETN] [get_bd_pins pl_user_clk2_rst/peripheral_aresetn] [get_bd_pins ps8_0_axi_periph/M03_ARESETN]
  connect_bd_net -net fifo_rd_data_valid [get_bd_pins lgain_adc_blocks/fifo_rd_data_valid] [get_bd_pins system_ila_0/probe1]
  set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_nets fifo_rd_data_valid]
  connect_bd_net -net fifo_rd_data_valid1 [get_bd_pins lgain_adc_blocks/fifo_rd_data_valid1] [get_bd_pins system_ila_0/probe0]
  set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_nets fifo_rd_data_valid1]
  connect_bd_net -net fifo_rd_data_valid2 [get_bd_pins lgain_adc_blocks/fifo_rd_data_valid2] [get_bd_pins system_ila_0/probe2]
  set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_nets fifo_rd_data_valid2]
  connect_bd_net -net fifo_rd_data_valid3 [get_bd_pins lgain_adc_blocks/fifo_rd_data_valid3] [get_bd_pins system_ila_0/probe3]
  set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_nets fifo_rd_data_valid3]
  connect_bd_net -net led_chika_0_LED_OUT [get_bd_ports PL_USER_CLK_LED] [get_bd_pins led_chika_0/LED_OUT]
  connect_bd_net -net led_chika_1_LED_OUT [get_bd_ports PS_PL_CLK_LED] [get_bd_pins led_chika_1/LED_OUT]
  connect_bd_net -net led_chika_2_LED_OUT [get_bd_ports PL_USER_CLK2_LED] [get_bd_pins led_chika_2/LED_OUT]
  connect_bd_net -net mts_clk_pl_user_clk [get_bd_pins axi_gpio_0/s_axi_aclk] [get_bd_pins hardware_trigger_blocks/S_AXIS_ACLK] [get_bd_pins led_chika_0/CLK] [get_bd_pins lgain_adc_blocks/M_ACLK] [get_bd_pins mts_clk/pl_user_clk] [get_bd_pins pl_user_clk_rst/slowest_sync_clk] [get_bd_pins ps8_0_axi_periph/ACLK] [get_bd_pins ps8_0_axi_periph/M00_ACLK] [get_bd_pins ps8_0_axi_periph/M01_ACLK] [get_bd_pins ps8_0_axi_periph/M02_ACLK] [get_bd_pins ps8_0_axi_periph/S00_ACLK] [get_bd_pins rfadc_block/m1_axis_aclk] [get_bd_pins system_ila_0/clk] [get_bd_pins zynq_ultra_ps_e_0/maxihpm0_fpd_aclk]
  connect_bd_net -net mts_clk_pl_user_clk2 [get_bd_pins axi_bram_ctrl_0/s_axi_aclk] [get_bd_pins axi_dma_0/m_axi_s2mm_aclk] [get_bd_pins axi_dma_0/s_axi_lite_aclk] [get_bd_pins axi_dma_connector_0/ACLK] [get_bd_pins axi_smc/aclk] [get_bd_pins hardware_trigger_blocks/M_AXIS_ACLK] [get_bd_pins led_chika_2/CLK] [get_bd_pins mts_clk/pl_user_clk2] [get_bd_pins pl_user_clk2_rst/slowest_sync_clk] [get_bd_pins ps8_0_axi_periph/M03_ACLK] [get_bd_pins zynq_ultra_ps_e_0/saxihpc0_fpd_aclk]
  connect_bd_net -net mts_clk_pl_user_clk_locked [get_bd_ports PL_USER_CLK_LOCKED_LED] [get_bd_pins mts_clk/pl_user_clk_locked] [get_bd_pins pl_user_clk2_rst/dcm_locked] [get_bd_pins pl_user_clk_rst/dcm_locked]
  connect_bd_net -net peripheral_ctrl_block_BASELINE_ip2intc_irpt [get_bd_pins peripheral_ctrl_block/BASELINE_ip2intc_irpt] [get_bd_pins pl_intr_concat/In2]
  connect_bd_net -net peripheral_ctrl_block_CDCI6214_EEPROM_SEL [get_bd_ports CDCI6214_EEPROM_SEL_0] [get_bd_pins peripheral_ctrl_block/CDCI6214_EEPROM_SEL]
  connect_bd_net -net peripheral_ctrl_block_CDCI6214_OE [get_bd_ports CDCI6214_OE_0] [get_bd_pins peripheral_ctrl_block/CDCI6214_OE]
  connect_bd_net -net peripheral_ctrl_block_CDCI6214_OPMODE [get_bd_ports CDCI6214_OPMODE_0] [get_bd_pins peripheral_ctrl_block/CDCI6214_OPMODE]
  connect_bd_net -net peripheral_ctrl_block_CDCI6214_REF_SEL [get_bd_ports CDCI6214_REF_SEL_0] [get_bd_pins peripheral_ctrl_block/CDCI6214_REF_SEL]
  connect_bd_net -net peripheral_ctrl_block_CDCI6214_iic2intc_irpt [get_bd_pins peripheral_ctrl_block/CDCI6214_iic2intc_irpt] [get_bd_pins pl_intr_concat/In1]
  connect_bd_net -net peripheral_ctrl_block_GPO [get_bd_ports GPO_0] [get_bd_pins peripheral_ctrl_block/GPO]
  connect_bd_net -net peripheral_ctrl_block_LADC_CTRL1 [get_bd_ports LADC_CTRL1_0] [get_bd_pins peripheral_ctrl_block/LADC_CTRL1]
  connect_bd_net -net peripheral_ctrl_block_LADC_CTRL2 [get_bd_ports LADC_CTRL2_0] [get_bd_pins peripheral_ctrl_block/LADC_CTRL2]
  connect_bd_net -net peripheral_ctrl_block_LADC_OPMODE [get_bd_ports LADC_OPMODE_0] [get_bd_pins peripheral_ctrl_block/LADC_OPMODE]
  connect_bd_net -net peripheral_ctrl_block_LADC_ip2intc_irpt [get_bd_pins peripheral_ctrl_block/LADC_ip2intc_irpt] [get_bd_pins pl_intr_concat/In3]
  connect_bd_net -net peripheral_ctrl_block_LDAC_SEN_0 [get_bd_ports LDAC_SEN_0] [get_bd_pins peripheral_ctrl_block/LDAC_SEN]
  connect_bd_net -net peripheral_ctrl_block_SFP1_RS0 [get_bd_ports SFP1_RS0_0] [get_bd_pins peripheral_ctrl_block/SFP1_RS0]
  connect_bd_net -net peripheral_ctrl_block_SFP1_RS1 [get_bd_ports SFP1_RS1_0] [get_bd_pins peripheral_ctrl_block/SFP1_RS1]
  connect_bd_net -net peripheral_ctrl_block_SFP1_TX_DISABLE [get_bd_ports SFP1_TX_DISABLE_0] [get_bd_pins peripheral_ctrl_block/SFP1_TX_DISABLE]
  connect_bd_net -net peripheral_ctrl_block_SFP1_iic2intc_irpt [get_bd_pins peripheral_ctrl_block/SFP1_iic2intc_irpt] [get_bd_pins pl_intr_concat/In4]
  connect_bd_net -net peripheral_ctrl_block_SFP2_RS0 [get_bd_ports SFP2_RS0_0] [get_bd_pins peripheral_ctrl_block/SFP2_RS0]
  connect_bd_net -net peripheral_ctrl_block_SFP2_RS1 [get_bd_ports SFP2_RS1_0] [get_bd_pins peripheral_ctrl_block/SFP2_RS1]
  connect_bd_net -net peripheral_ctrl_block_SFP2_TX_DISABLE [get_bd_ports SFP2_TX_DISABLE_0] [get_bd_pins peripheral_ctrl_block/SFP2_TX_DISABLE]
  connect_bd_net -net peripheral_ctrl_block_SFP2_iic2intc_irpt [get_bd_pins peripheral_ctrl_block/SFP2_iic2intc_irpt] [get_bd_pins pl_intr_concat/In5]
  connect_bd_net -net pl_user_clk2_rst_peripheral_reset [get_bd_pins axi_dma_connector_0/ARESET] [get_bd_pins pl_user_clk2_rst/peripheral_reset]
  connect_bd_net -net pl_user_clk_rst_peripheral_aresetn [get_bd_pins axi_gpio_0/s_axi_aresetn] [get_bd_pins hardware_trigger_blocks/S_AXIS_ARESETN] [get_bd_pins led_chika_0/RESETN] [get_bd_pins lgain_adc_blocks/M_ARESETN] [get_bd_pins pl_user_clk_rst/peripheral_aresetn] [get_bd_pins ps8_0_axi_periph/ARESETN] [get_bd_pins ps8_0_axi_periph/M00_ARESETN] [get_bd_pins ps8_0_axi_periph/M01_ARESETN] [get_bd_pins ps8_0_axi_periph/M02_ARESETN] [get_bd_pins ps8_0_axi_periph/S00_ARESETN] [get_bd_pins rfadc_block/m2_axis_aresetn] [get_bd_pins system_ila_0/resetn]
  connect_bd_net -net pl_user_clk_rst_peripheral_reset [get_bd_pins lgain_adc_blocks/rst] [get_bd_pins pl_user_clk_rst/peripheral_reset]
  connect_bd_net -net user_sysref_adc_1 [get_bd_pins mts_clk/user_sysref_adc] [get_bd_pins rfadc_block/user_sysref_adc]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins hardware_trigger_blocks/EXTERNAL_TRIGGER] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins pl_intr_concat/dout] [get_bd_pins zynq_ultra_ps_e_0/pl_ps_irq0]
  connect_bd_net -net zynq_ultra_ps_e_0_pl_clk0 [get_bd_pins axi_smc_1/aclk] [get_bd_pins led_chika_1/CLK] [get_bd_pins peripheral_ctrl_block/S_ACLK] [get_bd_pins pl_clk0_rst/slowest_sync_clk] [get_bd_pins zynq_ultra_ps_e_0/maxihpm0_lpd_aclk] [get_bd_pins zynq_ultra_ps_e_0/pl_clk0]
  connect_bd_net -net zynq_ultra_ps_e_0_pl_clk1 [get_bd_pins peripheral_ctrl_block/ext_spi_clk] [get_bd_pins zynq_ultra_ps_e_0/pl_clk1]
  connect_bd_net -net zynq_ultra_ps_e_0_pl_resetn0 [get_bd_pins pl_clk0_rst/aux_reset_in] [get_bd_pins pl_user_clk2_rst/aux_reset_in] [get_bd_pins pl_user_clk_rst/aux_reset_in] [get_bd_pins zynq_ultra_ps_e_0/pl_resetn0]

  # Create address segments
  create_bd_addr_seg -range 0x80000000 -offset 0x00000000 [get_bd_addr_spaces axi_dma_0/Data_S2MM] [get_bd_addr_segs zynq_ultra_ps_e_0/SAXIGP0/HPC0_DDR_LOW] SEG_zynq_ultra_ps_e_0_HPC0_DDR_LOW
  create_bd_addr_seg -range 0x20000000 -offset 0xC0000000 [get_bd_addr_spaces axi_dma_0/Data_S2MM] [get_bd_addr_segs zynq_ultra_ps_e_0/SAXIGP0/HPC0_QSPI] SEG_zynq_ultra_ps_e_0_HPC0_QSPI
  create_bd_addr_seg -range 0x00001000 -offset 0xA0040000 [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs axi_dma_0/S_AXI_LITE/Reg] SEG_axi_dma_0_Reg
  create_bd_addr_seg -range 0x00001000 -offset 0xA0041000 [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs axi_gpio_0/S_AXI/Reg] SEG_axi_gpio_0_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x80020000 [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs peripheral_ctrl_block/axi_iic_0_CDCI6214_Bank88/S_AXI/Reg] SEG_axi_iic_0_CDCI6214_Bank88_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x80030000 [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs peripheral_ctrl_block/axi_iic_0_SFP1_Bank89/S_AXI/Reg] SEG_axi_iic_0_SFP1_Bank89_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x80040000 [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs peripheral_ctrl_block/axi_iic_0_SFP2_Bank90/S_AXI/Reg] SEG_axi_iic_0_SFP2_Bank90_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x80050000 [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs peripheral_ctrl_block/axi_quad_spi_0_LADC_bank87/AXI_LITE/Reg] SEG_axi_quad_spi_0_LADC_bank87_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x80060000 [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs peripheral_ctrl_block/axi_quad_spi_1_BASEDAC_bank84/AXI_LITE/Reg] SEG_axi_quad_spi_1_BASEDAC_bank84_Reg
  create_bd_addr_seg -range 0x00001000 -offset 0x80000000 [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs peripheral_ctrl_block/peripheral_controler_0/S_AXI/reg0] SEG_peripheral_controler_0_reg0
  create_bd_addr_seg -range 0x00002000 -offset 0x80008000 [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs peripheral_ctrl_block/system_management_wiz_0/S_AXI_LITE/Reg] SEG_system_management_wiz_0_Reg
  create_bd_addr_seg -range 0x00001000 -offset 0xA0042000 [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs hardware_trigger_blocks/trigger_configrator_0/S_AXI/reg0] SEG_trigger_configrator_0_reg0
  create_bd_addr_seg -range 0x00040000 -offset 0xA0000000 [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs rfadc_block/usp_rf_data_converter_0/s_axi/Reg] SEG_usp_rf_data_converter_0_Reg
  create_bd_addr_seg -range 0x00100000 -offset 0x00000000 [get_bd_addr_spaces hardware_trigger_blocks/axi_datamover_0/Data] [get_bd_addr_segs axi_bram_ctrl_0/S_AXI/Mem0] SEG_axi_bram_ctrl_0_Mem0

  # Exclude Address Segments
  create_bd_addr_seg -range 0x01000000 -offset 0xFF000000 [get_bd_addr_spaces axi_dma_0/Data_S2MM] [get_bd_addr_segs zynq_ultra_ps_e_0/SAXIGP0/HPC0_LPS_OCM] SEG_zynq_ultra_ps_e_0_HPC0_LPS_OCM
  exclude_bd_addr_seg [get_bd_addr_segs axi_dma_0/Data_S2MM/SEG_zynq_ultra_ps_e_0_HPC0_LPS_OCM]



  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_mogura2_fee()
cr_bd_mogura2_fee ""
set_property EXCLUDE_DEBUG_LOGIC "0" [get_files mogura2_fee.bd ] 
set_property GENERATE_SYNTH_CHECKPOINT "1" [get_files mogura2_fee.bd ] 
set_property IS_ENABLED "1" [get_files mogura2_fee.bd ] 
set_property IS_GLOBAL_INCLUDE "0" [get_files mogura2_fee.bd ] 
set_property IS_LOCKED "0" [get_files mogura2_fee.bd ] 
set_property LIBRARY "xil_defaultlib" [get_files mogura2_fee.bd ] 
set_property PATH_MODE "RelativeFirst" [get_files mogura2_fee.bd ] 
set_property PFM_NAME "" [get_files mogura2_fee.bd ] 
set_property REGISTERED_WITH_MANAGER "1" [get_files mogura2_fee.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files mogura2_fee.bd ] 
set_property USED_IN "synthesis implementation simulation" [get_files mogura2_fee.bd ] 
set_property USED_IN_IMPLEMENTATION "1" [get_files mogura2_fee.bd ] 
set_property USED_IN_SIMULATION "1" [get_files mogura2_fee.bd ] 
set_property USED_IN_SYNTHESIS "1" [get_files mogura2_fee.bd ] 

if { [get_files iic_cdci6214_customif.v] == "" } {
  import_files -quiet -fileset sources_1 E:/KRD/project_tcl/MoGURA2_PROTOTYPE/MoGURA2_FEE/iic_cdci6214_customif.v
}
if { [get_files spi_ladc_customif.v] == "" } {
  import_files -quiet -fileset sources_1 E:/KRD/project_tcl/MoGURA2_PROTOTYPE/MoGURA2_FEE/spi_ladc_customif.v
}
if { [get_files peripheral_controler.v] == "" } {
  import_files -quiet -fileset sources_1 E:/KRD/proto_ip_code/peripheral_controler/peripheral_controler.v
}


# Proc to create BD peripheral_blocks
proc cr_bd_peripheral_blocks { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# iic_cdci6214_customif, peripheral_controler, spi_ladc_customif



  # CHANGE DESIGN NAME HERE
  set design_name peripheral_blocks

  common::send_msg_id "BD_TCL-003" "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:axi_iic:2.0\
  xilinx.com:ip:axi_quad_spi:3.2\
  xilinx.com:ip:system_management_wiz:1.3\
  "

   set list_ips_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  iic_cdci6214_customif\
  peripheral_controler\
  spi_ladc_customif\
  "

   set list_mods_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_msg_id "BD_TCL-008" "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_msg_id "BD_TCL-1003" "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  
# Hierarchical cell: peripheral_ctrl_block
proc create_hier_cell_peripheral_ctrl_block { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_peripheral_ctrl_block() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:iic_rtl:1.0 IIC_SFP1

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:iic_rtl:1.0 IIC_SFP2

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:spi_rtl:1.0 SPI_BASEDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI_CDCI6214

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI_LITE_BASEDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI_LITE_SPI_LADC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI_LITE_SYS

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI_PERIPHERAL_CTRL

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI_SFP1

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI_SFP2

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vp_Vn_0


  # Create pins
  create_bd_pin -dir O -type intr BASELINE_ip2intc_irpt
  create_bd_pin -dir O CDCI6214_EEPROM_SEL
  create_bd_pin -dir O CDCI6214_OE
  create_bd_pin -dir O CDCI6214_OPMODE
  create_bd_pin -dir O CDCI6214_REF_SEL
  create_bd_pin -dir I CDCI6214_STATUS
  create_bd_pin -dir O -type intr CDCI6214_iic2intc_irpt
  create_bd_pin -dir I -from 3 -to 0 GPI
  create_bd_pin -dir O -from 3 -to 0 GPO
  create_bd_pin -dir IO IIC_CDCI6214_0_scl_io
  create_bd_pin -dir IO IIC_CDCI6214_0_sda_io
  create_bd_pin -dir O -from 7 -to 0 LADC_CTRL1
  create_bd_pin -dir O -from 7 -to 0 LADC_CTRL2
  create_bd_pin -dir O LADC_OPMODE
  create_bd_pin -dir O -type intr LADC_ip2intc_irpt
  create_bd_pin -dir I -from 6 -to 0 LDAC_SDATA
  create_bd_pin -dir O -from 6 -to 0 LDAC_SEN
  create_bd_pin -dir I SFP1_MOD_ABS
  create_bd_pin -dir O SFP1_RS0
  create_bd_pin -dir O SFP1_RS1
  create_bd_pin -dir I SFP1_RX_LOS
  create_bd_pin -dir O SFP1_TX_DISABLE
  create_bd_pin -dir I SFP1_TX_FAULT
  create_bd_pin -dir O -type intr SFP1_iic2intc_irpt
  create_bd_pin -dir I SFP2_MOD_ABS
  create_bd_pin -dir O SFP2_RS0
  create_bd_pin -dir O SFP2_RS1
  create_bd_pin -dir I SFP2_RX_LOS
  create_bd_pin -dir O SFP2_TX_DISABLE
  create_bd_pin -dir I SFP2_TX_FAULT
  create_bd_pin -dir O -type intr SFP2_iic2intc_irpt
  create_bd_pin -dir IO SPI_LADC_0_io0_io
  create_bd_pin -dir IO SPI_LADC_0_io1_io
  create_bd_pin -dir IO SPI_LADC_0_sck_io
  create_bd_pin -dir IO SPI_LADC_0_ss_io
  create_bd_pin -dir I -type clk S_ACLK
  create_bd_pin -dir I -type rst S_ARESETN
  create_bd_pin -dir I -type clk ext_spi_clk

  # Create instance: axi_iic_0_CDCI6214_Bank88, and set properties
  set axi_iic_0_CDCI6214_Bank88 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_iic:2.0 axi_iic_0_CDCI6214_Bank88 ]

  # Create instance: axi_iic_0_SFP1_Bank89, and set properties
  set axi_iic_0_SFP1_Bank89 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_iic:2.0 axi_iic_0_SFP1_Bank89 ]

  # Create instance: axi_iic_0_SFP2_Bank90, and set properties
  set axi_iic_0_SFP2_Bank90 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_iic:2.0 axi_iic_0_SFP2_Bank90 ]

  # Create instance: axi_quad_spi_0_LADC_bank87, and set properties
  set axi_quad_spi_0_LADC_bank87 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_quad_spi:3.2 axi_quad_spi_0_LADC_bank87 ]
  set_property -dict [ list \
   CONFIG.C_NUM_SS_BITS {1} \
   CONFIG.C_SCK_RATIO {16} \
   CONFIG.C_TYPE_OF_AXI4_INTERFACE {0} \
   CONFIG.C_XIP_MODE {0} \
 ] $axi_quad_spi_0_LADC_bank87

  # Create instance: axi_quad_spi_1_BASEDAC_bank84, and set properties
  set axi_quad_spi_1_BASEDAC_bank84 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_quad_spi:3.2 axi_quad_spi_1_BASEDAC_bank84 ]
  set_property -dict [ list \
   CONFIG.C_SCK_RATIO {16} \
   CONFIG.C_TYPE_OF_AXI4_INTERFACE {0} \
   CONFIG.C_XIP_MODE {0} \
 ] $axi_quad_spi_1_BASEDAC_bank84

  # Create instance: iic_cdci6214_customif_0, and set properties
  set block_name iic_cdci6214_customif
  set block_cell_name iic_cdci6214_customif_0
  if { [catch {set iic_cdci6214_customif_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $iic_cdci6214_customif_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: peripheral_controler_0, and set properties
  set block_name peripheral_controler
  set block_cell_name peripheral_controler_0
  if { [catch {set peripheral_controler_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $peripheral_controler_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: spi_ladc_customif_0, and set properties
  set block_name spi_ladc_customif
  set block_cell_name spi_ladc_customif_0
  if { [catch {set spi_ladc_customif_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $spi_ladc_customif_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: system_management_wiz_0, and set properties
  set system_management_wiz_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:system_management_wiz:1.3 system_management_wiz_0 ]
  set_property -dict [ list \
   CONFIG.DCLK_FREQUENCY {125} \
 ] $system_management_wiz_0

  # Create interface connections
  connect_bd_intf_net -intf_net AXI_LITE_0_1 [get_bd_intf_pins S_AXI_LITE_SPI_LADC] [get_bd_intf_pins axi_quad_spi_0_LADC_bank87/AXI_LITE]
  connect_bd_intf_net -intf_net AXI_LITE_1_1 [get_bd_intf_pins S_AXI_LITE_BASEDAC] [get_bd_intf_pins axi_quad_spi_1_BASEDAC_bank84/AXI_LITE]
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins Vp_Vn_0] [get_bd_intf_pins system_management_wiz_0/Vp_Vn]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins S_AXI_LITE_SYS] [get_bd_intf_pins system_management_wiz_0/S_AXI_LITE]
  connect_bd_intf_net -intf_net S_AXI_0_1 [get_bd_intf_pins S_AXI_CDCI6214] [get_bd_intf_pins axi_iic_0_CDCI6214_Bank88/S_AXI]
  connect_bd_intf_net -intf_net S_AXI_1_1 [get_bd_intf_pins S_AXI_SFP1] [get_bd_intf_pins axi_iic_0_SFP1_Bank89/S_AXI]
  connect_bd_intf_net -intf_net S_AXI_2_1 [get_bd_intf_pins S_AXI_SFP2] [get_bd_intf_pins axi_iic_0_SFP2_Bank90/S_AXI]
  connect_bd_intf_net -intf_net S_AXI_PERIPHERAL_CTRL_1 [get_bd_intf_pins S_AXI_PERIPHERAL_CTRL] [get_bd_intf_pins peripheral_controler_0/S_AXI]
  connect_bd_intf_net -intf_net axi_iic_0_SFP1_Bank89_IIC [get_bd_intf_pins IIC_SFP1] [get_bd_intf_pins axi_iic_0_SFP1_Bank89/IIC]
  connect_bd_intf_net -intf_net axi_iic_0_SFP2_Bank90_IIC [get_bd_intf_pins IIC_SFP2] [get_bd_intf_pins axi_iic_0_SFP2_Bank90/IIC]
  connect_bd_intf_net -intf_net axi_quad_spi_1_BASEDAC_bank84_SPI_0 [get_bd_intf_pins SPI_BASEDAC] [get_bd_intf_pins axi_quad_spi_1_BASEDAC_bank84/SPI_0]

  # Create port connections
  connect_bd_net -net CDCI6214_STATUS_1 [get_bd_pins CDCI6214_STATUS] [get_bd_pins peripheral_controler_0/CDCI6214_STATUS]
  connect_bd_net -net GPI_1 [get_bd_pins GPI] [get_bd_pins peripheral_controler_0/GPI]
  connect_bd_net -net LDAC_SDATA_1 [get_bd_pins LDAC_SDATA] [get_bd_pins spi_ladc_customif_0/LDAC_SDATA]
  connect_bd_net -net Net [get_bd_pins SPI_LADC_0_sck_io] [get_bd_pins spi_ladc_customif_0/SPI_LADC_0_sck_io]
  connect_bd_net -net Net1 [get_bd_pins SPI_LADC_0_io0_io] [get_bd_pins spi_ladc_customif_0/SPI_LADC_0_io0_io]
  connect_bd_net -net Net2 [get_bd_pins SPI_LADC_0_io1_io] [get_bd_pins spi_ladc_customif_0/SPI_LADC_0_io1_io]
  connect_bd_net -net Net3 [get_bd_pins SPI_LADC_0_ss_io] [get_bd_pins spi_ladc_customif_0/SPI_LADC_0_ss_io]
  connect_bd_net -net Net4 [get_bd_pins IIC_CDCI6214_0_sda_io] [get_bd_pins iic_cdci6214_customif_0/IIC_CDCI6214_0_sda_io]
  connect_bd_net -net Net5 [get_bd_pins IIC_CDCI6214_0_scl_io] [get_bd_pins iic_cdci6214_customif_0/IIC_CDCI6214_0_scl_io]
  connect_bd_net -net SFP1_MOD_ABS_1 [get_bd_pins SFP1_MOD_ABS] [get_bd_pins peripheral_controler_0/SFP1_MOD_ABS]
  connect_bd_net -net SFP1_RX_LOS_1 [get_bd_pins SFP1_RX_LOS] [get_bd_pins peripheral_controler_0/SFP1_RX_LOS]
  connect_bd_net -net SFP1_TX_FAULT_1 [get_bd_pins SFP1_TX_FAULT] [get_bd_pins peripheral_controler_0/SFP1_TX_FAULT]
  connect_bd_net -net SFP2_MOD_ABS_1 [get_bd_pins SFP2_MOD_ABS] [get_bd_pins peripheral_controler_0/SFP2_MOD_ABS]
  connect_bd_net -net SFP2_RX_LOS_1 [get_bd_pins SFP2_RX_LOS] [get_bd_pins peripheral_controler_0/SFP2_RX_LOS]
  connect_bd_net -net SFP2_TX_FAULT_1 [get_bd_pins SFP2_TX_FAULT] [get_bd_pins peripheral_controler_0/SFP2_TX_FAULT]
  connect_bd_net -net S_ACLK_1 [get_bd_pins S_ACLK] [get_bd_pins axi_iic_0_CDCI6214_Bank88/s_axi_aclk] [get_bd_pins axi_iic_0_SFP1_Bank89/s_axi_aclk] [get_bd_pins axi_iic_0_SFP2_Bank90/s_axi_aclk] [get_bd_pins axi_quad_spi_0_LADC_bank87/s_axi_aclk] [get_bd_pins axi_quad_spi_1_BASEDAC_bank84/ext_spi_clk] [get_bd_pins axi_quad_spi_1_BASEDAC_bank84/s_axi_aclk] [get_bd_pins iic_cdci6214_customif_0/CLK] [get_bd_pins peripheral_controler_0/S_AXI_ACLK] [get_bd_pins system_management_wiz_0/s_axi_aclk]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins S_ARESETN] [get_bd_pins axi_iic_0_CDCI6214_Bank88/s_axi_aresetn] [get_bd_pins axi_iic_0_SFP1_Bank89/s_axi_aresetn] [get_bd_pins axi_iic_0_SFP2_Bank90/s_axi_aresetn] [get_bd_pins axi_quad_spi_0_LADC_bank87/s_axi_aresetn] [get_bd_pins axi_quad_spi_1_BASEDAC_bank84/s_axi_aresetn] [get_bd_pins peripheral_controler_0/S_AXI_ARESETN] [get_bd_pins system_management_wiz_0/s_axi_aresetn]
  connect_bd_net -net axi_iic_0_CDCI6214_Bank88_iic2intc_irpt [get_bd_pins CDCI6214_iic2intc_irpt] [get_bd_pins axi_iic_0_CDCI6214_Bank88/iic2intc_irpt]
  connect_bd_net -net axi_iic_0_CDCI6214_Bank88_scl_o [get_bd_pins axi_iic_0_CDCI6214_Bank88/scl_o] [get_bd_pins iic_cdci6214_customif_0/IIC_CDCI6214_0_scl_o]
  connect_bd_net -net axi_iic_0_CDCI6214_Bank88_scl_t [get_bd_pins axi_iic_0_CDCI6214_Bank88/scl_t] [get_bd_pins iic_cdci6214_customif_0/IIC_CDCI6214_0_scl_t]
  connect_bd_net -net axi_iic_0_CDCI6214_Bank88_sda_o [get_bd_pins axi_iic_0_CDCI6214_Bank88/sda_o] [get_bd_pins iic_cdci6214_customif_0/IIC_CDCI6214_0_sda_o]
  connect_bd_net -net axi_iic_0_CDCI6214_Bank88_sda_t [get_bd_pins axi_iic_0_CDCI6214_Bank88/sda_t] [get_bd_pins iic_cdci6214_customif_0/IIC_CDCI6214_0_sda_t]
  connect_bd_net -net axi_iic_0_SFP1_Bank89_iic2intc_irpt [get_bd_pins SFP1_iic2intc_irpt] [get_bd_pins axi_iic_0_SFP1_Bank89/iic2intc_irpt]
  connect_bd_net -net axi_iic_0_SFP2_Bank90_iic2intc_irpt [get_bd_pins SFP2_iic2intc_irpt] [get_bd_pins axi_iic_0_SFP2_Bank90/iic2intc_irpt]
  connect_bd_net -net axi_quad_spi_0_LADC_bank87_io0_o [get_bd_pins axi_quad_spi_0_LADC_bank87/io0_o] [get_bd_pins spi_ladc_customif_0/SPI_LADC_0_io0_o]
  connect_bd_net -net axi_quad_spi_0_LADC_bank87_io0_t [get_bd_pins axi_quad_spi_0_LADC_bank87/io0_t] [get_bd_pins spi_ladc_customif_0/SPI_LADC_0_io0_t]
  connect_bd_net -net axi_quad_spi_0_LADC_bank87_io1_o [get_bd_pins axi_quad_spi_0_LADC_bank87/io1_o] [get_bd_pins spi_ladc_customif_0/SPI_LADC_0_io1_o]
  connect_bd_net -net axi_quad_spi_0_LADC_bank87_io1_t [get_bd_pins axi_quad_spi_0_LADC_bank87/io1_t] [get_bd_pins spi_ladc_customif_0/SPI_LADC_0_io1_t]
  connect_bd_net -net axi_quad_spi_0_LADC_bank87_ip2intc_irpt [get_bd_pins LADC_ip2intc_irpt] [get_bd_pins axi_quad_spi_0_LADC_bank87/ip2intc_irpt]
  connect_bd_net -net axi_quad_spi_0_LADC_bank87_sck_o [get_bd_pins axi_quad_spi_0_LADC_bank87/sck_o] [get_bd_pins spi_ladc_customif_0/SPI_LADC_0_sck_o]
  connect_bd_net -net axi_quad_spi_0_LADC_bank87_sck_t [get_bd_pins axi_quad_spi_0_LADC_bank87/sck_t] [get_bd_pins spi_ladc_customif_0/SPI_LADC_0_sck_t]
  connect_bd_net -net axi_quad_spi_0_LADC_bank87_ss_o [get_bd_pins axi_quad_spi_0_LADC_bank87/ss_o] [get_bd_pins spi_ladc_customif_0/SPI_LADC_0_ss_o]
  connect_bd_net -net axi_quad_spi_0_LADC_bank87_ss_t [get_bd_pins axi_quad_spi_0_LADC_bank87/ss_t] [get_bd_pins spi_ladc_customif_0/SPI_LADC_0_ss_t]
  connect_bd_net -net axi_quad_spi_1_BASEDAC_bank84_ip2intc_irpt [get_bd_pins BASELINE_ip2intc_irpt] [get_bd_pins axi_quad_spi_1_BASEDAC_bank84/ip2intc_irpt]
  connect_bd_net -net ext_spi_clk_1 [get_bd_pins ext_spi_clk] [get_bd_pins axi_quad_spi_0_LADC_bank87/ext_spi_clk]
  connect_bd_net -net iic_cdci6214_customif_0_IIC_CDCI6214_0_scl_i [get_bd_pins axi_iic_0_CDCI6214_Bank88/scl_i] [get_bd_pins iic_cdci6214_customif_0/IIC_CDCI6214_0_scl_i]
  connect_bd_net -net iic_cdci6214_customif_0_IIC_CDCI6214_0_sda_i [get_bd_pins axi_iic_0_CDCI6214_Bank88/sda_i] [get_bd_pins iic_cdci6214_customif_0/IIC_CDCI6214_0_sda_i]
  connect_bd_net -net peripheral_controler_0_CDCI6214_EEPROM_SEL [get_bd_pins CDCI6214_EEPROM_SEL] [get_bd_pins peripheral_controler_0/CDCI6214_EEPROM_SEL]
  connect_bd_net -net peripheral_controler_0_CDCI6214_OE [get_bd_pins CDCI6214_OE] [get_bd_pins peripheral_controler_0/CDCI6214_OE]
  connect_bd_net -net peripheral_controler_0_CDCI6214_OPMODE [get_bd_pins CDCI6214_OPMODE] [get_bd_pins peripheral_controler_0/CDCI6214_OPMODE]
  connect_bd_net -net peripheral_controler_0_CDCI6214_REF_SEL [get_bd_pins CDCI6214_REF_SEL] [get_bd_pins peripheral_controler_0/CDCI6214_REF_SEL]
  connect_bd_net -net peripheral_controler_0_GPO [get_bd_pins GPO] [get_bd_pins peripheral_controler_0/GPO]
  connect_bd_net -net peripheral_controler_0_LADC_CTRL1 [get_bd_pins LADC_CTRL1] [get_bd_pins peripheral_controler_0/LADC_CTRL1]
  connect_bd_net -net peripheral_controler_0_LADC_CTRL2 [get_bd_pins LADC_CTRL2] [get_bd_pins peripheral_controler_0/LADC_CTRL2]
  connect_bd_net -net peripheral_controler_0_LADC_OPMODE [get_bd_pins LADC_OPMODE] [get_bd_pins peripheral_controler_0/LADC_OPMODE]
  connect_bd_net -net peripheral_controler_0_LADC_SEN [get_bd_pins peripheral_controler_0/LADC_SEN] [get_bd_pins spi_ladc_customif_0/LADC_SEN]
  connect_bd_net -net peripheral_controler_0_SFP1_RS0 [get_bd_pins SFP1_RS0] [get_bd_pins peripheral_controler_0/SFP1_RS0]
  connect_bd_net -net peripheral_controler_0_SFP1_RS1 [get_bd_pins SFP1_RS1] [get_bd_pins peripheral_controler_0/SFP1_RS1]
  connect_bd_net -net peripheral_controler_0_SFP1_TX_DISABLE [get_bd_pins SFP1_TX_DISABLE] [get_bd_pins peripheral_controler_0/SFP1_TX_DISABLE]
  connect_bd_net -net peripheral_controler_0_SFP2_RS0 [get_bd_pins SFP2_RS0] [get_bd_pins peripheral_controler_0/SFP2_RS0]
  connect_bd_net -net peripheral_controler_0_SFP2_RS1 [get_bd_pins SFP2_RS1] [get_bd_pins peripheral_controler_0/SFP2_RS1]
  connect_bd_net -net peripheral_controler_0_SFP2_TX_DISABLE [get_bd_pins SFP2_TX_DISABLE] [get_bd_pins peripheral_controler_0/SFP2_TX_DISABLE]
  connect_bd_net -net spi_ladc_customif_0_LDAC_SEN [get_bd_pins LDAC_SEN] [get_bd_pins spi_ladc_customif_0/LDAC_SEN]
  connect_bd_net -net spi_ladc_customif_0_SPI_LADC_0_io0_i [get_bd_pins axi_quad_spi_0_LADC_bank87/io0_i] [get_bd_pins spi_ladc_customif_0/SPI_LADC_0_io0_i]
  connect_bd_net -net spi_ladc_customif_0_SPI_LADC_0_io1_i [get_bd_pins axi_quad_spi_0_LADC_bank87/io1_i] [get_bd_pins spi_ladc_customif_0/SPI_LADC_0_io1_i]
  connect_bd_net -net spi_ladc_customif_0_SPI_LADC_0_sck_i [get_bd_pins axi_quad_spi_0_LADC_bank87/sck_i] [get_bd_pins spi_ladc_customif_0/SPI_LADC_0_sck_i]
  connect_bd_net -net spi_ladc_customif_0_SPI_LADC_0_ss_i [get_bd_pins axi_quad_spi_0_LADC_bank87/ss_i] [get_bd_pins spi_ladc_customif_0/SPI_LADC_0_ss_i]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports

  # Create ports

  # Create instance: peripheral_ctrl_block
  create_hier_cell_peripheral_ctrl_block [current_bd_instance .] peripheral_ctrl_block

  # Create port connections

  # Create address segments


  # Restore current instance
  current_bd_instance $oldCurInst

  save_bd_design
common::send_msg_id "BD_TCL-1000" "WARNING" "This Tcl script was generated from a block design that has not been validated. It is possible that design <$design_name> may result in errors during validation."

  close_bd_design $design_name 
}
# End of cr_bd_peripheral_blocks()
cr_bd_peripheral_blocks ""
set_property EXCLUDE_DEBUG_LOGIC "0" [get_files peripheral_blocks.bd ] 
set_property GENERATE_SYNTH_CHECKPOINT "1" [get_files peripheral_blocks.bd ] 
set_property IS_ENABLED "1" [get_files peripheral_blocks.bd ] 
set_property IS_GLOBAL_INCLUDE "0" [get_files peripheral_blocks.bd ] 
set_property IS_LOCKED "0" [get_files peripheral_blocks.bd ] 
set_property LIBRARY "xil_defaultlib" [get_files peripheral_blocks.bd ] 
set_property PATH_MODE "RelativeFirst" [get_files peripheral_blocks.bd ] 
set_property PFM_NAME "" [get_files peripheral_blocks.bd ] 
set_property REGISTERED_WITH_MANAGER "1" [get_files peripheral_blocks.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files peripheral_blocks.bd ] 
set_property USED_IN "" [get_files peripheral_blocks.bd ] 
set_property USED_IN_IMPLEMENTATION "0" [get_files peripheral_blocks.bd ] 
set_property USED_IN_SIMULATION "0" [get_files peripheral_blocks.bd ] 
set_property USED_IN_SYNTHESIS "0" [get_files peripheral_blocks.bd ] 



# Proc to create BD ladc_block
proc cr_bd_ladc_block { parentCell } {

  # CHANGE DESIGN NAME HERE
  set design_name ladc_block

  common::send_msg_id "BD_TCL-003" "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  teldevice.local:user:ADC_IF_TEST:1.0\
  xilinx.com:ip:proc_sys_reset:5.0\
  xilinx.com:ip:vio:3.0\
  xilinx.com:ip:xlconstant:1.1\
  teldevice.local:user:ADC_IF_TEST_1:1.0\
  teldevice.local:user:ADC_IF_TEST_2:1.0\
  teldevice.local:user:ADC_IF_TEST_3:1.0\
  xilinx.com:ip:axis_clock_converter:1.1\
  xilinx.com:ip:xlconcat:2.1\
  xilinx.com:ip:util_vector_logic:2.0\
  xilinx.com:ip:fifo_generator:13.2\
  xilinx.com:ip:util_reduced_logic:2.0\
  xilinx.com:ip:xlslice:1.0\
  "

   set list_ips_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  if { $bCheckIPsPassed != 1 } {
    common::send_msg_id "BD_TCL-1003" "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  
# Hierarchical cell: hier_3
proc create_hier_cell_hier_3_3 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hier_3_3() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 Din
  create_bd_pin -dir O -from 31 -to 0 dout_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {32} \
 ] $xlconcat_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {9} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create instance: xlslice_10, and set properties
  set xlslice_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {10} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_10

  # Create instance: xlslice_11, and set properties
  set xlslice_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_11 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {11} \
   CONFIG.DIN_TO {11} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_11

  # Create instance: xlslice_12, and set properties
  set xlslice_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_12 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {12} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_12

  # Create instance: xlslice_13, and set properties
  set xlslice_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_13 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {13} \
   CONFIG.DIN_TO {13} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_13

  # Create instance: xlslice_14, and set properties
  set xlslice_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_14 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {14} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_14

  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {15} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_15

  # Create instance: xlslice_16, and set properties
  set xlslice_16 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_16 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_16

  # Create instance: xlslice_17, and set properties
  set xlslice_17 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_17 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_17

  # Create instance: xlslice_18, and set properties
  set xlslice_18 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_18 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_18

  # Create instance: xlslice_19, and set properties
  set xlslice_19 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_19 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {19} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_19

  # Create instance: xlslice_20, and set properties
  set xlslice_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_20 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {20} \
   CONFIG.DIN_TO {20} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_20

  # Create instance: xlslice_21, and set properties
  set xlslice_21 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_21 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {21} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_21

  # Create instance: xlslice_22, and set properties
  set xlslice_22 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_22 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {22} \
   CONFIG.DIN_TO {22} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_22

  # Create instance: xlslice_23, and set properties
  set xlslice_23 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_23 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {23} \
   CONFIG.DIN_TO {23} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_23

  # Create instance: xlslice_24, and set properties
  set xlslice_24 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_24 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {24} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_24

  # Create instance: xlslice_25, and set properties
  set xlslice_25 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_25 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_25

  # Create instance: xlslice_26, and set properties
  set xlslice_26 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_26 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {26} \
   CONFIG.DIN_TO {26} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_26

  # Create instance: xlslice_27, and set properties
  set xlslice_27 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_27 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {27} \
   CONFIG.DIN_TO {27} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_27

  # Create instance: xlslice_28, and set properties
  set xlslice_28 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_28 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {28} \
   CONFIG.DIN_TO {28} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_28

  # Create instance: xlslice_29, and set properties
  set xlslice_29 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_29 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {29} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_29

  # Create instance: xlslice_30, and set properties
  set xlslice_30 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_30 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {30} \
   CONFIG.DIN_TO {30} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_30

  # Create instance: xlslice_31, and set properties
  set xlslice_31 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_31 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {31} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_31

  # Create port connections
  connect_bd_net -net xlconcat_0_dout [get_bd_pins Din] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_10/Din] [get_bd_pins xlslice_11/Din] [get_bd_pins xlslice_12/Din] [get_bd_pins xlslice_13/Din] [get_bd_pins xlslice_14/Din] [get_bd_pins xlslice_15/Din] [get_bd_pins xlslice_16/Din] [get_bd_pins xlslice_17/Din] [get_bd_pins xlslice_18/Din] [get_bd_pins xlslice_19/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_20/Din] [get_bd_pins xlslice_21/Din] [get_bd_pins xlslice_22/Din] [get_bd_pins xlslice_23/Din] [get_bd_pins xlslice_24/Din] [get_bd_pins xlslice_25/Din] [get_bd_pins xlslice_26/Din] [get_bd_pins xlslice_27/Din] [get_bd_pins xlslice_28/Din] [get_bd_pins xlslice_29/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_30/Din] [get_bd_pins xlslice_31/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net xlconcat_0_dout1 [get_bd_pins dout_0] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlconcat_0/In12] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_10_Dout [get_bd_pins xlconcat_0/In5] [get_bd_pins xlslice_10/Dout]
  connect_bd_net -net xlslice_11_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_11/Dout]
  connect_bd_net -net xlslice_12_Dout [get_bd_pins xlconcat_0/In29] [get_bd_pins xlslice_12/Dout]
  connect_bd_net -net xlslice_13_Dout [get_bd_pins xlconcat_0/In25] [get_bd_pins xlslice_13/Dout]
  connect_bd_net -net xlslice_14_Dout [get_bd_pins xlconcat_0/In21] [get_bd_pins xlslice_14/Dout]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins xlconcat_0/In17] [get_bd_pins xlslice_15/Dout]
  connect_bd_net -net xlslice_16_Dout [get_bd_pins xlconcat_0/In14] [get_bd_pins xlslice_16/Dout]
  connect_bd_net -net xlslice_17_Dout [get_bd_pins xlconcat_0/In10] [get_bd_pins xlslice_17/Dout]
  connect_bd_net -net xlslice_18_Dout [get_bd_pins xlconcat_0/In6] [get_bd_pins xlslice_18/Dout]
  connect_bd_net -net xlslice_19_Dout [get_bd_pins xlconcat_0/In2] [get_bd_pins xlslice_19/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlconcat_0/In8] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_20_Dout [get_bd_pins xlconcat_0/In30] [get_bd_pins xlslice_20/Dout]
  connect_bd_net -net xlslice_21_Dout [get_bd_pins xlconcat_0/In26] [get_bd_pins xlslice_21/Dout]
  connect_bd_net -net xlslice_22_Dout [get_bd_pins xlconcat_0/In22] [get_bd_pins xlslice_22/Dout]
  connect_bd_net -net xlslice_23_Dout [get_bd_pins xlconcat_0/In18] [get_bd_pins xlslice_23/Dout]
  connect_bd_net -net xlslice_24_Dout [get_bd_pins xlconcat_0/In15] [get_bd_pins xlslice_24/Dout]
  connect_bd_net -net xlslice_25_Dout [get_bd_pins xlconcat_0/In11] [get_bd_pins xlslice_25/Dout]
  connect_bd_net -net xlslice_26_Dout [get_bd_pins xlconcat_0/In7] [get_bd_pins xlslice_26/Dout]
  connect_bd_net -net xlslice_27_Dout [get_bd_pins xlconcat_0/In3] [get_bd_pins xlslice_27/Dout]
  connect_bd_net -net xlslice_28_Dout [get_bd_pins xlconcat_0/In31] [get_bd_pins xlslice_28/Dout]
  connect_bd_net -net xlslice_29_Dout [get_bd_pins xlconcat_0/In27] [get_bd_pins xlslice_29/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlconcat_0/In4] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_30_Dout [get_bd_pins xlconcat_0/In23] [get_bd_pins xlslice_30/Dout]
  connect_bd_net -net xlslice_31_Dout [get_bd_pins xlconcat_0/In19] [get_bd_pins xlslice_31/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlconcat_0/In0] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlconcat_0/In28] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins xlconcat_0/In24] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins xlconcat_0/In20] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlconcat_0/In16] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_0/In13] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlconcat_0/In9] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hier_1
proc create_hier_cell_hier_1_3 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hier_1_3() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 Din
  create_bd_pin -dir O -from 31 -to 0 dout_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {32} \
 ] $xlconcat_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {9} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create instance: xlslice_10, and set properties
  set xlslice_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {10} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_10

  # Create instance: xlslice_11, and set properties
  set xlslice_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_11 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {11} \
   CONFIG.DIN_TO {11} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_11

  # Create instance: xlslice_12, and set properties
  set xlslice_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_12 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {12} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_12

  # Create instance: xlslice_13, and set properties
  set xlslice_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_13 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {13} \
   CONFIG.DIN_TO {13} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_13

  # Create instance: xlslice_14, and set properties
  set xlslice_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_14 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {14} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_14

  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {15} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_15

  # Create instance: xlslice_16, and set properties
  set xlslice_16 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_16 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_16

  # Create instance: xlslice_17, and set properties
  set xlslice_17 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_17 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_17

  # Create instance: xlslice_18, and set properties
  set xlslice_18 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_18 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_18

  # Create instance: xlslice_19, and set properties
  set xlslice_19 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_19 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {19} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_19

  # Create instance: xlslice_20, and set properties
  set xlslice_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_20 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {20} \
   CONFIG.DIN_TO {20} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_20

  # Create instance: xlslice_21, and set properties
  set xlslice_21 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_21 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {21} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_21

  # Create instance: xlslice_22, and set properties
  set xlslice_22 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_22 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {22} \
   CONFIG.DIN_TO {22} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_22

  # Create instance: xlslice_23, and set properties
  set xlslice_23 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_23 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {23} \
   CONFIG.DIN_TO {23} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_23

  # Create instance: xlslice_24, and set properties
  set xlslice_24 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_24 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {24} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_24

  # Create instance: xlslice_25, and set properties
  set xlslice_25 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_25 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_25

  # Create instance: xlslice_26, and set properties
  set xlslice_26 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_26 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {26} \
   CONFIG.DIN_TO {26} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_26

  # Create instance: xlslice_27, and set properties
  set xlslice_27 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_27 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {27} \
   CONFIG.DIN_TO {27} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_27

  # Create instance: xlslice_28, and set properties
  set xlslice_28 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_28 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {28} \
   CONFIG.DIN_TO {28} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_28

  # Create instance: xlslice_29, and set properties
  set xlslice_29 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_29 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {29} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_29

  # Create instance: xlslice_30, and set properties
  set xlslice_30 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_30 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {30} \
   CONFIG.DIN_TO {30} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_30

  # Create instance: xlslice_31, and set properties
  set xlslice_31 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_31 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {31} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_31

  # Create port connections
  connect_bd_net -net xlconcat_0_dout [get_bd_pins Din] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_10/Din] [get_bd_pins xlslice_11/Din] [get_bd_pins xlslice_12/Din] [get_bd_pins xlslice_13/Din] [get_bd_pins xlslice_14/Din] [get_bd_pins xlslice_15/Din] [get_bd_pins xlslice_16/Din] [get_bd_pins xlslice_17/Din] [get_bd_pins xlslice_18/Din] [get_bd_pins xlslice_19/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_20/Din] [get_bd_pins xlslice_21/Din] [get_bd_pins xlslice_22/Din] [get_bd_pins xlslice_23/Din] [get_bd_pins xlslice_24/Din] [get_bd_pins xlslice_25/Din] [get_bd_pins xlslice_26/Din] [get_bd_pins xlslice_27/Din] [get_bd_pins xlslice_28/Din] [get_bd_pins xlslice_29/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_30/Din] [get_bd_pins xlslice_31/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net xlconcat_0_dout1 [get_bd_pins dout_0] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlconcat_0/In12] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_10_Dout [get_bd_pins xlconcat_0/In5] [get_bd_pins xlslice_10/Dout]
  connect_bd_net -net xlslice_11_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_11/Dout]
  connect_bd_net -net xlslice_12_Dout [get_bd_pins xlconcat_0/In29] [get_bd_pins xlslice_12/Dout]
  connect_bd_net -net xlslice_13_Dout [get_bd_pins xlconcat_0/In25] [get_bd_pins xlslice_13/Dout]
  connect_bd_net -net xlslice_14_Dout [get_bd_pins xlconcat_0/In21] [get_bd_pins xlslice_14/Dout]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins xlconcat_0/In17] [get_bd_pins xlslice_15/Dout]
  connect_bd_net -net xlslice_16_Dout [get_bd_pins xlconcat_0/In14] [get_bd_pins xlslice_16/Dout]
  connect_bd_net -net xlslice_17_Dout [get_bd_pins xlconcat_0/In10] [get_bd_pins xlslice_17/Dout]
  connect_bd_net -net xlslice_18_Dout [get_bd_pins xlconcat_0/In6] [get_bd_pins xlslice_18/Dout]
  connect_bd_net -net xlslice_19_Dout [get_bd_pins xlconcat_0/In2] [get_bd_pins xlslice_19/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlconcat_0/In8] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_20_Dout [get_bd_pins xlconcat_0/In30] [get_bd_pins xlslice_20/Dout]
  connect_bd_net -net xlslice_21_Dout [get_bd_pins xlconcat_0/In26] [get_bd_pins xlslice_21/Dout]
  connect_bd_net -net xlslice_22_Dout [get_bd_pins xlconcat_0/In22] [get_bd_pins xlslice_22/Dout]
  connect_bd_net -net xlslice_23_Dout [get_bd_pins xlconcat_0/In18] [get_bd_pins xlslice_23/Dout]
  connect_bd_net -net xlslice_24_Dout [get_bd_pins xlconcat_0/In15] [get_bd_pins xlslice_24/Dout]
  connect_bd_net -net xlslice_25_Dout [get_bd_pins xlconcat_0/In11] [get_bd_pins xlslice_25/Dout]
  connect_bd_net -net xlslice_26_Dout [get_bd_pins xlconcat_0/In7] [get_bd_pins xlslice_26/Dout]
  connect_bd_net -net xlslice_27_Dout [get_bd_pins xlconcat_0/In3] [get_bd_pins xlslice_27/Dout]
  connect_bd_net -net xlslice_28_Dout [get_bd_pins xlconcat_0/In31] [get_bd_pins xlslice_28/Dout]
  connect_bd_net -net xlslice_29_Dout [get_bd_pins xlconcat_0/In27] [get_bd_pins xlslice_29/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlconcat_0/In4] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_30_Dout [get_bd_pins xlconcat_0/In23] [get_bd_pins xlslice_30/Dout]
  connect_bd_net -net xlslice_31_Dout [get_bd_pins xlconcat_0/In19] [get_bd_pins xlslice_31/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlconcat_0/In0] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlconcat_0/In28] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins xlconcat_0/In24] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins xlconcat_0/In20] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlconcat_0/In16] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_0/In13] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlconcat_0/In9] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hier_2
proc create_hier_cell_hier_2_3 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hier_2_3() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 Din
  create_bd_pin -dir O -from 31 -to 0 dout_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {32} \
 ] $xlconcat_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {9} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create instance: xlslice_10, and set properties
  set xlslice_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {10} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_10

  # Create instance: xlslice_11, and set properties
  set xlslice_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_11 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {11} \
   CONFIG.DIN_TO {11} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_11

  # Create instance: xlslice_12, and set properties
  set xlslice_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_12 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {12} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_12

  # Create instance: xlslice_13, and set properties
  set xlslice_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_13 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {13} \
   CONFIG.DIN_TO {13} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_13

  # Create instance: xlslice_14, and set properties
  set xlslice_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_14 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {14} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_14

  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {15} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_15

  # Create instance: xlslice_16, and set properties
  set xlslice_16 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_16 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_16

  # Create instance: xlslice_17, and set properties
  set xlslice_17 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_17 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_17

  # Create instance: xlslice_18, and set properties
  set xlslice_18 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_18 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_18

  # Create instance: xlslice_19, and set properties
  set xlslice_19 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_19 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {19} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_19

  # Create instance: xlslice_20, and set properties
  set xlslice_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_20 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {20} \
   CONFIG.DIN_TO {20} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_20

  # Create instance: xlslice_21, and set properties
  set xlslice_21 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_21 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {21} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_21

  # Create instance: xlslice_22, and set properties
  set xlslice_22 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_22 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {22} \
   CONFIG.DIN_TO {22} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_22

  # Create instance: xlslice_23, and set properties
  set xlslice_23 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_23 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {23} \
   CONFIG.DIN_TO {23} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_23

  # Create instance: xlslice_24, and set properties
  set xlslice_24 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_24 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {24} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_24

  # Create instance: xlslice_25, and set properties
  set xlslice_25 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_25 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_25

  # Create instance: xlslice_26, and set properties
  set xlslice_26 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_26 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {26} \
   CONFIG.DIN_TO {26} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_26

  # Create instance: xlslice_27, and set properties
  set xlslice_27 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_27 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {27} \
   CONFIG.DIN_TO {27} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_27

  # Create instance: xlslice_28, and set properties
  set xlslice_28 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_28 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {28} \
   CONFIG.DIN_TO {28} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_28

  # Create instance: xlslice_29, and set properties
  set xlslice_29 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_29 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {29} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_29

  # Create instance: xlslice_30, and set properties
  set xlslice_30 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_30 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {30} \
   CONFIG.DIN_TO {30} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_30

  # Create instance: xlslice_31, and set properties
  set xlslice_31 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_31 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {31} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_31

  # Create port connections
  connect_bd_net -net xlconcat_0_dout [get_bd_pins Din] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_10/Din] [get_bd_pins xlslice_11/Din] [get_bd_pins xlslice_12/Din] [get_bd_pins xlslice_13/Din] [get_bd_pins xlslice_14/Din] [get_bd_pins xlslice_15/Din] [get_bd_pins xlslice_16/Din] [get_bd_pins xlslice_17/Din] [get_bd_pins xlslice_18/Din] [get_bd_pins xlslice_19/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_20/Din] [get_bd_pins xlslice_21/Din] [get_bd_pins xlslice_22/Din] [get_bd_pins xlslice_23/Din] [get_bd_pins xlslice_24/Din] [get_bd_pins xlslice_25/Din] [get_bd_pins xlslice_26/Din] [get_bd_pins xlslice_27/Din] [get_bd_pins xlslice_28/Din] [get_bd_pins xlslice_29/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_30/Din] [get_bd_pins xlslice_31/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net xlconcat_0_dout1 [get_bd_pins dout_0] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlconcat_0/In12] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_10_Dout [get_bd_pins xlconcat_0/In5] [get_bd_pins xlslice_10/Dout]
  connect_bd_net -net xlslice_11_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_11/Dout]
  connect_bd_net -net xlslice_12_Dout [get_bd_pins xlconcat_0/In29] [get_bd_pins xlslice_12/Dout]
  connect_bd_net -net xlslice_13_Dout [get_bd_pins xlconcat_0/In25] [get_bd_pins xlslice_13/Dout]
  connect_bd_net -net xlslice_14_Dout [get_bd_pins xlconcat_0/In21] [get_bd_pins xlslice_14/Dout]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins xlconcat_0/In17] [get_bd_pins xlslice_15/Dout]
  connect_bd_net -net xlslice_16_Dout [get_bd_pins xlconcat_0/In14] [get_bd_pins xlslice_16/Dout]
  connect_bd_net -net xlslice_17_Dout [get_bd_pins xlconcat_0/In10] [get_bd_pins xlslice_17/Dout]
  connect_bd_net -net xlslice_18_Dout [get_bd_pins xlconcat_0/In6] [get_bd_pins xlslice_18/Dout]
  connect_bd_net -net xlslice_19_Dout [get_bd_pins xlconcat_0/In2] [get_bd_pins xlslice_19/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlconcat_0/In8] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_20_Dout [get_bd_pins xlconcat_0/In30] [get_bd_pins xlslice_20/Dout]
  connect_bd_net -net xlslice_21_Dout [get_bd_pins xlconcat_0/In26] [get_bd_pins xlslice_21/Dout]
  connect_bd_net -net xlslice_22_Dout [get_bd_pins xlconcat_0/In22] [get_bd_pins xlslice_22/Dout]
  connect_bd_net -net xlslice_23_Dout [get_bd_pins xlconcat_0/In18] [get_bd_pins xlslice_23/Dout]
  connect_bd_net -net xlslice_24_Dout [get_bd_pins xlconcat_0/In15] [get_bd_pins xlslice_24/Dout]
  connect_bd_net -net xlslice_25_Dout [get_bd_pins xlconcat_0/In11] [get_bd_pins xlslice_25/Dout]
  connect_bd_net -net xlslice_26_Dout [get_bd_pins xlconcat_0/In7] [get_bd_pins xlslice_26/Dout]
  connect_bd_net -net xlslice_27_Dout [get_bd_pins xlconcat_0/In3] [get_bd_pins xlslice_27/Dout]
  connect_bd_net -net xlslice_28_Dout [get_bd_pins xlconcat_0/In31] [get_bd_pins xlslice_28/Dout]
  connect_bd_net -net xlslice_29_Dout [get_bd_pins xlconcat_0/In27] [get_bd_pins xlslice_29/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlconcat_0/In4] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_30_Dout [get_bd_pins xlconcat_0/In23] [get_bd_pins xlslice_30/Dout]
  connect_bd_net -net xlslice_31_Dout [get_bd_pins xlconcat_0/In19] [get_bd_pins xlslice_31/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlconcat_0/In0] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlconcat_0/In28] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins xlconcat_0/In24] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins xlconcat_0/In20] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlconcat_0/In16] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_0/In13] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlconcat_0/In9] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hier_0
proc create_hier_cell_hier_0_3 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hier_0_3() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 Din
  create_bd_pin -dir O -from 31 -to 0 dout_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {32} \
 ] $xlconcat_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {9} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create instance: xlslice_10, and set properties
  set xlslice_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {10} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_10

  # Create instance: xlslice_11, and set properties
  set xlslice_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_11 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {11} \
   CONFIG.DIN_TO {11} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_11

  # Create instance: xlslice_12, and set properties
  set xlslice_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_12 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {12} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_12

  # Create instance: xlslice_13, and set properties
  set xlslice_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_13 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {13} \
   CONFIG.DIN_TO {13} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_13

  # Create instance: xlslice_14, and set properties
  set xlslice_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_14 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {14} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_14

  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {15} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_15

  # Create instance: xlslice_16, and set properties
  set xlslice_16 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_16 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_16

  # Create instance: xlslice_17, and set properties
  set xlslice_17 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_17 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_17

  # Create instance: xlslice_18, and set properties
  set xlslice_18 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_18 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_18

  # Create instance: xlslice_19, and set properties
  set xlslice_19 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_19 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {19} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_19

  # Create instance: xlslice_20, and set properties
  set xlslice_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_20 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {20} \
   CONFIG.DIN_TO {20} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_20

  # Create instance: xlslice_21, and set properties
  set xlslice_21 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_21 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {21} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_21

  # Create instance: xlslice_22, and set properties
  set xlslice_22 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_22 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {22} \
   CONFIG.DIN_TO {22} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_22

  # Create instance: xlslice_23, and set properties
  set xlslice_23 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_23 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {23} \
   CONFIG.DIN_TO {23} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_23

  # Create instance: xlslice_24, and set properties
  set xlslice_24 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_24 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {24} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_24

  # Create instance: xlslice_25, and set properties
  set xlslice_25 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_25 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_25

  # Create instance: xlslice_26, and set properties
  set xlslice_26 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_26 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {26} \
   CONFIG.DIN_TO {26} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_26

  # Create instance: xlslice_27, and set properties
  set xlslice_27 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_27 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {27} \
   CONFIG.DIN_TO {27} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_27

  # Create instance: xlslice_28, and set properties
  set xlslice_28 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_28 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {28} \
   CONFIG.DIN_TO {28} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_28

  # Create instance: xlslice_29, and set properties
  set xlslice_29 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_29 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {29} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_29

  # Create instance: xlslice_30, and set properties
  set xlslice_30 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_30 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {30} \
   CONFIG.DIN_TO {30} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_30

  # Create instance: xlslice_31, and set properties
  set xlslice_31 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_31 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {31} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_31

  # Create port connections
  connect_bd_net -net xlconcat_0_dout [get_bd_pins Din] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_10/Din] [get_bd_pins xlslice_11/Din] [get_bd_pins xlslice_12/Din] [get_bd_pins xlslice_13/Din] [get_bd_pins xlslice_14/Din] [get_bd_pins xlslice_15/Din] [get_bd_pins xlslice_16/Din] [get_bd_pins xlslice_17/Din] [get_bd_pins xlslice_18/Din] [get_bd_pins xlslice_19/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_20/Din] [get_bd_pins xlslice_21/Din] [get_bd_pins xlslice_22/Din] [get_bd_pins xlslice_23/Din] [get_bd_pins xlslice_24/Din] [get_bd_pins xlslice_25/Din] [get_bd_pins xlslice_26/Din] [get_bd_pins xlslice_27/Din] [get_bd_pins xlslice_28/Din] [get_bd_pins xlslice_29/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_30/Din] [get_bd_pins xlslice_31/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net xlconcat_0_dout1 [get_bd_pins dout_0] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlconcat_0/In12] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_10_Dout [get_bd_pins xlconcat_0/In5] [get_bd_pins xlslice_10/Dout]
  connect_bd_net -net xlslice_11_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_11/Dout]
  connect_bd_net -net xlslice_12_Dout [get_bd_pins xlconcat_0/In29] [get_bd_pins xlslice_12/Dout]
  connect_bd_net -net xlslice_13_Dout [get_bd_pins xlconcat_0/In25] [get_bd_pins xlslice_13/Dout]
  connect_bd_net -net xlslice_14_Dout [get_bd_pins xlconcat_0/In21] [get_bd_pins xlslice_14/Dout]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins xlconcat_0/In17] [get_bd_pins xlslice_15/Dout]
  connect_bd_net -net xlslice_16_Dout [get_bd_pins xlconcat_0/In14] [get_bd_pins xlslice_16/Dout]
  connect_bd_net -net xlslice_17_Dout [get_bd_pins xlconcat_0/In10] [get_bd_pins xlslice_17/Dout]
  connect_bd_net -net xlslice_18_Dout [get_bd_pins xlconcat_0/In6] [get_bd_pins xlslice_18/Dout]
  connect_bd_net -net xlslice_19_Dout [get_bd_pins xlconcat_0/In2] [get_bd_pins xlslice_19/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlconcat_0/In8] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_20_Dout [get_bd_pins xlconcat_0/In30] [get_bd_pins xlslice_20/Dout]
  connect_bd_net -net xlslice_21_Dout [get_bd_pins xlconcat_0/In26] [get_bd_pins xlslice_21/Dout]
  connect_bd_net -net xlslice_22_Dout [get_bd_pins xlconcat_0/In22] [get_bd_pins xlslice_22/Dout]
  connect_bd_net -net xlslice_23_Dout [get_bd_pins xlconcat_0/In18] [get_bd_pins xlslice_23/Dout]
  connect_bd_net -net xlslice_24_Dout [get_bd_pins xlconcat_0/In15] [get_bd_pins xlslice_24/Dout]
  connect_bd_net -net xlslice_25_Dout [get_bd_pins xlconcat_0/In11] [get_bd_pins xlslice_25/Dout]
  connect_bd_net -net xlslice_26_Dout [get_bd_pins xlconcat_0/In7] [get_bd_pins xlslice_26/Dout]
  connect_bd_net -net xlslice_27_Dout [get_bd_pins xlconcat_0/In3] [get_bd_pins xlslice_27/Dout]
  connect_bd_net -net xlslice_28_Dout [get_bd_pins xlconcat_0/In31] [get_bd_pins xlslice_28/Dout]
  connect_bd_net -net xlslice_29_Dout [get_bd_pins xlconcat_0/In27] [get_bd_pins xlslice_29/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlconcat_0/In4] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_30_Dout [get_bd_pins xlconcat_0/In23] [get_bd_pins xlslice_30/Dout]
  connect_bd_net -net xlslice_31_Dout [get_bd_pins xlconcat_0/In19] [get_bd_pins xlslice_31/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlconcat_0/In0] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlconcat_0/In28] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins xlconcat_0/In24] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins xlconcat_0/In20] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlconcat_0/In16] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_0/In13] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlconcat_0/In9] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hier_0
proc create_hier_cell_hier_0_2 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hier_0_2() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 Din
  create_bd_pin -dir O -from 31 -to 0 dout_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {32} \
 ] $xlconcat_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {9} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create instance: xlslice_10, and set properties
  set xlslice_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {10} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_10

  # Create instance: xlslice_11, and set properties
  set xlslice_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_11 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {11} \
   CONFIG.DIN_TO {11} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_11

  # Create instance: xlslice_12, and set properties
  set xlslice_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_12 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {12} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_12

  # Create instance: xlslice_13, and set properties
  set xlslice_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_13 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {13} \
   CONFIG.DIN_TO {13} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_13

  # Create instance: xlslice_14, and set properties
  set xlslice_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_14 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {14} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_14

  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {15} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_15

  # Create instance: xlslice_16, and set properties
  set xlslice_16 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_16 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_16

  # Create instance: xlslice_17, and set properties
  set xlslice_17 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_17 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_17

  # Create instance: xlslice_18, and set properties
  set xlslice_18 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_18 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_18

  # Create instance: xlslice_19, and set properties
  set xlslice_19 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_19 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {19} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_19

  # Create instance: xlslice_20, and set properties
  set xlslice_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_20 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {20} \
   CONFIG.DIN_TO {20} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_20

  # Create instance: xlslice_21, and set properties
  set xlslice_21 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_21 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {21} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_21

  # Create instance: xlslice_22, and set properties
  set xlslice_22 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_22 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {22} \
   CONFIG.DIN_TO {22} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_22

  # Create instance: xlslice_23, and set properties
  set xlslice_23 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_23 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {23} \
   CONFIG.DIN_TO {23} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_23

  # Create instance: xlslice_24, and set properties
  set xlslice_24 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_24 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {24} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_24

  # Create instance: xlslice_25, and set properties
  set xlslice_25 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_25 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_25

  # Create instance: xlslice_26, and set properties
  set xlslice_26 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_26 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {26} \
   CONFIG.DIN_TO {26} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_26

  # Create instance: xlslice_27, and set properties
  set xlslice_27 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_27 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {27} \
   CONFIG.DIN_TO {27} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_27

  # Create instance: xlslice_28, and set properties
  set xlslice_28 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_28 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {28} \
   CONFIG.DIN_TO {28} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_28

  # Create instance: xlslice_29, and set properties
  set xlslice_29 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_29 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {29} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_29

  # Create instance: xlslice_30, and set properties
  set xlslice_30 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_30 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {30} \
   CONFIG.DIN_TO {30} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_30

  # Create instance: xlslice_31, and set properties
  set xlslice_31 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_31 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {31} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_31

  # Create port connections
  connect_bd_net -net xlconcat_0_dout [get_bd_pins Din] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_10/Din] [get_bd_pins xlslice_11/Din] [get_bd_pins xlslice_12/Din] [get_bd_pins xlslice_13/Din] [get_bd_pins xlslice_14/Din] [get_bd_pins xlslice_15/Din] [get_bd_pins xlslice_16/Din] [get_bd_pins xlslice_17/Din] [get_bd_pins xlslice_18/Din] [get_bd_pins xlslice_19/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_20/Din] [get_bd_pins xlslice_21/Din] [get_bd_pins xlslice_22/Din] [get_bd_pins xlslice_23/Din] [get_bd_pins xlslice_24/Din] [get_bd_pins xlslice_25/Din] [get_bd_pins xlslice_26/Din] [get_bd_pins xlslice_27/Din] [get_bd_pins xlslice_28/Din] [get_bd_pins xlslice_29/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_30/Din] [get_bd_pins xlslice_31/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net xlconcat_0_dout1 [get_bd_pins dout_0] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlconcat_0/In12] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_10_Dout [get_bd_pins xlconcat_0/In5] [get_bd_pins xlslice_10/Dout]
  connect_bd_net -net xlslice_11_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_11/Dout]
  connect_bd_net -net xlslice_12_Dout [get_bd_pins xlconcat_0/In29] [get_bd_pins xlslice_12/Dout]
  connect_bd_net -net xlslice_13_Dout [get_bd_pins xlconcat_0/In25] [get_bd_pins xlslice_13/Dout]
  connect_bd_net -net xlslice_14_Dout [get_bd_pins xlconcat_0/In21] [get_bd_pins xlslice_14/Dout]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins xlconcat_0/In17] [get_bd_pins xlslice_15/Dout]
  connect_bd_net -net xlslice_16_Dout [get_bd_pins xlconcat_0/In14] [get_bd_pins xlslice_16/Dout]
  connect_bd_net -net xlslice_17_Dout [get_bd_pins xlconcat_0/In10] [get_bd_pins xlslice_17/Dout]
  connect_bd_net -net xlslice_18_Dout [get_bd_pins xlconcat_0/In6] [get_bd_pins xlslice_18/Dout]
  connect_bd_net -net xlslice_19_Dout [get_bd_pins xlconcat_0/In2] [get_bd_pins xlslice_19/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlconcat_0/In8] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_20_Dout [get_bd_pins xlconcat_0/In30] [get_bd_pins xlslice_20/Dout]
  connect_bd_net -net xlslice_21_Dout [get_bd_pins xlconcat_0/In26] [get_bd_pins xlslice_21/Dout]
  connect_bd_net -net xlslice_22_Dout [get_bd_pins xlconcat_0/In22] [get_bd_pins xlslice_22/Dout]
  connect_bd_net -net xlslice_23_Dout [get_bd_pins xlconcat_0/In18] [get_bd_pins xlslice_23/Dout]
  connect_bd_net -net xlslice_24_Dout [get_bd_pins xlconcat_0/In15] [get_bd_pins xlslice_24/Dout]
  connect_bd_net -net xlslice_25_Dout [get_bd_pins xlconcat_0/In11] [get_bd_pins xlslice_25/Dout]
  connect_bd_net -net xlslice_26_Dout [get_bd_pins xlconcat_0/In7] [get_bd_pins xlslice_26/Dout]
  connect_bd_net -net xlslice_27_Dout [get_bd_pins xlconcat_0/In3] [get_bd_pins xlslice_27/Dout]
  connect_bd_net -net xlslice_28_Dout [get_bd_pins xlconcat_0/In31] [get_bd_pins xlslice_28/Dout]
  connect_bd_net -net xlslice_29_Dout [get_bd_pins xlconcat_0/In27] [get_bd_pins xlslice_29/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlconcat_0/In4] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_30_Dout [get_bd_pins xlconcat_0/In23] [get_bd_pins xlslice_30/Dout]
  connect_bd_net -net xlslice_31_Dout [get_bd_pins xlconcat_0/In19] [get_bd_pins xlslice_31/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlconcat_0/In0] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlconcat_0/In28] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins xlconcat_0/In24] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins xlconcat_0/In20] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlconcat_0/In16] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_0/In13] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlconcat_0/In9] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hier_1
proc create_hier_cell_hier_1_2 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hier_1_2() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 Din
  create_bd_pin -dir O -from 31 -to 0 dout_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {32} \
 ] $xlconcat_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {9} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create instance: xlslice_10, and set properties
  set xlslice_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {10} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_10

  # Create instance: xlslice_11, and set properties
  set xlslice_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_11 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {11} \
   CONFIG.DIN_TO {11} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_11

  # Create instance: xlslice_12, and set properties
  set xlslice_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_12 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {12} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_12

  # Create instance: xlslice_13, and set properties
  set xlslice_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_13 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {13} \
   CONFIG.DIN_TO {13} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_13

  # Create instance: xlslice_14, and set properties
  set xlslice_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_14 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {14} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_14

  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {15} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_15

  # Create instance: xlslice_16, and set properties
  set xlslice_16 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_16 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_16

  # Create instance: xlslice_17, and set properties
  set xlslice_17 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_17 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_17

  # Create instance: xlslice_18, and set properties
  set xlslice_18 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_18 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_18

  # Create instance: xlslice_19, and set properties
  set xlslice_19 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_19 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {19} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_19

  # Create instance: xlslice_20, and set properties
  set xlslice_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_20 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {20} \
   CONFIG.DIN_TO {20} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_20

  # Create instance: xlslice_21, and set properties
  set xlslice_21 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_21 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {21} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_21

  # Create instance: xlslice_22, and set properties
  set xlslice_22 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_22 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {22} \
   CONFIG.DIN_TO {22} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_22

  # Create instance: xlslice_23, and set properties
  set xlslice_23 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_23 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {23} \
   CONFIG.DIN_TO {23} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_23

  # Create instance: xlslice_24, and set properties
  set xlslice_24 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_24 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {24} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_24

  # Create instance: xlslice_25, and set properties
  set xlslice_25 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_25 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_25

  # Create instance: xlslice_26, and set properties
  set xlslice_26 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_26 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {26} \
   CONFIG.DIN_TO {26} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_26

  # Create instance: xlslice_27, and set properties
  set xlslice_27 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_27 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {27} \
   CONFIG.DIN_TO {27} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_27

  # Create instance: xlslice_28, and set properties
  set xlslice_28 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_28 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {28} \
   CONFIG.DIN_TO {28} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_28

  # Create instance: xlslice_29, and set properties
  set xlslice_29 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_29 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {29} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_29

  # Create instance: xlslice_30, and set properties
  set xlslice_30 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_30 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {30} \
   CONFIG.DIN_TO {30} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_30

  # Create instance: xlslice_31, and set properties
  set xlslice_31 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_31 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {31} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_31

  # Create port connections
  connect_bd_net -net xlconcat_0_dout [get_bd_pins Din] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_10/Din] [get_bd_pins xlslice_11/Din] [get_bd_pins xlslice_12/Din] [get_bd_pins xlslice_13/Din] [get_bd_pins xlslice_14/Din] [get_bd_pins xlslice_15/Din] [get_bd_pins xlslice_16/Din] [get_bd_pins xlslice_17/Din] [get_bd_pins xlslice_18/Din] [get_bd_pins xlslice_19/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_20/Din] [get_bd_pins xlslice_21/Din] [get_bd_pins xlslice_22/Din] [get_bd_pins xlslice_23/Din] [get_bd_pins xlslice_24/Din] [get_bd_pins xlslice_25/Din] [get_bd_pins xlslice_26/Din] [get_bd_pins xlslice_27/Din] [get_bd_pins xlslice_28/Din] [get_bd_pins xlslice_29/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_30/Din] [get_bd_pins xlslice_31/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net xlconcat_0_dout1 [get_bd_pins dout_0] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlconcat_0/In12] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_10_Dout [get_bd_pins xlconcat_0/In5] [get_bd_pins xlslice_10/Dout]
  connect_bd_net -net xlslice_11_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_11/Dout]
  connect_bd_net -net xlslice_12_Dout [get_bd_pins xlconcat_0/In29] [get_bd_pins xlslice_12/Dout]
  connect_bd_net -net xlslice_13_Dout [get_bd_pins xlconcat_0/In25] [get_bd_pins xlslice_13/Dout]
  connect_bd_net -net xlslice_14_Dout [get_bd_pins xlconcat_0/In21] [get_bd_pins xlslice_14/Dout]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins xlconcat_0/In17] [get_bd_pins xlslice_15/Dout]
  connect_bd_net -net xlslice_16_Dout [get_bd_pins xlconcat_0/In14] [get_bd_pins xlslice_16/Dout]
  connect_bd_net -net xlslice_17_Dout [get_bd_pins xlconcat_0/In10] [get_bd_pins xlslice_17/Dout]
  connect_bd_net -net xlslice_18_Dout [get_bd_pins xlconcat_0/In6] [get_bd_pins xlslice_18/Dout]
  connect_bd_net -net xlslice_19_Dout [get_bd_pins xlconcat_0/In2] [get_bd_pins xlslice_19/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlconcat_0/In8] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_20_Dout [get_bd_pins xlconcat_0/In30] [get_bd_pins xlslice_20/Dout]
  connect_bd_net -net xlslice_21_Dout [get_bd_pins xlconcat_0/In26] [get_bd_pins xlslice_21/Dout]
  connect_bd_net -net xlslice_22_Dout [get_bd_pins xlconcat_0/In22] [get_bd_pins xlslice_22/Dout]
  connect_bd_net -net xlslice_23_Dout [get_bd_pins xlconcat_0/In18] [get_bd_pins xlslice_23/Dout]
  connect_bd_net -net xlslice_24_Dout [get_bd_pins xlconcat_0/In15] [get_bd_pins xlslice_24/Dout]
  connect_bd_net -net xlslice_25_Dout [get_bd_pins xlconcat_0/In11] [get_bd_pins xlslice_25/Dout]
  connect_bd_net -net xlslice_26_Dout [get_bd_pins xlconcat_0/In7] [get_bd_pins xlslice_26/Dout]
  connect_bd_net -net xlslice_27_Dout [get_bd_pins xlconcat_0/In3] [get_bd_pins xlslice_27/Dout]
  connect_bd_net -net xlslice_28_Dout [get_bd_pins xlconcat_0/In31] [get_bd_pins xlslice_28/Dout]
  connect_bd_net -net xlslice_29_Dout [get_bd_pins xlconcat_0/In27] [get_bd_pins xlslice_29/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlconcat_0/In4] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_30_Dout [get_bd_pins xlconcat_0/In23] [get_bd_pins xlslice_30/Dout]
  connect_bd_net -net xlslice_31_Dout [get_bd_pins xlconcat_0/In19] [get_bd_pins xlslice_31/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlconcat_0/In0] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlconcat_0/In28] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins xlconcat_0/In24] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins xlconcat_0/In20] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlconcat_0/In16] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_0/In13] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlconcat_0/In9] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hier_2
proc create_hier_cell_hier_2_2 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hier_2_2() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 Din
  create_bd_pin -dir O -from 31 -to 0 dout_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {32} \
 ] $xlconcat_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {9} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create instance: xlslice_10, and set properties
  set xlslice_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {10} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_10

  # Create instance: xlslice_11, and set properties
  set xlslice_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_11 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {11} \
   CONFIG.DIN_TO {11} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_11

  # Create instance: xlslice_12, and set properties
  set xlslice_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_12 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {12} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_12

  # Create instance: xlslice_13, and set properties
  set xlslice_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_13 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {13} \
   CONFIG.DIN_TO {13} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_13

  # Create instance: xlslice_14, and set properties
  set xlslice_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_14 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {14} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_14

  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {15} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_15

  # Create instance: xlslice_16, and set properties
  set xlslice_16 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_16 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_16

  # Create instance: xlslice_17, and set properties
  set xlslice_17 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_17 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_17

  # Create instance: xlslice_18, and set properties
  set xlslice_18 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_18 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_18

  # Create instance: xlslice_19, and set properties
  set xlslice_19 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_19 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {19} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_19

  # Create instance: xlslice_20, and set properties
  set xlslice_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_20 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {20} \
   CONFIG.DIN_TO {20} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_20

  # Create instance: xlslice_21, and set properties
  set xlslice_21 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_21 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {21} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_21

  # Create instance: xlslice_22, and set properties
  set xlslice_22 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_22 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {22} \
   CONFIG.DIN_TO {22} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_22

  # Create instance: xlslice_23, and set properties
  set xlslice_23 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_23 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {23} \
   CONFIG.DIN_TO {23} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_23

  # Create instance: xlslice_24, and set properties
  set xlslice_24 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_24 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {24} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_24

  # Create instance: xlslice_25, and set properties
  set xlslice_25 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_25 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_25

  # Create instance: xlslice_26, and set properties
  set xlslice_26 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_26 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {26} \
   CONFIG.DIN_TO {26} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_26

  # Create instance: xlslice_27, and set properties
  set xlslice_27 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_27 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {27} \
   CONFIG.DIN_TO {27} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_27

  # Create instance: xlslice_28, and set properties
  set xlslice_28 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_28 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {28} \
   CONFIG.DIN_TO {28} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_28

  # Create instance: xlslice_29, and set properties
  set xlslice_29 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_29 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {29} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_29

  # Create instance: xlslice_30, and set properties
  set xlslice_30 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_30 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {30} \
   CONFIG.DIN_TO {30} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_30

  # Create instance: xlslice_31, and set properties
  set xlslice_31 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_31 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {31} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_31

  # Create port connections
  connect_bd_net -net xlconcat_0_dout [get_bd_pins Din] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_10/Din] [get_bd_pins xlslice_11/Din] [get_bd_pins xlslice_12/Din] [get_bd_pins xlslice_13/Din] [get_bd_pins xlslice_14/Din] [get_bd_pins xlslice_15/Din] [get_bd_pins xlslice_16/Din] [get_bd_pins xlslice_17/Din] [get_bd_pins xlslice_18/Din] [get_bd_pins xlslice_19/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_20/Din] [get_bd_pins xlslice_21/Din] [get_bd_pins xlslice_22/Din] [get_bd_pins xlslice_23/Din] [get_bd_pins xlslice_24/Din] [get_bd_pins xlslice_25/Din] [get_bd_pins xlslice_26/Din] [get_bd_pins xlslice_27/Din] [get_bd_pins xlslice_28/Din] [get_bd_pins xlslice_29/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_30/Din] [get_bd_pins xlslice_31/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net xlconcat_0_dout1 [get_bd_pins dout_0] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlconcat_0/In12] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_10_Dout [get_bd_pins xlconcat_0/In5] [get_bd_pins xlslice_10/Dout]
  connect_bd_net -net xlslice_11_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_11/Dout]
  connect_bd_net -net xlslice_12_Dout [get_bd_pins xlconcat_0/In29] [get_bd_pins xlslice_12/Dout]
  connect_bd_net -net xlslice_13_Dout [get_bd_pins xlconcat_0/In25] [get_bd_pins xlslice_13/Dout]
  connect_bd_net -net xlslice_14_Dout [get_bd_pins xlconcat_0/In21] [get_bd_pins xlslice_14/Dout]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins xlconcat_0/In17] [get_bd_pins xlslice_15/Dout]
  connect_bd_net -net xlslice_16_Dout [get_bd_pins xlconcat_0/In14] [get_bd_pins xlslice_16/Dout]
  connect_bd_net -net xlslice_17_Dout [get_bd_pins xlconcat_0/In10] [get_bd_pins xlslice_17/Dout]
  connect_bd_net -net xlslice_18_Dout [get_bd_pins xlconcat_0/In6] [get_bd_pins xlslice_18/Dout]
  connect_bd_net -net xlslice_19_Dout [get_bd_pins xlconcat_0/In2] [get_bd_pins xlslice_19/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlconcat_0/In8] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_20_Dout [get_bd_pins xlconcat_0/In30] [get_bd_pins xlslice_20/Dout]
  connect_bd_net -net xlslice_21_Dout [get_bd_pins xlconcat_0/In26] [get_bd_pins xlslice_21/Dout]
  connect_bd_net -net xlslice_22_Dout [get_bd_pins xlconcat_0/In22] [get_bd_pins xlslice_22/Dout]
  connect_bd_net -net xlslice_23_Dout [get_bd_pins xlconcat_0/In18] [get_bd_pins xlslice_23/Dout]
  connect_bd_net -net xlslice_24_Dout [get_bd_pins xlconcat_0/In15] [get_bd_pins xlslice_24/Dout]
  connect_bd_net -net xlslice_25_Dout [get_bd_pins xlconcat_0/In11] [get_bd_pins xlslice_25/Dout]
  connect_bd_net -net xlslice_26_Dout [get_bd_pins xlconcat_0/In7] [get_bd_pins xlslice_26/Dout]
  connect_bd_net -net xlslice_27_Dout [get_bd_pins xlconcat_0/In3] [get_bd_pins xlslice_27/Dout]
  connect_bd_net -net xlslice_28_Dout [get_bd_pins xlconcat_0/In31] [get_bd_pins xlslice_28/Dout]
  connect_bd_net -net xlslice_29_Dout [get_bd_pins xlconcat_0/In27] [get_bd_pins xlslice_29/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlconcat_0/In4] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_30_Dout [get_bd_pins xlconcat_0/In23] [get_bd_pins xlslice_30/Dout]
  connect_bd_net -net xlslice_31_Dout [get_bd_pins xlconcat_0/In19] [get_bd_pins xlslice_31/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlconcat_0/In0] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlconcat_0/In28] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins xlconcat_0/In24] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins xlconcat_0/In20] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlconcat_0/In16] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_0/In13] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlconcat_0/In9] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hier_3
proc create_hier_cell_hier_3_2 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hier_3_2() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 Din
  create_bd_pin -dir O -from 31 -to 0 dout_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {32} \
 ] $xlconcat_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {9} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create instance: xlslice_10, and set properties
  set xlslice_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {10} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_10

  # Create instance: xlslice_11, and set properties
  set xlslice_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_11 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {11} \
   CONFIG.DIN_TO {11} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_11

  # Create instance: xlslice_12, and set properties
  set xlslice_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_12 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {12} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_12

  # Create instance: xlslice_13, and set properties
  set xlslice_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_13 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {13} \
   CONFIG.DIN_TO {13} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_13

  # Create instance: xlslice_14, and set properties
  set xlslice_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_14 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {14} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_14

  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {15} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_15

  # Create instance: xlslice_16, and set properties
  set xlslice_16 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_16 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_16

  # Create instance: xlslice_17, and set properties
  set xlslice_17 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_17 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_17

  # Create instance: xlslice_18, and set properties
  set xlslice_18 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_18 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_18

  # Create instance: xlslice_19, and set properties
  set xlslice_19 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_19 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {19} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_19

  # Create instance: xlslice_20, and set properties
  set xlslice_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_20 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {20} \
   CONFIG.DIN_TO {20} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_20

  # Create instance: xlslice_21, and set properties
  set xlslice_21 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_21 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {21} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_21

  # Create instance: xlslice_22, and set properties
  set xlslice_22 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_22 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {22} \
   CONFIG.DIN_TO {22} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_22

  # Create instance: xlslice_23, and set properties
  set xlslice_23 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_23 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {23} \
   CONFIG.DIN_TO {23} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_23

  # Create instance: xlslice_24, and set properties
  set xlslice_24 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_24 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {24} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_24

  # Create instance: xlslice_25, and set properties
  set xlslice_25 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_25 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_25

  # Create instance: xlslice_26, and set properties
  set xlslice_26 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_26 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {26} \
   CONFIG.DIN_TO {26} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_26

  # Create instance: xlslice_27, and set properties
  set xlslice_27 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_27 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {27} \
   CONFIG.DIN_TO {27} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_27

  # Create instance: xlslice_28, and set properties
  set xlslice_28 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_28 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {28} \
   CONFIG.DIN_TO {28} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_28

  # Create instance: xlslice_29, and set properties
  set xlslice_29 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_29 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {29} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_29

  # Create instance: xlslice_30, and set properties
  set xlslice_30 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_30 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {30} \
   CONFIG.DIN_TO {30} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_30

  # Create instance: xlslice_31, and set properties
  set xlslice_31 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_31 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {31} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_31

  # Create port connections
  connect_bd_net -net xlconcat_0_dout [get_bd_pins Din] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_10/Din] [get_bd_pins xlslice_11/Din] [get_bd_pins xlslice_12/Din] [get_bd_pins xlslice_13/Din] [get_bd_pins xlslice_14/Din] [get_bd_pins xlslice_15/Din] [get_bd_pins xlslice_16/Din] [get_bd_pins xlslice_17/Din] [get_bd_pins xlslice_18/Din] [get_bd_pins xlslice_19/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_20/Din] [get_bd_pins xlslice_21/Din] [get_bd_pins xlslice_22/Din] [get_bd_pins xlslice_23/Din] [get_bd_pins xlslice_24/Din] [get_bd_pins xlslice_25/Din] [get_bd_pins xlslice_26/Din] [get_bd_pins xlslice_27/Din] [get_bd_pins xlslice_28/Din] [get_bd_pins xlslice_29/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_30/Din] [get_bd_pins xlslice_31/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net xlconcat_0_dout1 [get_bd_pins dout_0] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlconcat_0/In12] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_10_Dout [get_bd_pins xlconcat_0/In5] [get_bd_pins xlslice_10/Dout]
  connect_bd_net -net xlslice_11_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_11/Dout]
  connect_bd_net -net xlslice_12_Dout [get_bd_pins xlconcat_0/In29] [get_bd_pins xlslice_12/Dout]
  connect_bd_net -net xlslice_13_Dout [get_bd_pins xlconcat_0/In25] [get_bd_pins xlslice_13/Dout]
  connect_bd_net -net xlslice_14_Dout [get_bd_pins xlconcat_0/In21] [get_bd_pins xlslice_14/Dout]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins xlconcat_0/In17] [get_bd_pins xlslice_15/Dout]
  connect_bd_net -net xlslice_16_Dout [get_bd_pins xlconcat_0/In14] [get_bd_pins xlslice_16/Dout]
  connect_bd_net -net xlslice_17_Dout [get_bd_pins xlconcat_0/In10] [get_bd_pins xlslice_17/Dout]
  connect_bd_net -net xlslice_18_Dout [get_bd_pins xlconcat_0/In6] [get_bd_pins xlslice_18/Dout]
  connect_bd_net -net xlslice_19_Dout [get_bd_pins xlconcat_0/In2] [get_bd_pins xlslice_19/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlconcat_0/In8] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_20_Dout [get_bd_pins xlconcat_0/In30] [get_bd_pins xlslice_20/Dout]
  connect_bd_net -net xlslice_21_Dout [get_bd_pins xlconcat_0/In26] [get_bd_pins xlslice_21/Dout]
  connect_bd_net -net xlslice_22_Dout [get_bd_pins xlconcat_0/In22] [get_bd_pins xlslice_22/Dout]
  connect_bd_net -net xlslice_23_Dout [get_bd_pins xlconcat_0/In18] [get_bd_pins xlslice_23/Dout]
  connect_bd_net -net xlslice_24_Dout [get_bd_pins xlconcat_0/In15] [get_bd_pins xlslice_24/Dout]
  connect_bd_net -net xlslice_25_Dout [get_bd_pins xlconcat_0/In11] [get_bd_pins xlslice_25/Dout]
  connect_bd_net -net xlslice_26_Dout [get_bd_pins xlconcat_0/In7] [get_bd_pins xlslice_26/Dout]
  connect_bd_net -net xlslice_27_Dout [get_bd_pins xlconcat_0/In3] [get_bd_pins xlslice_27/Dout]
  connect_bd_net -net xlslice_28_Dout [get_bd_pins xlconcat_0/In31] [get_bd_pins xlslice_28/Dout]
  connect_bd_net -net xlslice_29_Dout [get_bd_pins xlconcat_0/In27] [get_bd_pins xlslice_29/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlconcat_0/In4] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_30_Dout [get_bd_pins xlconcat_0/In23] [get_bd_pins xlslice_30/Dout]
  connect_bd_net -net xlslice_31_Dout [get_bd_pins xlconcat_0/In19] [get_bd_pins xlslice_31/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlconcat_0/In0] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlconcat_0/In28] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins xlconcat_0/In24] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins xlconcat_0/In20] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlconcat_0/In16] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_0/In13] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlconcat_0/In9] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hier_0
proc create_hier_cell_hier_0_1 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hier_0_1() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 Din
  create_bd_pin -dir O -from 31 -to 0 dout_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {32} \
 ] $xlconcat_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {9} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create instance: xlslice_10, and set properties
  set xlslice_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {10} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_10

  # Create instance: xlslice_11, and set properties
  set xlslice_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_11 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {11} \
   CONFIG.DIN_TO {11} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_11

  # Create instance: xlslice_12, and set properties
  set xlslice_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_12 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {12} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_12

  # Create instance: xlslice_13, and set properties
  set xlslice_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_13 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {13} \
   CONFIG.DIN_TO {13} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_13

  # Create instance: xlslice_14, and set properties
  set xlslice_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_14 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {14} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_14

  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {15} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_15

  # Create instance: xlslice_16, and set properties
  set xlslice_16 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_16 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_16

  # Create instance: xlslice_17, and set properties
  set xlslice_17 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_17 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_17

  # Create instance: xlslice_18, and set properties
  set xlslice_18 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_18 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_18

  # Create instance: xlslice_19, and set properties
  set xlslice_19 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_19 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {19} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_19

  # Create instance: xlslice_20, and set properties
  set xlslice_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_20 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {20} \
   CONFIG.DIN_TO {20} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_20

  # Create instance: xlslice_21, and set properties
  set xlslice_21 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_21 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {21} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_21

  # Create instance: xlslice_22, and set properties
  set xlslice_22 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_22 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {22} \
   CONFIG.DIN_TO {22} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_22

  # Create instance: xlslice_23, and set properties
  set xlslice_23 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_23 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {23} \
   CONFIG.DIN_TO {23} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_23

  # Create instance: xlslice_24, and set properties
  set xlslice_24 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_24 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {24} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_24

  # Create instance: xlslice_25, and set properties
  set xlslice_25 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_25 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_25

  # Create instance: xlslice_26, and set properties
  set xlslice_26 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_26 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {26} \
   CONFIG.DIN_TO {26} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_26

  # Create instance: xlslice_27, and set properties
  set xlslice_27 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_27 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {27} \
   CONFIG.DIN_TO {27} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_27

  # Create instance: xlslice_28, and set properties
  set xlslice_28 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_28 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {28} \
   CONFIG.DIN_TO {28} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_28

  # Create instance: xlslice_29, and set properties
  set xlslice_29 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_29 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {29} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_29

  # Create instance: xlslice_30, and set properties
  set xlslice_30 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_30 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {30} \
   CONFIG.DIN_TO {30} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_30

  # Create instance: xlslice_31, and set properties
  set xlslice_31 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_31 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {31} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_31

  # Create port connections
  connect_bd_net -net xlconcat_0_dout [get_bd_pins Din] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_10/Din] [get_bd_pins xlslice_11/Din] [get_bd_pins xlslice_12/Din] [get_bd_pins xlslice_13/Din] [get_bd_pins xlslice_14/Din] [get_bd_pins xlslice_15/Din] [get_bd_pins xlslice_16/Din] [get_bd_pins xlslice_17/Din] [get_bd_pins xlslice_18/Din] [get_bd_pins xlslice_19/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_20/Din] [get_bd_pins xlslice_21/Din] [get_bd_pins xlslice_22/Din] [get_bd_pins xlslice_23/Din] [get_bd_pins xlslice_24/Din] [get_bd_pins xlslice_25/Din] [get_bd_pins xlslice_26/Din] [get_bd_pins xlslice_27/Din] [get_bd_pins xlslice_28/Din] [get_bd_pins xlslice_29/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_30/Din] [get_bd_pins xlslice_31/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net xlconcat_0_dout1 [get_bd_pins dout_0] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlconcat_0/In12] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_10_Dout [get_bd_pins xlconcat_0/In5] [get_bd_pins xlslice_10/Dout]
  connect_bd_net -net xlslice_11_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_11/Dout]
  connect_bd_net -net xlslice_12_Dout [get_bd_pins xlconcat_0/In29] [get_bd_pins xlslice_12/Dout]
  connect_bd_net -net xlslice_13_Dout [get_bd_pins xlconcat_0/In25] [get_bd_pins xlslice_13/Dout]
  connect_bd_net -net xlslice_14_Dout [get_bd_pins xlconcat_0/In21] [get_bd_pins xlslice_14/Dout]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins xlconcat_0/In17] [get_bd_pins xlslice_15/Dout]
  connect_bd_net -net xlslice_16_Dout [get_bd_pins xlconcat_0/In14] [get_bd_pins xlslice_16/Dout]
  connect_bd_net -net xlslice_17_Dout [get_bd_pins xlconcat_0/In10] [get_bd_pins xlslice_17/Dout]
  connect_bd_net -net xlslice_18_Dout [get_bd_pins xlconcat_0/In6] [get_bd_pins xlslice_18/Dout]
  connect_bd_net -net xlslice_19_Dout [get_bd_pins xlconcat_0/In2] [get_bd_pins xlslice_19/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlconcat_0/In8] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_20_Dout [get_bd_pins xlconcat_0/In30] [get_bd_pins xlslice_20/Dout]
  connect_bd_net -net xlslice_21_Dout [get_bd_pins xlconcat_0/In26] [get_bd_pins xlslice_21/Dout]
  connect_bd_net -net xlslice_22_Dout [get_bd_pins xlconcat_0/In22] [get_bd_pins xlslice_22/Dout]
  connect_bd_net -net xlslice_23_Dout [get_bd_pins xlconcat_0/In18] [get_bd_pins xlslice_23/Dout]
  connect_bd_net -net xlslice_24_Dout [get_bd_pins xlconcat_0/In15] [get_bd_pins xlslice_24/Dout]
  connect_bd_net -net xlslice_25_Dout [get_bd_pins xlconcat_0/In11] [get_bd_pins xlslice_25/Dout]
  connect_bd_net -net xlslice_26_Dout [get_bd_pins xlconcat_0/In7] [get_bd_pins xlslice_26/Dout]
  connect_bd_net -net xlslice_27_Dout [get_bd_pins xlconcat_0/In3] [get_bd_pins xlslice_27/Dout]
  connect_bd_net -net xlslice_28_Dout [get_bd_pins xlconcat_0/In31] [get_bd_pins xlslice_28/Dout]
  connect_bd_net -net xlslice_29_Dout [get_bd_pins xlconcat_0/In27] [get_bd_pins xlslice_29/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlconcat_0/In4] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_30_Dout [get_bd_pins xlconcat_0/In23] [get_bd_pins xlslice_30/Dout]
  connect_bd_net -net xlslice_31_Dout [get_bd_pins xlconcat_0/In19] [get_bd_pins xlslice_31/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlconcat_0/In0] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlconcat_0/In28] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins xlconcat_0/In24] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins xlconcat_0/In20] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlconcat_0/In16] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_0/In13] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlconcat_0/In9] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hier_1
proc create_hier_cell_hier_1_1 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hier_1_1() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 Din
  create_bd_pin -dir O -from 31 -to 0 dout_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {32} \
 ] $xlconcat_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {9} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create instance: xlslice_10, and set properties
  set xlslice_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {10} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_10

  # Create instance: xlslice_11, and set properties
  set xlslice_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_11 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {11} \
   CONFIG.DIN_TO {11} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_11

  # Create instance: xlslice_12, and set properties
  set xlslice_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_12 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {12} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_12

  # Create instance: xlslice_13, and set properties
  set xlslice_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_13 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {13} \
   CONFIG.DIN_TO {13} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_13

  # Create instance: xlslice_14, and set properties
  set xlslice_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_14 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {14} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_14

  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {15} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_15

  # Create instance: xlslice_16, and set properties
  set xlslice_16 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_16 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_16

  # Create instance: xlslice_17, and set properties
  set xlslice_17 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_17 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_17

  # Create instance: xlslice_18, and set properties
  set xlslice_18 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_18 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_18

  # Create instance: xlslice_19, and set properties
  set xlslice_19 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_19 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {19} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_19

  # Create instance: xlslice_20, and set properties
  set xlslice_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_20 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {20} \
   CONFIG.DIN_TO {20} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_20

  # Create instance: xlslice_21, and set properties
  set xlslice_21 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_21 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {21} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_21

  # Create instance: xlslice_22, and set properties
  set xlslice_22 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_22 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {22} \
   CONFIG.DIN_TO {22} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_22

  # Create instance: xlslice_23, and set properties
  set xlslice_23 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_23 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {23} \
   CONFIG.DIN_TO {23} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_23

  # Create instance: xlslice_24, and set properties
  set xlslice_24 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_24 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {24} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_24

  # Create instance: xlslice_25, and set properties
  set xlslice_25 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_25 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_25

  # Create instance: xlslice_26, and set properties
  set xlslice_26 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_26 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {26} \
   CONFIG.DIN_TO {26} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_26

  # Create instance: xlslice_27, and set properties
  set xlslice_27 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_27 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {27} \
   CONFIG.DIN_TO {27} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_27

  # Create instance: xlslice_28, and set properties
  set xlslice_28 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_28 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {28} \
   CONFIG.DIN_TO {28} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_28

  # Create instance: xlslice_29, and set properties
  set xlslice_29 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_29 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {29} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_29

  # Create instance: xlslice_30, and set properties
  set xlslice_30 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_30 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {30} \
   CONFIG.DIN_TO {30} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_30

  # Create instance: xlslice_31, and set properties
  set xlslice_31 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_31 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {31} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_31

  # Create port connections
  connect_bd_net -net xlconcat_0_dout [get_bd_pins Din] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_10/Din] [get_bd_pins xlslice_11/Din] [get_bd_pins xlslice_12/Din] [get_bd_pins xlslice_13/Din] [get_bd_pins xlslice_14/Din] [get_bd_pins xlslice_15/Din] [get_bd_pins xlslice_16/Din] [get_bd_pins xlslice_17/Din] [get_bd_pins xlslice_18/Din] [get_bd_pins xlslice_19/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_20/Din] [get_bd_pins xlslice_21/Din] [get_bd_pins xlslice_22/Din] [get_bd_pins xlslice_23/Din] [get_bd_pins xlslice_24/Din] [get_bd_pins xlslice_25/Din] [get_bd_pins xlslice_26/Din] [get_bd_pins xlslice_27/Din] [get_bd_pins xlslice_28/Din] [get_bd_pins xlslice_29/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_30/Din] [get_bd_pins xlslice_31/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net xlconcat_0_dout1 [get_bd_pins dout_0] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlconcat_0/In12] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_10_Dout [get_bd_pins xlconcat_0/In5] [get_bd_pins xlslice_10/Dout]
  connect_bd_net -net xlslice_11_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_11/Dout]
  connect_bd_net -net xlslice_12_Dout [get_bd_pins xlconcat_0/In29] [get_bd_pins xlslice_12/Dout]
  connect_bd_net -net xlslice_13_Dout [get_bd_pins xlconcat_0/In25] [get_bd_pins xlslice_13/Dout]
  connect_bd_net -net xlslice_14_Dout [get_bd_pins xlconcat_0/In21] [get_bd_pins xlslice_14/Dout]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins xlconcat_0/In17] [get_bd_pins xlslice_15/Dout]
  connect_bd_net -net xlslice_16_Dout [get_bd_pins xlconcat_0/In14] [get_bd_pins xlslice_16/Dout]
  connect_bd_net -net xlslice_17_Dout [get_bd_pins xlconcat_0/In10] [get_bd_pins xlslice_17/Dout]
  connect_bd_net -net xlslice_18_Dout [get_bd_pins xlconcat_0/In6] [get_bd_pins xlslice_18/Dout]
  connect_bd_net -net xlslice_19_Dout [get_bd_pins xlconcat_0/In2] [get_bd_pins xlslice_19/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlconcat_0/In8] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_20_Dout [get_bd_pins xlconcat_0/In30] [get_bd_pins xlslice_20/Dout]
  connect_bd_net -net xlslice_21_Dout [get_bd_pins xlconcat_0/In26] [get_bd_pins xlslice_21/Dout]
  connect_bd_net -net xlslice_22_Dout [get_bd_pins xlconcat_0/In22] [get_bd_pins xlslice_22/Dout]
  connect_bd_net -net xlslice_23_Dout [get_bd_pins xlconcat_0/In18] [get_bd_pins xlslice_23/Dout]
  connect_bd_net -net xlslice_24_Dout [get_bd_pins xlconcat_0/In15] [get_bd_pins xlslice_24/Dout]
  connect_bd_net -net xlslice_25_Dout [get_bd_pins xlconcat_0/In11] [get_bd_pins xlslice_25/Dout]
  connect_bd_net -net xlslice_26_Dout [get_bd_pins xlconcat_0/In7] [get_bd_pins xlslice_26/Dout]
  connect_bd_net -net xlslice_27_Dout [get_bd_pins xlconcat_0/In3] [get_bd_pins xlslice_27/Dout]
  connect_bd_net -net xlslice_28_Dout [get_bd_pins xlconcat_0/In31] [get_bd_pins xlslice_28/Dout]
  connect_bd_net -net xlslice_29_Dout [get_bd_pins xlconcat_0/In27] [get_bd_pins xlslice_29/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlconcat_0/In4] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_30_Dout [get_bd_pins xlconcat_0/In23] [get_bd_pins xlslice_30/Dout]
  connect_bd_net -net xlslice_31_Dout [get_bd_pins xlconcat_0/In19] [get_bd_pins xlslice_31/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlconcat_0/In0] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlconcat_0/In28] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins xlconcat_0/In24] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins xlconcat_0/In20] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlconcat_0/In16] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_0/In13] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlconcat_0/In9] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hier_2
proc create_hier_cell_hier_2_1 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hier_2_1() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 Din
  create_bd_pin -dir O -from 31 -to 0 dout_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {32} \
 ] $xlconcat_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {9} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create instance: xlslice_10, and set properties
  set xlslice_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {10} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_10

  # Create instance: xlslice_11, and set properties
  set xlslice_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_11 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {11} \
   CONFIG.DIN_TO {11} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_11

  # Create instance: xlslice_12, and set properties
  set xlslice_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_12 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {12} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_12

  # Create instance: xlslice_13, and set properties
  set xlslice_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_13 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {13} \
   CONFIG.DIN_TO {13} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_13

  # Create instance: xlslice_14, and set properties
  set xlslice_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_14 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {14} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_14

  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {15} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_15

  # Create instance: xlslice_16, and set properties
  set xlslice_16 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_16 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_16

  # Create instance: xlslice_17, and set properties
  set xlslice_17 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_17 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_17

  # Create instance: xlslice_18, and set properties
  set xlslice_18 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_18 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_18

  # Create instance: xlslice_19, and set properties
  set xlslice_19 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_19 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {19} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_19

  # Create instance: xlslice_20, and set properties
  set xlslice_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_20 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {20} \
   CONFIG.DIN_TO {20} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_20

  # Create instance: xlslice_21, and set properties
  set xlslice_21 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_21 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {21} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_21

  # Create instance: xlslice_22, and set properties
  set xlslice_22 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_22 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {22} \
   CONFIG.DIN_TO {22} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_22

  # Create instance: xlslice_23, and set properties
  set xlslice_23 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_23 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {23} \
   CONFIG.DIN_TO {23} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_23

  # Create instance: xlslice_24, and set properties
  set xlslice_24 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_24 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {24} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_24

  # Create instance: xlslice_25, and set properties
  set xlslice_25 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_25 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_25

  # Create instance: xlslice_26, and set properties
  set xlslice_26 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_26 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {26} \
   CONFIG.DIN_TO {26} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_26

  # Create instance: xlslice_27, and set properties
  set xlslice_27 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_27 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {27} \
   CONFIG.DIN_TO {27} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_27

  # Create instance: xlslice_28, and set properties
  set xlslice_28 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_28 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {28} \
   CONFIG.DIN_TO {28} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_28

  # Create instance: xlslice_29, and set properties
  set xlslice_29 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_29 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {29} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_29

  # Create instance: xlslice_30, and set properties
  set xlslice_30 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_30 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {30} \
   CONFIG.DIN_TO {30} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_30

  # Create instance: xlslice_31, and set properties
  set xlslice_31 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_31 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {31} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_31

  # Create port connections
  connect_bd_net -net xlconcat_0_dout [get_bd_pins Din] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_10/Din] [get_bd_pins xlslice_11/Din] [get_bd_pins xlslice_12/Din] [get_bd_pins xlslice_13/Din] [get_bd_pins xlslice_14/Din] [get_bd_pins xlslice_15/Din] [get_bd_pins xlslice_16/Din] [get_bd_pins xlslice_17/Din] [get_bd_pins xlslice_18/Din] [get_bd_pins xlslice_19/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_20/Din] [get_bd_pins xlslice_21/Din] [get_bd_pins xlslice_22/Din] [get_bd_pins xlslice_23/Din] [get_bd_pins xlslice_24/Din] [get_bd_pins xlslice_25/Din] [get_bd_pins xlslice_26/Din] [get_bd_pins xlslice_27/Din] [get_bd_pins xlslice_28/Din] [get_bd_pins xlslice_29/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_30/Din] [get_bd_pins xlslice_31/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net xlconcat_0_dout1 [get_bd_pins dout_0] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlconcat_0/In12] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_10_Dout [get_bd_pins xlconcat_0/In5] [get_bd_pins xlslice_10/Dout]
  connect_bd_net -net xlslice_11_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_11/Dout]
  connect_bd_net -net xlslice_12_Dout [get_bd_pins xlconcat_0/In29] [get_bd_pins xlslice_12/Dout]
  connect_bd_net -net xlslice_13_Dout [get_bd_pins xlconcat_0/In25] [get_bd_pins xlslice_13/Dout]
  connect_bd_net -net xlslice_14_Dout [get_bd_pins xlconcat_0/In21] [get_bd_pins xlslice_14/Dout]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins xlconcat_0/In17] [get_bd_pins xlslice_15/Dout]
  connect_bd_net -net xlslice_16_Dout [get_bd_pins xlconcat_0/In14] [get_bd_pins xlslice_16/Dout]
  connect_bd_net -net xlslice_17_Dout [get_bd_pins xlconcat_0/In10] [get_bd_pins xlslice_17/Dout]
  connect_bd_net -net xlslice_18_Dout [get_bd_pins xlconcat_0/In6] [get_bd_pins xlslice_18/Dout]
  connect_bd_net -net xlslice_19_Dout [get_bd_pins xlconcat_0/In2] [get_bd_pins xlslice_19/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlconcat_0/In8] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_20_Dout [get_bd_pins xlconcat_0/In30] [get_bd_pins xlslice_20/Dout]
  connect_bd_net -net xlslice_21_Dout [get_bd_pins xlconcat_0/In26] [get_bd_pins xlslice_21/Dout]
  connect_bd_net -net xlslice_22_Dout [get_bd_pins xlconcat_0/In22] [get_bd_pins xlslice_22/Dout]
  connect_bd_net -net xlslice_23_Dout [get_bd_pins xlconcat_0/In18] [get_bd_pins xlslice_23/Dout]
  connect_bd_net -net xlslice_24_Dout [get_bd_pins xlconcat_0/In15] [get_bd_pins xlslice_24/Dout]
  connect_bd_net -net xlslice_25_Dout [get_bd_pins xlconcat_0/In11] [get_bd_pins xlslice_25/Dout]
  connect_bd_net -net xlslice_26_Dout [get_bd_pins xlconcat_0/In7] [get_bd_pins xlslice_26/Dout]
  connect_bd_net -net xlslice_27_Dout [get_bd_pins xlconcat_0/In3] [get_bd_pins xlslice_27/Dout]
  connect_bd_net -net xlslice_28_Dout [get_bd_pins xlconcat_0/In31] [get_bd_pins xlslice_28/Dout]
  connect_bd_net -net xlslice_29_Dout [get_bd_pins xlconcat_0/In27] [get_bd_pins xlslice_29/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlconcat_0/In4] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_30_Dout [get_bd_pins xlconcat_0/In23] [get_bd_pins xlslice_30/Dout]
  connect_bd_net -net xlslice_31_Dout [get_bd_pins xlconcat_0/In19] [get_bd_pins xlslice_31/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlconcat_0/In0] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlconcat_0/In28] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins xlconcat_0/In24] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins xlconcat_0/In20] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlconcat_0/In16] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_0/In13] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlconcat_0/In9] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hier_3
proc create_hier_cell_hier_3_1 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hier_3_1() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 Din
  create_bd_pin -dir O -from 31 -to 0 dout_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {32} \
 ] $xlconcat_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {9} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create instance: xlslice_10, and set properties
  set xlslice_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {10} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_10

  # Create instance: xlslice_11, and set properties
  set xlslice_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_11 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {11} \
   CONFIG.DIN_TO {11} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_11

  # Create instance: xlslice_12, and set properties
  set xlslice_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_12 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {12} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_12

  # Create instance: xlslice_13, and set properties
  set xlslice_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_13 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {13} \
   CONFIG.DIN_TO {13} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_13

  # Create instance: xlslice_14, and set properties
  set xlslice_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_14 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {14} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_14

  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {15} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_15

  # Create instance: xlslice_16, and set properties
  set xlslice_16 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_16 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_16

  # Create instance: xlslice_17, and set properties
  set xlslice_17 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_17 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_17

  # Create instance: xlslice_18, and set properties
  set xlslice_18 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_18 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_18

  # Create instance: xlslice_19, and set properties
  set xlslice_19 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_19 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {19} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_19

  # Create instance: xlslice_20, and set properties
  set xlslice_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_20 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {20} \
   CONFIG.DIN_TO {20} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_20

  # Create instance: xlslice_21, and set properties
  set xlslice_21 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_21 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {21} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_21

  # Create instance: xlslice_22, and set properties
  set xlslice_22 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_22 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {22} \
   CONFIG.DIN_TO {22} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_22

  # Create instance: xlslice_23, and set properties
  set xlslice_23 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_23 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {23} \
   CONFIG.DIN_TO {23} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_23

  # Create instance: xlslice_24, and set properties
  set xlslice_24 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_24 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {24} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_24

  # Create instance: xlslice_25, and set properties
  set xlslice_25 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_25 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_25

  # Create instance: xlslice_26, and set properties
  set xlslice_26 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_26 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {26} \
   CONFIG.DIN_TO {26} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_26

  # Create instance: xlslice_27, and set properties
  set xlslice_27 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_27 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {27} \
   CONFIG.DIN_TO {27} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_27

  # Create instance: xlslice_28, and set properties
  set xlslice_28 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_28 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {28} \
   CONFIG.DIN_TO {28} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_28

  # Create instance: xlslice_29, and set properties
  set xlslice_29 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_29 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {29} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_29

  # Create instance: xlslice_30, and set properties
  set xlslice_30 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_30 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {30} \
   CONFIG.DIN_TO {30} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_30

  # Create instance: xlslice_31, and set properties
  set xlslice_31 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_31 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {31} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_31

  # Create port connections
  connect_bd_net -net xlconcat_0_dout [get_bd_pins Din] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_10/Din] [get_bd_pins xlslice_11/Din] [get_bd_pins xlslice_12/Din] [get_bd_pins xlslice_13/Din] [get_bd_pins xlslice_14/Din] [get_bd_pins xlslice_15/Din] [get_bd_pins xlslice_16/Din] [get_bd_pins xlslice_17/Din] [get_bd_pins xlslice_18/Din] [get_bd_pins xlslice_19/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_20/Din] [get_bd_pins xlslice_21/Din] [get_bd_pins xlslice_22/Din] [get_bd_pins xlslice_23/Din] [get_bd_pins xlslice_24/Din] [get_bd_pins xlslice_25/Din] [get_bd_pins xlslice_26/Din] [get_bd_pins xlslice_27/Din] [get_bd_pins xlslice_28/Din] [get_bd_pins xlslice_29/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_30/Din] [get_bd_pins xlslice_31/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net xlconcat_0_dout1 [get_bd_pins dout_0] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlconcat_0/In12] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_10_Dout [get_bd_pins xlconcat_0/In5] [get_bd_pins xlslice_10/Dout]
  connect_bd_net -net xlslice_11_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_11/Dout]
  connect_bd_net -net xlslice_12_Dout [get_bd_pins xlconcat_0/In29] [get_bd_pins xlslice_12/Dout]
  connect_bd_net -net xlslice_13_Dout [get_bd_pins xlconcat_0/In25] [get_bd_pins xlslice_13/Dout]
  connect_bd_net -net xlslice_14_Dout [get_bd_pins xlconcat_0/In21] [get_bd_pins xlslice_14/Dout]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins xlconcat_0/In17] [get_bd_pins xlslice_15/Dout]
  connect_bd_net -net xlslice_16_Dout [get_bd_pins xlconcat_0/In14] [get_bd_pins xlslice_16/Dout]
  connect_bd_net -net xlslice_17_Dout [get_bd_pins xlconcat_0/In10] [get_bd_pins xlslice_17/Dout]
  connect_bd_net -net xlslice_18_Dout [get_bd_pins xlconcat_0/In6] [get_bd_pins xlslice_18/Dout]
  connect_bd_net -net xlslice_19_Dout [get_bd_pins xlconcat_0/In2] [get_bd_pins xlslice_19/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlconcat_0/In8] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_20_Dout [get_bd_pins xlconcat_0/In30] [get_bd_pins xlslice_20/Dout]
  connect_bd_net -net xlslice_21_Dout [get_bd_pins xlconcat_0/In26] [get_bd_pins xlslice_21/Dout]
  connect_bd_net -net xlslice_22_Dout [get_bd_pins xlconcat_0/In22] [get_bd_pins xlslice_22/Dout]
  connect_bd_net -net xlslice_23_Dout [get_bd_pins xlconcat_0/In18] [get_bd_pins xlslice_23/Dout]
  connect_bd_net -net xlslice_24_Dout [get_bd_pins xlconcat_0/In15] [get_bd_pins xlslice_24/Dout]
  connect_bd_net -net xlslice_25_Dout [get_bd_pins xlconcat_0/In11] [get_bd_pins xlslice_25/Dout]
  connect_bd_net -net xlslice_26_Dout [get_bd_pins xlconcat_0/In7] [get_bd_pins xlslice_26/Dout]
  connect_bd_net -net xlslice_27_Dout [get_bd_pins xlconcat_0/In3] [get_bd_pins xlslice_27/Dout]
  connect_bd_net -net xlslice_28_Dout [get_bd_pins xlconcat_0/In31] [get_bd_pins xlslice_28/Dout]
  connect_bd_net -net xlslice_29_Dout [get_bd_pins xlconcat_0/In27] [get_bd_pins xlslice_29/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlconcat_0/In4] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_30_Dout [get_bd_pins xlconcat_0/In23] [get_bd_pins xlslice_30/Dout]
  connect_bd_net -net xlslice_31_Dout [get_bd_pins xlconcat_0/In19] [get_bd_pins xlslice_31/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlconcat_0/In0] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlconcat_0/In28] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins xlconcat_0/In24] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins xlconcat_0/In20] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlconcat_0/In16] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_0/In13] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlconcat_0/In9] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hier_0
proc create_hier_cell_hier_0 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hier_0() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 Din
  create_bd_pin -dir O -from 31 -to 0 dout_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {32} \
 ] $xlconcat_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {9} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create instance: xlslice_10, and set properties
  set xlslice_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {10} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_10

  # Create instance: xlslice_11, and set properties
  set xlslice_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_11 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {11} \
   CONFIG.DIN_TO {11} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_11

  # Create instance: xlslice_12, and set properties
  set xlslice_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_12 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {12} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_12

  # Create instance: xlslice_13, and set properties
  set xlslice_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_13 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {13} \
   CONFIG.DIN_TO {13} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_13

  # Create instance: xlslice_14, and set properties
  set xlslice_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_14 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {14} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_14

  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {15} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_15

  # Create instance: xlslice_16, and set properties
  set xlslice_16 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_16 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_16

  # Create instance: xlslice_17, and set properties
  set xlslice_17 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_17 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_17

  # Create instance: xlslice_18, and set properties
  set xlslice_18 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_18 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_18

  # Create instance: xlslice_19, and set properties
  set xlslice_19 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_19 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {19} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_19

  # Create instance: xlslice_20, and set properties
  set xlslice_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_20 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {20} \
   CONFIG.DIN_TO {20} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_20

  # Create instance: xlslice_21, and set properties
  set xlslice_21 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_21 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {21} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_21

  # Create instance: xlslice_22, and set properties
  set xlslice_22 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_22 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {22} \
   CONFIG.DIN_TO {22} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_22

  # Create instance: xlslice_23, and set properties
  set xlslice_23 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_23 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {23} \
   CONFIG.DIN_TO {23} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_23

  # Create instance: xlslice_24, and set properties
  set xlslice_24 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_24 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {24} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_24

  # Create instance: xlslice_25, and set properties
  set xlslice_25 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_25 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_25

  # Create instance: xlslice_26, and set properties
  set xlslice_26 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_26 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {26} \
   CONFIG.DIN_TO {26} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_26

  # Create instance: xlslice_27, and set properties
  set xlslice_27 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_27 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {27} \
   CONFIG.DIN_TO {27} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_27

  # Create instance: xlslice_28, and set properties
  set xlslice_28 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_28 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {28} \
   CONFIG.DIN_TO {28} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_28

  # Create instance: xlslice_29, and set properties
  set xlslice_29 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_29 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {29} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_29

  # Create instance: xlslice_30, and set properties
  set xlslice_30 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_30 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {30} \
   CONFIG.DIN_TO {30} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_30

  # Create instance: xlslice_31, and set properties
  set xlslice_31 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_31 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {31} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_31

  # Create port connections
  connect_bd_net -net xlconcat_0_dout [get_bd_pins Din] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_10/Din] [get_bd_pins xlslice_11/Din] [get_bd_pins xlslice_12/Din] [get_bd_pins xlslice_13/Din] [get_bd_pins xlslice_14/Din] [get_bd_pins xlslice_15/Din] [get_bd_pins xlslice_16/Din] [get_bd_pins xlslice_17/Din] [get_bd_pins xlslice_18/Din] [get_bd_pins xlslice_19/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_20/Din] [get_bd_pins xlslice_21/Din] [get_bd_pins xlslice_22/Din] [get_bd_pins xlslice_23/Din] [get_bd_pins xlslice_24/Din] [get_bd_pins xlslice_25/Din] [get_bd_pins xlslice_26/Din] [get_bd_pins xlslice_27/Din] [get_bd_pins xlslice_28/Din] [get_bd_pins xlslice_29/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_30/Din] [get_bd_pins xlslice_31/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net xlconcat_0_dout1 [get_bd_pins dout_0] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlconcat_0/In12] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_10_Dout [get_bd_pins xlconcat_0/In5] [get_bd_pins xlslice_10/Dout]
  connect_bd_net -net xlslice_11_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_11/Dout]
  connect_bd_net -net xlslice_12_Dout [get_bd_pins xlconcat_0/In29] [get_bd_pins xlslice_12/Dout]
  connect_bd_net -net xlslice_13_Dout [get_bd_pins xlconcat_0/In25] [get_bd_pins xlslice_13/Dout]
  connect_bd_net -net xlslice_14_Dout [get_bd_pins xlconcat_0/In21] [get_bd_pins xlslice_14/Dout]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins xlconcat_0/In17] [get_bd_pins xlslice_15/Dout]
  connect_bd_net -net xlslice_16_Dout [get_bd_pins xlconcat_0/In14] [get_bd_pins xlslice_16/Dout]
  connect_bd_net -net xlslice_17_Dout [get_bd_pins xlconcat_0/In10] [get_bd_pins xlslice_17/Dout]
  connect_bd_net -net xlslice_18_Dout [get_bd_pins xlconcat_0/In6] [get_bd_pins xlslice_18/Dout]
  connect_bd_net -net xlslice_19_Dout [get_bd_pins xlconcat_0/In2] [get_bd_pins xlslice_19/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlconcat_0/In8] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_20_Dout [get_bd_pins xlconcat_0/In30] [get_bd_pins xlslice_20/Dout]
  connect_bd_net -net xlslice_21_Dout [get_bd_pins xlconcat_0/In26] [get_bd_pins xlslice_21/Dout]
  connect_bd_net -net xlslice_22_Dout [get_bd_pins xlconcat_0/In22] [get_bd_pins xlslice_22/Dout]
  connect_bd_net -net xlslice_23_Dout [get_bd_pins xlconcat_0/In18] [get_bd_pins xlslice_23/Dout]
  connect_bd_net -net xlslice_24_Dout [get_bd_pins xlconcat_0/In15] [get_bd_pins xlslice_24/Dout]
  connect_bd_net -net xlslice_25_Dout [get_bd_pins xlconcat_0/In11] [get_bd_pins xlslice_25/Dout]
  connect_bd_net -net xlslice_26_Dout [get_bd_pins xlconcat_0/In7] [get_bd_pins xlslice_26/Dout]
  connect_bd_net -net xlslice_27_Dout [get_bd_pins xlconcat_0/In3] [get_bd_pins xlslice_27/Dout]
  connect_bd_net -net xlslice_28_Dout [get_bd_pins xlconcat_0/In31] [get_bd_pins xlslice_28/Dout]
  connect_bd_net -net xlslice_29_Dout [get_bd_pins xlconcat_0/In27] [get_bd_pins xlslice_29/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlconcat_0/In4] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_30_Dout [get_bd_pins xlconcat_0/In23] [get_bd_pins xlslice_30/Dout]
  connect_bd_net -net xlslice_31_Dout [get_bd_pins xlconcat_0/In19] [get_bd_pins xlslice_31/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlconcat_0/In0] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlconcat_0/In28] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins xlconcat_0/In24] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins xlconcat_0/In20] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlconcat_0/In16] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_0/In13] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlconcat_0/In9] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hier_1
proc create_hier_cell_hier_1 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hier_1() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 Din
  create_bd_pin -dir O -from 31 -to 0 dout_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {32} \
 ] $xlconcat_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {9} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create instance: xlslice_10, and set properties
  set xlslice_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {10} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_10

  # Create instance: xlslice_11, and set properties
  set xlslice_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_11 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {11} \
   CONFIG.DIN_TO {11} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_11

  # Create instance: xlslice_12, and set properties
  set xlslice_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_12 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {12} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_12

  # Create instance: xlslice_13, and set properties
  set xlslice_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_13 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {13} \
   CONFIG.DIN_TO {13} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_13

  # Create instance: xlslice_14, and set properties
  set xlslice_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_14 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {14} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_14

  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {15} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_15

  # Create instance: xlslice_16, and set properties
  set xlslice_16 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_16 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_16

  # Create instance: xlslice_17, and set properties
  set xlslice_17 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_17 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_17

  # Create instance: xlslice_18, and set properties
  set xlslice_18 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_18 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_18

  # Create instance: xlslice_19, and set properties
  set xlslice_19 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_19 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {19} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_19

  # Create instance: xlslice_20, and set properties
  set xlslice_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_20 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {20} \
   CONFIG.DIN_TO {20} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_20

  # Create instance: xlslice_21, and set properties
  set xlslice_21 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_21 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {21} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_21

  # Create instance: xlslice_22, and set properties
  set xlslice_22 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_22 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {22} \
   CONFIG.DIN_TO {22} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_22

  # Create instance: xlslice_23, and set properties
  set xlslice_23 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_23 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {23} \
   CONFIG.DIN_TO {23} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_23

  # Create instance: xlslice_24, and set properties
  set xlslice_24 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_24 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {24} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_24

  # Create instance: xlslice_25, and set properties
  set xlslice_25 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_25 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_25

  # Create instance: xlslice_26, and set properties
  set xlslice_26 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_26 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {26} \
   CONFIG.DIN_TO {26} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_26

  # Create instance: xlslice_27, and set properties
  set xlslice_27 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_27 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {27} \
   CONFIG.DIN_TO {27} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_27

  # Create instance: xlslice_28, and set properties
  set xlslice_28 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_28 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {28} \
   CONFIG.DIN_TO {28} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_28

  # Create instance: xlslice_29, and set properties
  set xlslice_29 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_29 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {29} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_29

  # Create instance: xlslice_30, and set properties
  set xlslice_30 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_30 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {30} \
   CONFIG.DIN_TO {30} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_30

  # Create instance: xlslice_31, and set properties
  set xlslice_31 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_31 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {31} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_31

  # Create port connections
  connect_bd_net -net xlconcat_0_dout [get_bd_pins Din] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_10/Din] [get_bd_pins xlslice_11/Din] [get_bd_pins xlslice_12/Din] [get_bd_pins xlslice_13/Din] [get_bd_pins xlslice_14/Din] [get_bd_pins xlslice_15/Din] [get_bd_pins xlslice_16/Din] [get_bd_pins xlslice_17/Din] [get_bd_pins xlslice_18/Din] [get_bd_pins xlslice_19/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_20/Din] [get_bd_pins xlslice_21/Din] [get_bd_pins xlslice_22/Din] [get_bd_pins xlslice_23/Din] [get_bd_pins xlslice_24/Din] [get_bd_pins xlslice_25/Din] [get_bd_pins xlslice_26/Din] [get_bd_pins xlslice_27/Din] [get_bd_pins xlslice_28/Din] [get_bd_pins xlslice_29/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_30/Din] [get_bd_pins xlslice_31/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net xlconcat_0_dout1 [get_bd_pins dout_0] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlconcat_0/In12] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_10_Dout [get_bd_pins xlconcat_0/In5] [get_bd_pins xlslice_10/Dout]
  connect_bd_net -net xlslice_11_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_11/Dout]
  connect_bd_net -net xlslice_12_Dout [get_bd_pins xlconcat_0/In29] [get_bd_pins xlslice_12/Dout]
  connect_bd_net -net xlslice_13_Dout [get_bd_pins xlconcat_0/In25] [get_bd_pins xlslice_13/Dout]
  connect_bd_net -net xlslice_14_Dout [get_bd_pins xlconcat_0/In21] [get_bd_pins xlslice_14/Dout]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins xlconcat_0/In17] [get_bd_pins xlslice_15/Dout]
  connect_bd_net -net xlslice_16_Dout [get_bd_pins xlconcat_0/In14] [get_bd_pins xlslice_16/Dout]
  connect_bd_net -net xlslice_17_Dout [get_bd_pins xlconcat_0/In10] [get_bd_pins xlslice_17/Dout]
  connect_bd_net -net xlslice_18_Dout [get_bd_pins xlconcat_0/In6] [get_bd_pins xlslice_18/Dout]
  connect_bd_net -net xlslice_19_Dout [get_bd_pins xlconcat_0/In2] [get_bd_pins xlslice_19/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlconcat_0/In8] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_20_Dout [get_bd_pins xlconcat_0/In30] [get_bd_pins xlslice_20/Dout]
  connect_bd_net -net xlslice_21_Dout [get_bd_pins xlconcat_0/In26] [get_bd_pins xlslice_21/Dout]
  connect_bd_net -net xlslice_22_Dout [get_bd_pins xlconcat_0/In22] [get_bd_pins xlslice_22/Dout]
  connect_bd_net -net xlslice_23_Dout [get_bd_pins xlconcat_0/In18] [get_bd_pins xlslice_23/Dout]
  connect_bd_net -net xlslice_24_Dout [get_bd_pins xlconcat_0/In15] [get_bd_pins xlslice_24/Dout]
  connect_bd_net -net xlslice_25_Dout [get_bd_pins xlconcat_0/In11] [get_bd_pins xlslice_25/Dout]
  connect_bd_net -net xlslice_26_Dout [get_bd_pins xlconcat_0/In7] [get_bd_pins xlslice_26/Dout]
  connect_bd_net -net xlslice_27_Dout [get_bd_pins xlconcat_0/In3] [get_bd_pins xlslice_27/Dout]
  connect_bd_net -net xlslice_28_Dout [get_bd_pins xlconcat_0/In31] [get_bd_pins xlslice_28/Dout]
  connect_bd_net -net xlslice_29_Dout [get_bd_pins xlconcat_0/In27] [get_bd_pins xlslice_29/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlconcat_0/In4] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_30_Dout [get_bd_pins xlconcat_0/In23] [get_bd_pins xlslice_30/Dout]
  connect_bd_net -net xlslice_31_Dout [get_bd_pins xlconcat_0/In19] [get_bd_pins xlslice_31/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlconcat_0/In0] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlconcat_0/In28] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins xlconcat_0/In24] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins xlconcat_0/In20] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlconcat_0/In16] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_0/In13] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlconcat_0/In9] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hier_2
proc create_hier_cell_hier_2 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hier_2() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 Din
  create_bd_pin -dir O -from 31 -to 0 dout_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {32} \
 ] $xlconcat_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {9} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create instance: xlslice_10, and set properties
  set xlslice_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {10} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_10

  # Create instance: xlslice_11, and set properties
  set xlslice_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_11 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {11} \
   CONFIG.DIN_TO {11} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_11

  # Create instance: xlslice_12, and set properties
  set xlslice_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_12 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {12} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_12

  # Create instance: xlslice_13, and set properties
  set xlslice_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_13 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {13} \
   CONFIG.DIN_TO {13} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_13

  # Create instance: xlslice_14, and set properties
  set xlslice_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_14 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {14} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_14

  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {15} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_15

  # Create instance: xlslice_16, and set properties
  set xlslice_16 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_16 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_16

  # Create instance: xlslice_17, and set properties
  set xlslice_17 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_17 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_17

  # Create instance: xlslice_18, and set properties
  set xlslice_18 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_18 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_18

  # Create instance: xlslice_19, and set properties
  set xlslice_19 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_19 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {19} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_19

  # Create instance: xlslice_20, and set properties
  set xlslice_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_20 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {20} \
   CONFIG.DIN_TO {20} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_20

  # Create instance: xlslice_21, and set properties
  set xlslice_21 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_21 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {21} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_21

  # Create instance: xlslice_22, and set properties
  set xlslice_22 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_22 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {22} \
   CONFIG.DIN_TO {22} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_22

  # Create instance: xlslice_23, and set properties
  set xlslice_23 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_23 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {23} \
   CONFIG.DIN_TO {23} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_23

  # Create instance: xlslice_24, and set properties
  set xlslice_24 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_24 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {24} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_24

  # Create instance: xlslice_25, and set properties
  set xlslice_25 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_25 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_25

  # Create instance: xlslice_26, and set properties
  set xlslice_26 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_26 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {26} \
   CONFIG.DIN_TO {26} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_26

  # Create instance: xlslice_27, and set properties
  set xlslice_27 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_27 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {27} \
   CONFIG.DIN_TO {27} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_27

  # Create instance: xlslice_28, and set properties
  set xlslice_28 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_28 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {28} \
   CONFIG.DIN_TO {28} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_28

  # Create instance: xlslice_29, and set properties
  set xlslice_29 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_29 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {29} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_29

  # Create instance: xlslice_30, and set properties
  set xlslice_30 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_30 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {30} \
   CONFIG.DIN_TO {30} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_30

  # Create instance: xlslice_31, and set properties
  set xlslice_31 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_31 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {31} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_31

  # Create port connections
  connect_bd_net -net xlconcat_0_dout [get_bd_pins Din] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_10/Din] [get_bd_pins xlslice_11/Din] [get_bd_pins xlslice_12/Din] [get_bd_pins xlslice_13/Din] [get_bd_pins xlslice_14/Din] [get_bd_pins xlslice_15/Din] [get_bd_pins xlslice_16/Din] [get_bd_pins xlslice_17/Din] [get_bd_pins xlslice_18/Din] [get_bd_pins xlslice_19/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_20/Din] [get_bd_pins xlslice_21/Din] [get_bd_pins xlslice_22/Din] [get_bd_pins xlslice_23/Din] [get_bd_pins xlslice_24/Din] [get_bd_pins xlslice_25/Din] [get_bd_pins xlslice_26/Din] [get_bd_pins xlslice_27/Din] [get_bd_pins xlslice_28/Din] [get_bd_pins xlslice_29/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_30/Din] [get_bd_pins xlslice_31/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net xlconcat_0_dout1 [get_bd_pins dout_0] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlconcat_0/In12] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_10_Dout [get_bd_pins xlconcat_0/In5] [get_bd_pins xlslice_10/Dout]
  connect_bd_net -net xlslice_11_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_11/Dout]
  connect_bd_net -net xlslice_12_Dout [get_bd_pins xlconcat_0/In29] [get_bd_pins xlslice_12/Dout]
  connect_bd_net -net xlslice_13_Dout [get_bd_pins xlconcat_0/In25] [get_bd_pins xlslice_13/Dout]
  connect_bd_net -net xlslice_14_Dout [get_bd_pins xlconcat_0/In21] [get_bd_pins xlslice_14/Dout]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins xlconcat_0/In17] [get_bd_pins xlslice_15/Dout]
  connect_bd_net -net xlslice_16_Dout [get_bd_pins xlconcat_0/In14] [get_bd_pins xlslice_16/Dout]
  connect_bd_net -net xlslice_17_Dout [get_bd_pins xlconcat_0/In10] [get_bd_pins xlslice_17/Dout]
  connect_bd_net -net xlslice_18_Dout [get_bd_pins xlconcat_0/In6] [get_bd_pins xlslice_18/Dout]
  connect_bd_net -net xlslice_19_Dout [get_bd_pins xlconcat_0/In2] [get_bd_pins xlslice_19/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlconcat_0/In8] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_20_Dout [get_bd_pins xlconcat_0/In30] [get_bd_pins xlslice_20/Dout]
  connect_bd_net -net xlslice_21_Dout [get_bd_pins xlconcat_0/In26] [get_bd_pins xlslice_21/Dout]
  connect_bd_net -net xlslice_22_Dout [get_bd_pins xlconcat_0/In22] [get_bd_pins xlslice_22/Dout]
  connect_bd_net -net xlslice_23_Dout [get_bd_pins xlconcat_0/In18] [get_bd_pins xlslice_23/Dout]
  connect_bd_net -net xlslice_24_Dout [get_bd_pins xlconcat_0/In15] [get_bd_pins xlslice_24/Dout]
  connect_bd_net -net xlslice_25_Dout [get_bd_pins xlconcat_0/In11] [get_bd_pins xlslice_25/Dout]
  connect_bd_net -net xlslice_26_Dout [get_bd_pins xlconcat_0/In7] [get_bd_pins xlslice_26/Dout]
  connect_bd_net -net xlslice_27_Dout [get_bd_pins xlconcat_0/In3] [get_bd_pins xlslice_27/Dout]
  connect_bd_net -net xlslice_28_Dout [get_bd_pins xlconcat_0/In31] [get_bd_pins xlslice_28/Dout]
  connect_bd_net -net xlslice_29_Dout [get_bd_pins xlconcat_0/In27] [get_bd_pins xlslice_29/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlconcat_0/In4] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_30_Dout [get_bd_pins xlconcat_0/In23] [get_bd_pins xlslice_30/Dout]
  connect_bd_net -net xlslice_31_Dout [get_bd_pins xlconcat_0/In19] [get_bd_pins xlslice_31/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlconcat_0/In0] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlconcat_0/In28] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins xlconcat_0/In24] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins xlconcat_0/In20] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlconcat_0/In16] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_0/In13] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlconcat_0/In9] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hier_3
proc create_hier_cell_hier_3 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hier_3() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 Din
  create_bd_pin -dir O -from 31 -to 0 dout_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {32} \
 ] $xlconcat_0

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_1

  # Create instance: xlslice_2, and set properties
  set xlslice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_2 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_2

  # Create instance: xlslice_3, and set properties
  set xlslice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_3 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_3

  # Create instance: xlslice_4, and set properties
  set xlslice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_4 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {4} \
   CONFIG.DIN_TO {4} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_4

  # Create instance: xlslice_5, and set properties
  set xlslice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_5 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {5} \
   CONFIG.DIN_TO {5} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_5

  # Create instance: xlslice_6, and set properties
  set xlslice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_6 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {6} \
   CONFIG.DIN_TO {6} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_6

  # Create instance: xlslice_7, and set properties
  set xlslice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_7 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {7} \
   CONFIG.DIN_TO {7} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_7

  # Create instance: xlslice_8, and set properties
  set xlslice_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_8 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {8} \
   CONFIG.DIN_TO {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_8

  # Create instance: xlslice_9, and set properties
  set xlslice_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_9 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {9} \
   CONFIG.DIN_TO {9} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_9

  # Create instance: xlslice_10, and set properties
  set xlslice_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_10 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {10} \
   CONFIG.DIN_TO {10} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_10

  # Create instance: xlslice_11, and set properties
  set xlslice_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_11 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {11} \
   CONFIG.DIN_TO {11} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_11

  # Create instance: xlslice_12, and set properties
  set xlslice_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_12 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {12} \
   CONFIG.DIN_TO {12} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_12

  # Create instance: xlslice_13, and set properties
  set xlslice_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_13 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {13} \
   CONFIG.DIN_TO {13} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_13

  # Create instance: xlslice_14, and set properties
  set xlslice_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_14 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {14} \
   CONFIG.DIN_TO {14} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_14

  # Create instance: xlslice_15, and set properties
  set xlslice_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_15 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {15} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_15

  # Create instance: xlslice_16, and set properties
  set xlslice_16 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_16 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {16} \
   CONFIG.DIN_TO {16} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_16

  # Create instance: xlslice_17, and set properties
  set xlslice_17 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_17 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {17} \
   CONFIG.DIN_TO {17} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_17

  # Create instance: xlslice_18, and set properties
  set xlslice_18 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_18 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {18} \
   CONFIG.DIN_TO {18} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_18

  # Create instance: xlslice_19, and set properties
  set xlslice_19 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_19 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {19} \
   CONFIG.DIN_TO {19} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_19

  # Create instance: xlslice_20, and set properties
  set xlslice_20 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_20 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {20} \
   CONFIG.DIN_TO {20} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_20

  # Create instance: xlslice_21, and set properties
  set xlslice_21 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_21 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {21} \
   CONFIG.DIN_TO {21} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_21

  # Create instance: xlslice_22, and set properties
  set xlslice_22 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_22 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {22} \
   CONFIG.DIN_TO {22} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_22

  # Create instance: xlslice_23, and set properties
  set xlslice_23 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_23 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {23} \
   CONFIG.DIN_TO {23} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_23

  # Create instance: xlslice_24, and set properties
  set xlslice_24 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_24 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {24} \
   CONFIG.DIN_TO {24} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_24

  # Create instance: xlslice_25, and set properties
  set xlslice_25 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_25 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {25} \
   CONFIG.DIN_TO {25} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_25

  # Create instance: xlslice_26, and set properties
  set xlslice_26 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_26 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {26} \
   CONFIG.DIN_TO {26} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_26

  # Create instance: xlslice_27, and set properties
  set xlslice_27 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_27 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {27} \
   CONFIG.DIN_TO {27} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_27

  # Create instance: xlslice_28, and set properties
  set xlslice_28 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_28 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {28} \
   CONFIG.DIN_TO {28} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_28

  # Create instance: xlslice_29, and set properties
  set xlslice_29 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_29 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {29} \
   CONFIG.DIN_TO {29} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_29

  # Create instance: xlslice_30, and set properties
  set xlslice_30 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_30 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {30} \
   CONFIG.DIN_TO {30} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_30

  # Create instance: xlslice_31, and set properties
  set xlslice_31 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_31 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {31} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_31

  # Create port connections
  connect_bd_net -net xlconcat_0_dout [get_bd_pins Din] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din] [get_bd_pins xlslice_10/Din] [get_bd_pins xlslice_11/Din] [get_bd_pins xlslice_12/Din] [get_bd_pins xlslice_13/Din] [get_bd_pins xlslice_14/Din] [get_bd_pins xlslice_15/Din] [get_bd_pins xlslice_16/Din] [get_bd_pins xlslice_17/Din] [get_bd_pins xlslice_18/Din] [get_bd_pins xlslice_19/Din] [get_bd_pins xlslice_2/Din] [get_bd_pins xlslice_20/Din] [get_bd_pins xlslice_21/Din] [get_bd_pins xlslice_22/Din] [get_bd_pins xlslice_23/Din] [get_bd_pins xlslice_24/Din] [get_bd_pins xlslice_25/Din] [get_bd_pins xlslice_26/Din] [get_bd_pins xlslice_27/Din] [get_bd_pins xlslice_28/Din] [get_bd_pins xlslice_29/Din] [get_bd_pins xlslice_3/Din] [get_bd_pins xlslice_30/Din] [get_bd_pins xlslice_31/Din] [get_bd_pins xlslice_4/Din] [get_bd_pins xlslice_5/Din] [get_bd_pins xlslice_6/Din] [get_bd_pins xlslice_7/Din] [get_bd_pins xlslice_8/Din] [get_bd_pins xlslice_9/Din]
  connect_bd_net -net xlconcat_0_dout1 [get_bd_pins dout_0] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlconcat_0/In12] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_10_Dout [get_bd_pins xlconcat_0/In5] [get_bd_pins xlslice_10/Dout]
  connect_bd_net -net xlslice_11_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_11/Dout]
  connect_bd_net -net xlslice_12_Dout [get_bd_pins xlconcat_0/In29] [get_bd_pins xlslice_12/Dout]
  connect_bd_net -net xlslice_13_Dout [get_bd_pins xlconcat_0/In25] [get_bd_pins xlslice_13/Dout]
  connect_bd_net -net xlslice_14_Dout [get_bd_pins xlconcat_0/In21] [get_bd_pins xlslice_14/Dout]
  connect_bd_net -net xlslice_15_Dout [get_bd_pins xlconcat_0/In17] [get_bd_pins xlslice_15/Dout]
  connect_bd_net -net xlslice_16_Dout [get_bd_pins xlconcat_0/In14] [get_bd_pins xlslice_16/Dout]
  connect_bd_net -net xlslice_17_Dout [get_bd_pins xlconcat_0/In10] [get_bd_pins xlslice_17/Dout]
  connect_bd_net -net xlslice_18_Dout [get_bd_pins xlconcat_0/In6] [get_bd_pins xlslice_18/Dout]
  connect_bd_net -net xlslice_19_Dout [get_bd_pins xlconcat_0/In2] [get_bd_pins xlslice_19/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlconcat_0/In8] [get_bd_pins xlslice_1/Dout]
  connect_bd_net -net xlslice_20_Dout [get_bd_pins xlconcat_0/In30] [get_bd_pins xlslice_20/Dout]
  connect_bd_net -net xlslice_21_Dout [get_bd_pins xlconcat_0/In26] [get_bd_pins xlslice_21/Dout]
  connect_bd_net -net xlslice_22_Dout [get_bd_pins xlconcat_0/In22] [get_bd_pins xlslice_22/Dout]
  connect_bd_net -net xlslice_23_Dout [get_bd_pins xlconcat_0/In18] [get_bd_pins xlslice_23/Dout]
  connect_bd_net -net xlslice_24_Dout [get_bd_pins xlconcat_0/In15] [get_bd_pins xlslice_24/Dout]
  connect_bd_net -net xlslice_25_Dout [get_bd_pins xlconcat_0/In11] [get_bd_pins xlslice_25/Dout]
  connect_bd_net -net xlslice_26_Dout [get_bd_pins xlconcat_0/In7] [get_bd_pins xlslice_26/Dout]
  connect_bd_net -net xlslice_27_Dout [get_bd_pins xlconcat_0/In3] [get_bd_pins xlslice_27/Dout]
  connect_bd_net -net xlslice_28_Dout [get_bd_pins xlconcat_0/In31] [get_bd_pins xlslice_28/Dout]
  connect_bd_net -net xlslice_29_Dout [get_bd_pins xlconcat_0/In27] [get_bd_pins xlslice_29/Dout]
  connect_bd_net -net xlslice_2_Dout [get_bd_pins xlconcat_0/In4] [get_bd_pins xlslice_2/Dout]
  connect_bd_net -net xlslice_30_Dout [get_bd_pins xlconcat_0/In23] [get_bd_pins xlslice_30/Dout]
  connect_bd_net -net xlslice_31_Dout [get_bd_pins xlconcat_0/In19] [get_bd_pins xlslice_31/Dout]
  connect_bd_net -net xlslice_3_Dout [get_bd_pins xlconcat_0/In0] [get_bd_pins xlslice_3/Dout]
  connect_bd_net -net xlslice_4_Dout [get_bd_pins xlconcat_0/In28] [get_bd_pins xlslice_4/Dout]
  connect_bd_net -net xlslice_5_Dout [get_bd_pins xlconcat_0/In24] [get_bd_pins xlslice_5/Dout]
  connect_bd_net -net xlslice_6_Dout [get_bd_pins xlconcat_0/In20] [get_bd_pins xlslice_6/Dout]
  connect_bd_net -net xlslice_7_Dout [get_bd_pins xlconcat_0/In16] [get_bd_pins xlslice_7/Dout]
  connect_bd_net -net xlslice_8_Dout [get_bd_pins xlconcat_0/In13] [get_bd_pins xlslice_8/Dout]
  connect_bd_net -net xlslice_9_Dout [get_bd_pins xlconcat_0/In9] [get_bd_pins xlslice_9/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_15
proc create_hier_cell_lgain_adc_15 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_15() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC


  # Create pins
  create_bd_pin -dir I -from 7 -to 0 In0
  create_bd_pin -dir I -from 7 -to 0 In1
  create_bd_pin -dir I -from 7 -to 0 In2
  create_bd_pin -dir I -from 7 -to 0 In3
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir I S_ACLK
  create_bd_pin -dir I S_ARESETN
  create_bd_pin -dir O -from 31 -to 0 dout_0_3
  create_bd_pin -dir I empty_0
  create_bd_pin -dir I empty_1
  create_bd_pin -dir I empty_2
  create_bd_pin -dir I empty_3

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]

  # Create instance: empty_concat, and set properties
  set empty_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 empty_concat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $empty_concat

  # Create instance: empty_inverse, and set properties
  set empty_inverse [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 empty_inverse ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $empty_inverse

  # Create instance: fifo_generator_0, and set properties
  set fifo_generator_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_generator_0 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TKEEP_WIDTH {4} \
   CONFIG.TSTRB_WIDTH {4} \
   CONFIG.TUSER_WIDTH {0} \
 ] $fifo_generator_0

  # Create instance: hier_3
  create_hier_cell_hier_3_3 $hier_obj hier_3

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_3, and set properties
  set xlconcat_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_3 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $xlconcat_3

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins M_AXIS_LGAIN_ADC] [get_bd_intf_pins axis_clock_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net fifo_generator_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/S_AXIS] [get_bd_intf_pins fifo_generator_0/M_AXIS]

  # Create port connections
  connect_bd_net -net In0_1 [get_bd_pins In0] [get_bd_pins xlconcat_3/In0]
  connect_bd_net -net In1_1 [get_bd_pins In1] [get_bd_pins xlconcat_3/In1]
  connect_bd_net -net In2_1 [get_bd_pins In2] [get_bd_pins xlconcat_3/In2]
  connect_bd_net -net In3_1 [get_bd_pins In3] [get_bd_pins xlconcat_3/In3]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins axis_clock_converter_0/m_axis_aclk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins axis_clock_converter_0/m_axis_aresetn]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins S_ARESETN] [get_bd_pins axis_clock_converter_0/s_axis_aresetn] [get_bd_pins fifo_generator_0/s_aresetn]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_ACLK] [get_bd_pins axis_clock_converter_0/s_axis_aclk] [get_bd_pins fifo_generator_0/s_aclk]
  connect_bd_net -net empty_0_1 [get_bd_pins empty_0] [get_bd_pins empty_concat/In0]
  connect_bd_net -net empty_1_1 [get_bd_pins empty_1] [get_bd_pins empty_concat/In1]
  connect_bd_net -net empty_2_1 [get_bd_pins empty_2] [get_bd_pins empty_concat/In2]
  connect_bd_net -net empty_3_1 [get_bd_pins empty_3] [get_bd_pins empty_concat/In3]
  connect_bd_net -net empty_inverse_Res [get_bd_pins empty_inverse/Res] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net hier_3_dout_0 [get_bd_pins dout_0_3] [get_bd_pins fifo_generator_0/s_axis_tdata] [get_bd_pins hier_3/dout_0]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins fifo_generator_0/s_axis_tvalid] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins empty_concat/dout] [get_bd_pins empty_inverse/Op1]
  connect_bd_net -net xlconcat_3_dout [get_bd_pins hier_3/Din] [get_bd_pins xlconcat_3/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_14
proc create_hier_cell_lgain_adc_14 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_14() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC


  # Create pins
  create_bd_pin -dir I -from 7 -to 0 In0
  create_bd_pin -dir I -from 7 -to 0 In1
  create_bd_pin -dir I -from 7 -to 0 In2
  create_bd_pin -dir I -from 7 -to 0 In3
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir I S_ACLK
  create_bd_pin -dir I S_ARESETN
  create_bd_pin -dir O -from 31 -to 0 dout_0_1
  create_bd_pin -dir I empty_0
  create_bd_pin -dir I empty_1
  create_bd_pin -dir I empty_2
  create_bd_pin -dir I empty_3

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]

  # Create instance: empty_concat, and set properties
  set empty_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 empty_concat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $empty_concat

  # Create instance: empty_inverse, and set properties
  set empty_inverse [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 empty_inverse ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $empty_inverse

  # Create instance: fifo_generator_0, and set properties
  set fifo_generator_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_generator_0 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TKEEP_WIDTH {4} \
   CONFIG.TSTRB_WIDTH {4} \
   CONFIG.TUSER_WIDTH {0} \
 ] $fifo_generator_0

  # Create instance: hier_1
  create_hier_cell_hier_1_3 $hier_obj hier_1

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_1, and set properties
  set xlconcat_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_1 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $xlconcat_1

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins M_AXIS_LGAIN_ADC] [get_bd_intf_pins axis_clock_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net fifo_generator_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/S_AXIS] [get_bd_intf_pins fifo_generator_0/M_AXIS]

  # Create port connections
  connect_bd_net -net In0_1 [get_bd_pins In0] [get_bd_pins xlconcat_1/In0]
  connect_bd_net -net In1_1 [get_bd_pins In1] [get_bd_pins xlconcat_1/In1]
  connect_bd_net -net In2_1 [get_bd_pins In2] [get_bd_pins xlconcat_1/In2]
  connect_bd_net -net In3_1 [get_bd_pins In3] [get_bd_pins xlconcat_1/In3]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins axis_clock_converter_0/m_axis_aclk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins axis_clock_converter_0/m_axis_aresetn]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins S_ARESETN] [get_bd_pins axis_clock_converter_0/s_axis_aresetn] [get_bd_pins fifo_generator_0/s_aresetn]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_ACLK] [get_bd_pins axis_clock_converter_0/s_axis_aclk] [get_bd_pins fifo_generator_0/s_aclk]
  connect_bd_net -net empty_0_1 [get_bd_pins empty_0] [get_bd_pins empty_concat/In0]
  connect_bd_net -net empty_1_1 [get_bd_pins empty_1] [get_bd_pins empty_concat/In1]
  connect_bd_net -net empty_2_1 [get_bd_pins empty_2] [get_bd_pins empty_concat/In2]
  connect_bd_net -net empty_3_1 [get_bd_pins empty_3] [get_bd_pins empty_concat/In3]
  connect_bd_net -net empty_inverse_Res [get_bd_pins empty_inverse/Res] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net hier_1_dout_0 [get_bd_pins dout_0_1] [get_bd_pins fifo_generator_0/s_axis_tdata] [get_bd_pins hier_1/dout_0]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins fifo_generator_0/s_axis_tvalid] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins empty_concat/dout] [get_bd_pins empty_inverse/Op1]
  connect_bd_net -net xlconcat_1_dout [get_bd_pins hier_1/Din] [get_bd_pins xlconcat_1/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_13
proc create_hier_cell_lgain_adc_13 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_13() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC


  # Create pins
  create_bd_pin -dir I -from 7 -to 0 In0
  create_bd_pin -dir I -from 7 -to 0 In1
  create_bd_pin -dir I -from 7 -to 0 In2
  create_bd_pin -dir I -from 7 -to 0 In3
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir I S_ACLK
  create_bd_pin -dir I S_ARESETN
  create_bd_pin -dir O -from 31 -to 0 dout_0_2
  create_bd_pin -dir I empty_0
  create_bd_pin -dir I empty_1
  create_bd_pin -dir I empty_2
  create_bd_pin -dir I empty_3

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]

  # Create instance: empty_concat, and set properties
  set empty_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 empty_concat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $empty_concat

  # Create instance: empty_inverse, and set properties
  set empty_inverse [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 empty_inverse ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $empty_inverse

  # Create instance: fifo_generator_0, and set properties
  set fifo_generator_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_generator_0 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TKEEP_WIDTH {4} \
   CONFIG.TSTRB_WIDTH {4} \
   CONFIG.TUSER_WIDTH {0} \
 ] $fifo_generator_0

  # Create instance: hier_2
  create_hier_cell_hier_2_3 $hier_obj hier_2

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_2, and set properties
  set xlconcat_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_2 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $xlconcat_2

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins M_AXIS_LGAIN_ADC] [get_bd_intf_pins axis_clock_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net fifo_generator_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/S_AXIS] [get_bd_intf_pins fifo_generator_0/M_AXIS]

  # Create port connections
  connect_bd_net -net In0_1 [get_bd_pins In0] [get_bd_pins xlconcat_2/In0]
  connect_bd_net -net In1_1 [get_bd_pins In1] [get_bd_pins xlconcat_2/In1]
  connect_bd_net -net In2_1 [get_bd_pins In2] [get_bd_pins xlconcat_2/In2]
  connect_bd_net -net In3_1 [get_bd_pins In3] [get_bd_pins xlconcat_2/In3]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins axis_clock_converter_0/m_axis_aclk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins axis_clock_converter_0/m_axis_aresetn]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins S_ARESETN] [get_bd_pins axis_clock_converter_0/s_axis_aresetn] [get_bd_pins fifo_generator_0/s_aresetn]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_ACLK] [get_bd_pins axis_clock_converter_0/s_axis_aclk] [get_bd_pins fifo_generator_0/s_aclk]
  connect_bd_net -net empty_0_1 [get_bd_pins empty_0] [get_bd_pins empty_concat/In0]
  connect_bd_net -net empty_1_1 [get_bd_pins empty_1] [get_bd_pins empty_concat/In1]
  connect_bd_net -net empty_2_1 [get_bd_pins empty_2] [get_bd_pins empty_concat/In2]
  connect_bd_net -net empty_3_1 [get_bd_pins empty_3] [get_bd_pins empty_concat/In3]
  connect_bd_net -net empty_inverse_Res [get_bd_pins empty_inverse/Res] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net hier_2_dout_0 [get_bd_pins dout_0_2] [get_bd_pins fifo_generator_0/s_axis_tdata] [get_bd_pins hier_2/dout_0]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins fifo_generator_0/s_axis_tvalid] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins empty_concat/dout] [get_bd_pins empty_inverse/Op1]
  connect_bd_net -net xlconcat_2_dout [get_bd_pins hier_2/Din] [get_bd_pins xlconcat_2/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_12
proc create_hier_cell_lgain_adc_12 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_12() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC


  # Create pins
  create_bd_pin -dir I -from 7 -to 0 In0
  create_bd_pin -dir I -from 7 -to 0 In1
  create_bd_pin -dir I -from 7 -to 0 In2
  create_bd_pin -dir I -from 7 -to 0 In3
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir I S_ACLK
  create_bd_pin -dir I S_ARESETN
  create_bd_pin -dir O -from 31 -to 0 dout_0_0
  create_bd_pin -dir I empty_0
  create_bd_pin -dir I empty_1
  create_bd_pin -dir I empty_2
  create_bd_pin -dir I empty_3

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]

  # Create instance: empty_concat, and set properties
  set empty_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 empty_concat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $empty_concat

  # Create instance: empty_inverse, and set properties
  set empty_inverse [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 empty_inverse ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $empty_inverse

  # Create instance: fifo_generator_0, and set properties
  set fifo_generator_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_generator_0 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TKEEP_WIDTH {4} \
   CONFIG.TSTRB_WIDTH {4} \
   CONFIG.TUSER_WIDTH {0} \
 ] $fifo_generator_0

  # Create instance: hier_0
  create_hier_cell_hier_0_3 $hier_obj hier_0

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $xlconcat_0

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins M_AXIS_LGAIN_ADC] [get_bd_intf_pins axis_clock_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net fifo_generator_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/S_AXIS] [get_bd_intf_pins fifo_generator_0/M_AXIS]

  # Create port connections
  connect_bd_net -net In0_1 [get_bd_pins In0] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net In1_1 [get_bd_pins In1] [get_bd_pins xlconcat_0/In1]
  connect_bd_net -net In2_1 [get_bd_pins In2] [get_bd_pins xlconcat_0/In2]
  connect_bd_net -net In3_1 [get_bd_pins In3] [get_bd_pins xlconcat_0/In3]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins axis_clock_converter_0/m_axis_aclk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins axis_clock_converter_0/m_axis_aresetn]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins S_ARESETN] [get_bd_pins axis_clock_converter_0/s_axis_aresetn] [get_bd_pins fifo_generator_0/s_aresetn]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_ACLK] [get_bd_pins axis_clock_converter_0/s_axis_aclk] [get_bd_pins fifo_generator_0/s_aclk]
  connect_bd_net -net empty_0_1 [get_bd_pins empty_0] [get_bd_pins empty_concat/In0]
  connect_bd_net -net empty_1_1 [get_bd_pins empty_1] [get_bd_pins empty_concat/In1]
  connect_bd_net -net empty_2_1 [get_bd_pins empty_2] [get_bd_pins empty_concat/In2]
  connect_bd_net -net empty_3_1 [get_bd_pins empty_3] [get_bd_pins empty_concat/In3]
  connect_bd_net -net empty_inverse_Res [get_bd_pins empty_inverse/Res] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net hier_0_dout_0 [get_bd_pins dout_0_0] [get_bd_pins fifo_generator_0/s_axis_tdata] [get_bd_pins hier_0/dout_0]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins fifo_generator_0/s_axis_tvalid] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins empty_concat/dout] [get_bd_pins empty_inverse/Op1]
  connect_bd_net -net xlconcat_0_dout_1 [get_bd_pins hier_0/Din] [get_bd_pins xlconcat_0/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_11
proc create_hier_cell_lgain_adc_11 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_11() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC


  # Create pins
  create_bd_pin -dir I -from 7 -to 0 In0
  create_bd_pin -dir I -from 7 -to 0 In1
  create_bd_pin -dir I -from 7 -to 0 In2
  create_bd_pin -dir I -from 7 -to 0 In3
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir I S_ACLK
  create_bd_pin -dir I S_ARESETN
  create_bd_pin -dir O -from 31 -to 0 dout_0_0
  create_bd_pin -dir I empty_0
  create_bd_pin -dir I empty_1
  create_bd_pin -dir I empty_2
  create_bd_pin -dir I empty_3

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]

  # Create instance: empty_concat, and set properties
  set empty_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 empty_concat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $empty_concat

  # Create instance: empty_inverse, and set properties
  set empty_inverse [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 empty_inverse ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $empty_inverse

  # Create instance: fifo_generator_0, and set properties
  set fifo_generator_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_generator_0 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TKEEP_WIDTH {4} \
   CONFIG.TSTRB_WIDTH {4} \
   CONFIG.TUSER_WIDTH {0} \
 ] $fifo_generator_0

  # Create instance: hier_0
  create_hier_cell_hier_0_2 $hier_obj hier_0

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $xlconcat_0

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins M_AXIS_LGAIN_ADC] [get_bd_intf_pins axis_clock_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net fifo_generator_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/S_AXIS] [get_bd_intf_pins fifo_generator_0/M_AXIS]

  # Create port connections
  connect_bd_net -net In0_1 [get_bd_pins In0] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net In1_1 [get_bd_pins In1] [get_bd_pins xlconcat_0/In1]
  connect_bd_net -net In2_1 [get_bd_pins In2] [get_bd_pins xlconcat_0/In2]
  connect_bd_net -net In3_1 [get_bd_pins In3] [get_bd_pins xlconcat_0/In3]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins axis_clock_converter_0/m_axis_aclk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins axis_clock_converter_0/m_axis_aresetn]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins S_ARESETN] [get_bd_pins axis_clock_converter_0/s_axis_aresetn] [get_bd_pins fifo_generator_0/s_aresetn]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_ACLK] [get_bd_pins axis_clock_converter_0/s_axis_aclk] [get_bd_pins fifo_generator_0/s_aclk]
  connect_bd_net -net empty_0_1 [get_bd_pins empty_0] [get_bd_pins empty_concat/In0]
  connect_bd_net -net empty_1_1 [get_bd_pins empty_1] [get_bd_pins empty_concat/In1]
  connect_bd_net -net empty_2_1 [get_bd_pins empty_2] [get_bd_pins empty_concat/In2]
  connect_bd_net -net empty_3_1 [get_bd_pins empty_3] [get_bd_pins empty_concat/In3]
  connect_bd_net -net empty_inverse_Res [get_bd_pins empty_inverse/Res] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net hier_0_dout_0 [get_bd_pins dout_0_0] [get_bd_pins fifo_generator_0/s_axis_tdata] [get_bd_pins hier_0/dout_0]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins fifo_generator_0/s_axis_tvalid] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins empty_concat/dout] [get_bd_pins empty_inverse/Op1]
  connect_bd_net -net xlconcat_0_dout_1 [get_bd_pins hier_0/Din] [get_bd_pins xlconcat_0/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_10
proc create_hier_cell_lgain_adc_10 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_10() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC


  # Create pins
  create_bd_pin -dir I -from 7 -to 0 In0
  create_bd_pin -dir I -from 7 -to 0 In1
  create_bd_pin -dir I -from 7 -to 0 In2
  create_bd_pin -dir I -from 7 -to 0 In3
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir I S_ACLK
  create_bd_pin -dir I S_ARESETN
  create_bd_pin -dir O -from 31 -to 0 dout_0_1
  create_bd_pin -dir I empty_0
  create_bd_pin -dir I empty_1
  create_bd_pin -dir I empty_2
  create_bd_pin -dir I empty_3

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]

  # Create instance: empty_concat, and set properties
  set empty_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 empty_concat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $empty_concat

  # Create instance: empty_inverse, and set properties
  set empty_inverse [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 empty_inverse ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $empty_inverse

  # Create instance: fifo_generator_0, and set properties
  set fifo_generator_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_generator_0 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TKEEP_WIDTH {4} \
   CONFIG.TSTRB_WIDTH {4} \
   CONFIG.TUSER_WIDTH {0} \
 ] $fifo_generator_0

  # Create instance: hier_1
  create_hier_cell_hier_1_2 $hier_obj hier_1

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_1, and set properties
  set xlconcat_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_1 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $xlconcat_1

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins M_AXIS_LGAIN_ADC] [get_bd_intf_pins axis_clock_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net fifo_generator_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/S_AXIS] [get_bd_intf_pins fifo_generator_0/M_AXIS]

  # Create port connections
  connect_bd_net -net In0_1 [get_bd_pins In0] [get_bd_pins xlconcat_1/In0]
  connect_bd_net -net In1_1 [get_bd_pins In1] [get_bd_pins xlconcat_1/In1]
  connect_bd_net -net In2_1 [get_bd_pins In2] [get_bd_pins xlconcat_1/In2]
  connect_bd_net -net In3_1 [get_bd_pins In3] [get_bd_pins xlconcat_1/In3]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins axis_clock_converter_0/m_axis_aclk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins axis_clock_converter_0/m_axis_aresetn]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins S_ARESETN] [get_bd_pins axis_clock_converter_0/s_axis_aresetn] [get_bd_pins fifo_generator_0/s_aresetn]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_ACLK] [get_bd_pins axis_clock_converter_0/s_axis_aclk] [get_bd_pins fifo_generator_0/s_aclk]
  connect_bd_net -net empty_0_1 [get_bd_pins empty_0] [get_bd_pins empty_concat/In0]
  connect_bd_net -net empty_1_1 [get_bd_pins empty_1] [get_bd_pins empty_concat/In1]
  connect_bd_net -net empty_2_1 [get_bd_pins empty_2] [get_bd_pins empty_concat/In2]
  connect_bd_net -net empty_3_1 [get_bd_pins empty_3] [get_bd_pins empty_concat/In3]
  connect_bd_net -net empty_inverse_Res [get_bd_pins empty_inverse/Res] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net hier_1_dout_0 [get_bd_pins dout_0_1] [get_bd_pins fifo_generator_0/s_axis_tdata] [get_bd_pins hier_1/dout_0]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins fifo_generator_0/s_axis_tvalid] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins empty_concat/dout] [get_bd_pins empty_inverse/Op1]
  connect_bd_net -net xlconcat_1_dout [get_bd_pins hier_1/Din] [get_bd_pins xlconcat_1/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_9
proc create_hier_cell_lgain_adc_9 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_9() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC


  # Create pins
  create_bd_pin -dir I -from 7 -to 0 In0
  create_bd_pin -dir I -from 7 -to 0 In1
  create_bd_pin -dir I -from 7 -to 0 In2
  create_bd_pin -dir I -from 7 -to 0 In3
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir I S_ACLK
  create_bd_pin -dir I S_ARESETN
  create_bd_pin -dir O -from 31 -to 0 dout_0_2
  create_bd_pin -dir I empty_0
  create_bd_pin -dir I empty_1
  create_bd_pin -dir I empty_2
  create_bd_pin -dir I empty_3

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]

  # Create instance: empty_concat, and set properties
  set empty_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 empty_concat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $empty_concat

  # Create instance: empty_inverse, and set properties
  set empty_inverse [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 empty_inverse ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $empty_inverse

  # Create instance: fifo_generator_0, and set properties
  set fifo_generator_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_generator_0 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TKEEP_WIDTH {4} \
   CONFIG.TSTRB_WIDTH {4} \
   CONFIG.TUSER_WIDTH {0} \
 ] $fifo_generator_0

  # Create instance: hier_2
  create_hier_cell_hier_2_2 $hier_obj hier_2

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_2, and set properties
  set xlconcat_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_2 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $xlconcat_2

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins M_AXIS_LGAIN_ADC] [get_bd_intf_pins axis_clock_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net fifo_generator_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/S_AXIS] [get_bd_intf_pins fifo_generator_0/M_AXIS]

  # Create port connections
  connect_bd_net -net In0_1 [get_bd_pins In0] [get_bd_pins xlconcat_2/In0]
  connect_bd_net -net In1_1 [get_bd_pins In1] [get_bd_pins xlconcat_2/In1]
  connect_bd_net -net In2_1 [get_bd_pins In2] [get_bd_pins xlconcat_2/In2]
  connect_bd_net -net In3_1 [get_bd_pins In3] [get_bd_pins xlconcat_2/In3]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins axis_clock_converter_0/m_axis_aclk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins axis_clock_converter_0/m_axis_aresetn]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins S_ARESETN] [get_bd_pins axis_clock_converter_0/s_axis_aresetn] [get_bd_pins fifo_generator_0/s_aresetn]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_ACLK] [get_bd_pins axis_clock_converter_0/s_axis_aclk] [get_bd_pins fifo_generator_0/s_aclk]
  connect_bd_net -net empty_0_1 [get_bd_pins empty_0] [get_bd_pins empty_concat/In0]
  connect_bd_net -net empty_1_1 [get_bd_pins empty_1] [get_bd_pins empty_concat/In1]
  connect_bd_net -net empty_2_1 [get_bd_pins empty_2] [get_bd_pins empty_concat/In2]
  connect_bd_net -net empty_3_1 [get_bd_pins empty_3] [get_bd_pins empty_concat/In3]
  connect_bd_net -net empty_inverse_Res [get_bd_pins empty_inverse/Res] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net hier_2_dout_0 [get_bd_pins dout_0_2] [get_bd_pins fifo_generator_0/s_axis_tdata] [get_bd_pins hier_2/dout_0]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins fifo_generator_0/s_axis_tvalid] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins empty_concat/dout] [get_bd_pins empty_inverse/Op1]
  connect_bd_net -net xlconcat_2_dout [get_bd_pins hier_2/Din] [get_bd_pins xlconcat_2/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_8
proc create_hier_cell_lgain_adc_8 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_8() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC


  # Create pins
  create_bd_pin -dir I -from 7 -to 0 In0
  create_bd_pin -dir I -from 7 -to 0 In1
  create_bd_pin -dir I -from 7 -to 0 In2
  create_bd_pin -dir I -from 7 -to 0 In3
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir I S_ACLK
  create_bd_pin -dir I S_ARESETN
  create_bd_pin -dir O -from 31 -to 0 dout_0_3
  create_bd_pin -dir I empty_0
  create_bd_pin -dir I empty_1
  create_bd_pin -dir I empty_2
  create_bd_pin -dir I empty_3

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]

  # Create instance: empty_concat, and set properties
  set empty_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 empty_concat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $empty_concat

  # Create instance: empty_inverse, and set properties
  set empty_inverse [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 empty_inverse ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $empty_inverse

  # Create instance: fifo_generator_0, and set properties
  set fifo_generator_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_generator_0 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TKEEP_WIDTH {4} \
   CONFIG.TSTRB_WIDTH {4} \
   CONFIG.TUSER_WIDTH {0} \
 ] $fifo_generator_0

  # Create instance: hier_3
  create_hier_cell_hier_3_2 $hier_obj hier_3

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_3, and set properties
  set xlconcat_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_3 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $xlconcat_3

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins M_AXIS_LGAIN_ADC] [get_bd_intf_pins axis_clock_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net fifo_generator_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/S_AXIS] [get_bd_intf_pins fifo_generator_0/M_AXIS]

  # Create port connections
  connect_bd_net -net In0_1 [get_bd_pins In0] [get_bd_pins xlconcat_3/In0]
  connect_bd_net -net In1_1 [get_bd_pins In1] [get_bd_pins xlconcat_3/In1]
  connect_bd_net -net In2_1 [get_bd_pins In2] [get_bd_pins xlconcat_3/In2]
  connect_bd_net -net In3_1 [get_bd_pins In3] [get_bd_pins xlconcat_3/In3]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins axis_clock_converter_0/m_axis_aclk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins axis_clock_converter_0/m_axis_aresetn]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins S_ARESETN] [get_bd_pins axis_clock_converter_0/s_axis_aresetn] [get_bd_pins fifo_generator_0/s_aresetn]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_ACLK] [get_bd_pins axis_clock_converter_0/s_axis_aclk] [get_bd_pins fifo_generator_0/s_aclk]
  connect_bd_net -net empty_0_1 [get_bd_pins empty_0] [get_bd_pins empty_concat/In0]
  connect_bd_net -net empty_1_1 [get_bd_pins empty_1] [get_bd_pins empty_concat/In1]
  connect_bd_net -net empty_2_1 [get_bd_pins empty_2] [get_bd_pins empty_concat/In2]
  connect_bd_net -net empty_3_1 [get_bd_pins empty_3] [get_bd_pins empty_concat/In3]
  connect_bd_net -net empty_inverse_Res [get_bd_pins empty_inverse/Res] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net hier_3_dout_0 [get_bd_pins dout_0_3] [get_bd_pins fifo_generator_0/s_axis_tdata] [get_bd_pins hier_3/dout_0]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins fifo_generator_0/s_axis_tvalid] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins empty_concat/dout] [get_bd_pins empty_inverse/Op1]
  connect_bd_net -net xlconcat_3_dout [get_bd_pins hier_3/Din] [get_bd_pins xlconcat_3/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_7
proc create_hier_cell_lgain_adc_7 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_7() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC


  # Create pins
  create_bd_pin -dir I -from 7 -to 0 In0
  create_bd_pin -dir I -from 7 -to 0 In1
  create_bd_pin -dir I -from 7 -to 0 In2
  create_bd_pin -dir I -from 7 -to 0 In3
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir I S_ACLK
  create_bd_pin -dir I S_ARESETN
  create_bd_pin -dir O -from 31 -to 0 dout_0_0
  create_bd_pin -dir I empty_0
  create_bd_pin -dir I empty_1
  create_bd_pin -dir I empty_2
  create_bd_pin -dir I empty_3

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]

  # Create instance: empty_concat, and set properties
  set empty_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 empty_concat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $empty_concat

  # Create instance: empty_inverse, and set properties
  set empty_inverse [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 empty_inverse ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $empty_inverse

  # Create instance: fifo_generator_0, and set properties
  set fifo_generator_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_generator_0 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TKEEP_WIDTH {4} \
   CONFIG.TSTRB_WIDTH {4} \
   CONFIG.TUSER_WIDTH {0} \
 ] $fifo_generator_0

  # Create instance: hier_0
  create_hier_cell_hier_0_1 $hier_obj hier_0

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $xlconcat_0

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins M_AXIS_LGAIN_ADC] [get_bd_intf_pins axis_clock_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net fifo_generator_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/S_AXIS] [get_bd_intf_pins fifo_generator_0/M_AXIS]

  # Create port connections
  connect_bd_net -net In0_1 [get_bd_pins In0] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net In1_1 [get_bd_pins In1] [get_bd_pins xlconcat_0/In1]
  connect_bd_net -net In2_1 [get_bd_pins In2] [get_bd_pins xlconcat_0/In2]
  connect_bd_net -net In3_1 [get_bd_pins In3] [get_bd_pins xlconcat_0/In3]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins axis_clock_converter_0/m_axis_aclk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins axis_clock_converter_0/m_axis_aresetn]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins S_ARESETN] [get_bd_pins axis_clock_converter_0/s_axis_aresetn] [get_bd_pins fifo_generator_0/s_aresetn]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_ACLK] [get_bd_pins axis_clock_converter_0/s_axis_aclk] [get_bd_pins fifo_generator_0/s_aclk]
  connect_bd_net -net empty_0_1 [get_bd_pins empty_0] [get_bd_pins empty_concat/In0]
  connect_bd_net -net empty_1_1 [get_bd_pins empty_1] [get_bd_pins empty_concat/In1]
  connect_bd_net -net empty_2_1 [get_bd_pins empty_2] [get_bd_pins empty_concat/In2]
  connect_bd_net -net empty_3_1 [get_bd_pins empty_3] [get_bd_pins empty_concat/In3]
  connect_bd_net -net empty_inverse_Res [get_bd_pins empty_inverse/Res] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net hier_0_dout_0 [get_bd_pins dout_0_0] [get_bd_pins fifo_generator_0/s_axis_tdata] [get_bd_pins hier_0/dout_0]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins fifo_generator_0/s_axis_tvalid] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins empty_concat/dout] [get_bd_pins empty_inverse/Op1]
  connect_bd_net -net xlconcat_0_dout_1 [get_bd_pins hier_0/Din] [get_bd_pins xlconcat_0/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_6
proc create_hier_cell_lgain_adc_6 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_6() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC


  # Create pins
  create_bd_pin -dir I -from 7 -to 0 In0
  create_bd_pin -dir I -from 7 -to 0 In1
  create_bd_pin -dir I -from 7 -to 0 In2
  create_bd_pin -dir I -from 7 -to 0 In3
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir I S_ACLK
  create_bd_pin -dir I S_ARESETN
  create_bd_pin -dir O -from 31 -to 0 dout_0_1
  create_bd_pin -dir I empty_0
  create_bd_pin -dir I empty_1
  create_bd_pin -dir I empty_2
  create_bd_pin -dir I empty_3

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]

  # Create instance: empty_concat, and set properties
  set empty_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 empty_concat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $empty_concat

  # Create instance: empty_inverse, and set properties
  set empty_inverse [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 empty_inverse ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $empty_inverse

  # Create instance: fifo_generator_0, and set properties
  set fifo_generator_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_generator_0 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TKEEP_WIDTH {4} \
   CONFIG.TSTRB_WIDTH {4} \
   CONFIG.TUSER_WIDTH {0} \
 ] $fifo_generator_0

  # Create instance: hier_1
  create_hier_cell_hier_1_1 $hier_obj hier_1

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_1, and set properties
  set xlconcat_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_1 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $xlconcat_1

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins M_AXIS_LGAIN_ADC] [get_bd_intf_pins axis_clock_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net fifo_generator_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/S_AXIS] [get_bd_intf_pins fifo_generator_0/M_AXIS]

  # Create port connections
  connect_bd_net -net In0_1 [get_bd_pins In0] [get_bd_pins xlconcat_1/In0]
  connect_bd_net -net In1_1 [get_bd_pins In1] [get_bd_pins xlconcat_1/In1]
  connect_bd_net -net In2_1 [get_bd_pins In2] [get_bd_pins xlconcat_1/In2]
  connect_bd_net -net In3_1 [get_bd_pins In3] [get_bd_pins xlconcat_1/In3]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins axis_clock_converter_0/m_axis_aclk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins axis_clock_converter_0/m_axis_aresetn]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins S_ARESETN] [get_bd_pins axis_clock_converter_0/s_axis_aresetn] [get_bd_pins fifo_generator_0/s_aresetn]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_ACLK] [get_bd_pins axis_clock_converter_0/s_axis_aclk] [get_bd_pins fifo_generator_0/s_aclk]
  connect_bd_net -net empty_0_1 [get_bd_pins empty_0] [get_bd_pins empty_concat/In0]
  connect_bd_net -net empty_1_1 [get_bd_pins empty_1] [get_bd_pins empty_concat/In1]
  connect_bd_net -net empty_2_1 [get_bd_pins empty_2] [get_bd_pins empty_concat/In2]
  connect_bd_net -net empty_3_1 [get_bd_pins empty_3] [get_bd_pins empty_concat/In3]
  connect_bd_net -net empty_inverse_Res [get_bd_pins empty_inverse/Res] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net hier_1_dout_0 [get_bd_pins dout_0_1] [get_bd_pins fifo_generator_0/s_axis_tdata] [get_bd_pins hier_1/dout_0]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins fifo_generator_0/s_axis_tvalid] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins empty_concat/dout] [get_bd_pins empty_inverse/Op1]
  connect_bd_net -net xlconcat_1_dout [get_bd_pins hier_1/Din] [get_bd_pins xlconcat_1/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_5
proc create_hier_cell_lgain_adc_5 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_5() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC


  # Create pins
  create_bd_pin -dir I -from 7 -to 0 In0
  create_bd_pin -dir I -from 7 -to 0 In1
  create_bd_pin -dir I -from 7 -to 0 In2
  create_bd_pin -dir I -from 7 -to 0 In3
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir I S_ACLK
  create_bd_pin -dir I S_ARESETN
  create_bd_pin -dir O -from 31 -to 0 dout_0_2
  create_bd_pin -dir I empty_0
  create_bd_pin -dir I empty_1
  create_bd_pin -dir I empty_2
  create_bd_pin -dir I empty_3

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]

  # Create instance: empty_concat, and set properties
  set empty_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 empty_concat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $empty_concat

  # Create instance: empty_inverse, and set properties
  set empty_inverse [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 empty_inverse ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $empty_inverse

  # Create instance: fifo_generator_0, and set properties
  set fifo_generator_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_generator_0 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TKEEP_WIDTH {4} \
   CONFIG.TSTRB_WIDTH {4} \
   CONFIG.TUSER_WIDTH {0} \
 ] $fifo_generator_0

  # Create instance: hier_2
  create_hier_cell_hier_2_1 $hier_obj hier_2

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_2, and set properties
  set xlconcat_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_2 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $xlconcat_2

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins M_AXIS_LGAIN_ADC] [get_bd_intf_pins axis_clock_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net fifo_generator_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/S_AXIS] [get_bd_intf_pins fifo_generator_0/M_AXIS]

  # Create port connections
  connect_bd_net -net In0_1 [get_bd_pins In0] [get_bd_pins xlconcat_2/In0]
  connect_bd_net -net In1_1 [get_bd_pins In1] [get_bd_pins xlconcat_2/In1]
  connect_bd_net -net In2_1 [get_bd_pins In2] [get_bd_pins xlconcat_2/In2]
  connect_bd_net -net In3_1 [get_bd_pins In3] [get_bd_pins xlconcat_2/In3]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins axis_clock_converter_0/m_axis_aclk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins axis_clock_converter_0/m_axis_aresetn]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins S_ARESETN] [get_bd_pins axis_clock_converter_0/s_axis_aresetn] [get_bd_pins fifo_generator_0/s_aresetn]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_ACLK] [get_bd_pins axis_clock_converter_0/s_axis_aclk] [get_bd_pins fifo_generator_0/s_aclk]
  connect_bd_net -net empty_0_1 [get_bd_pins empty_0] [get_bd_pins empty_concat/In0]
  connect_bd_net -net empty_1_1 [get_bd_pins empty_1] [get_bd_pins empty_concat/In1]
  connect_bd_net -net empty_2_1 [get_bd_pins empty_2] [get_bd_pins empty_concat/In2]
  connect_bd_net -net empty_3_1 [get_bd_pins empty_3] [get_bd_pins empty_concat/In3]
  connect_bd_net -net empty_inverse_Res [get_bd_pins empty_inverse/Res] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net hier_2_dout_0 [get_bd_pins dout_0_2] [get_bd_pins fifo_generator_0/s_axis_tdata] [get_bd_pins hier_2/dout_0]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins fifo_generator_0/s_axis_tvalid] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins empty_concat/dout] [get_bd_pins empty_inverse/Op1]
  connect_bd_net -net xlconcat_2_dout [get_bd_pins hier_2/Din] [get_bd_pins xlconcat_2/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_4
proc create_hier_cell_lgain_adc_4 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_4() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC


  # Create pins
  create_bd_pin -dir I -from 7 -to 0 In0
  create_bd_pin -dir I -from 7 -to 0 In1
  create_bd_pin -dir I -from 7 -to 0 In2
  create_bd_pin -dir I -from 7 -to 0 In3
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir I S_ACLK
  create_bd_pin -dir I S_ARESETN
  create_bd_pin -dir O -from 31 -to 0 dout_0_3
  create_bd_pin -dir I empty_0
  create_bd_pin -dir I empty_1
  create_bd_pin -dir I empty_2
  create_bd_pin -dir I empty_3

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]

  # Create instance: empty_concat, and set properties
  set empty_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 empty_concat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $empty_concat

  # Create instance: empty_inverse, and set properties
  set empty_inverse [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 empty_inverse ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $empty_inverse

  # Create instance: fifo_generator_0, and set properties
  set fifo_generator_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_generator_0 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TKEEP_WIDTH {4} \
   CONFIG.TSTRB_WIDTH {4} \
   CONFIG.TUSER_WIDTH {0} \
 ] $fifo_generator_0

  # Create instance: hier_3
  create_hier_cell_hier_3_1 $hier_obj hier_3

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_3, and set properties
  set xlconcat_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_3 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $xlconcat_3

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins M_AXIS_LGAIN_ADC] [get_bd_intf_pins axis_clock_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net fifo_generator_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/S_AXIS] [get_bd_intf_pins fifo_generator_0/M_AXIS]

  # Create port connections
  connect_bd_net -net In0_1 [get_bd_pins In0] [get_bd_pins xlconcat_3/In0]
  connect_bd_net -net In1_1 [get_bd_pins In1] [get_bd_pins xlconcat_3/In1]
  connect_bd_net -net In2_1 [get_bd_pins In2] [get_bd_pins xlconcat_3/In2]
  connect_bd_net -net In3_1 [get_bd_pins In3] [get_bd_pins xlconcat_3/In3]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins axis_clock_converter_0/m_axis_aclk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins axis_clock_converter_0/m_axis_aresetn]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins S_ARESETN] [get_bd_pins axis_clock_converter_0/s_axis_aresetn] [get_bd_pins fifo_generator_0/s_aresetn]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_ACLK] [get_bd_pins axis_clock_converter_0/s_axis_aclk] [get_bd_pins fifo_generator_0/s_aclk]
  connect_bd_net -net empty_0_1 [get_bd_pins empty_0] [get_bd_pins empty_concat/In0]
  connect_bd_net -net empty_1_1 [get_bd_pins empty_1] [get_bd_pins empty_concat/In1]
  connect_bd_net -net empty_2_1 [get_bd_pins empty_2] [get_bd_pins empty_concat/In2]
  connect_bd_net -net empty_3_1 [get_bd_pins empty_3] [get_bd_pins empty_concat/In3]
  connect_bd_net -net empty_inverse_Res [get_bd_pins empty_inverse/Res] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net hier_3_dout_0 [get_bd_pins dout_0_3] [get_bd_pins fifo_generator_0/s_axis_tdata] [get_bd_pins hier_3/dout_0]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins fifo_generator_0/s_axis_tvalid] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins empty_concat/dout] [get_bd_pins empty_inverse/Op1]
  connect_bd_net -net xlconcat_3_dout [get_bd_pins hier_3/Din] [get_bd_pins xlconcat_3/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_3
proc create_hier_cell_lgain_adc_3 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_3() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC


  # Create pins
  create_bd_pin -dir I -from 7 -to 0 In0
  create_bd_pin -dir I -from 7 -to 0 In1
  create_bd_pin -dir I -from 7 -to 0 In2
  create_bd_pin -dir I -from 7 -to 0 In3
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir I S_ACLK
  create_bd_pin -dir I S_ARESETN
  create_bd_pin -dir O -from 31 -to 0 dout_0
  create_bd_pin -dir I empty_0
  create_bd_pin -dir I empty_1
  create_bd_pin -dir I empty_2
  create_bd_pin -dir I empty_3

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]

  # Create instance: empty_concat, and set properties
  set empty_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 empty_concat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $empty_concat

  # Create instance: empty_inverse, and set properties
  set empty_inverse [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 empty_inverse ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $empty_inverse

  # Create instance: fifo_generator_0, and set properties
  set fifo_generator_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_generator_0 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TKEEP_WIDTH {4} \
   CONFIG.TSTRB_WIDTH {4} \
   CONFIG.TUSER_WIDTH {0} \
 ] $fifo_generator_0

  # Create instance: hier_0
  create_hier_cell_hier_0 $hier_obj hier_0

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $xlconcat_0

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins M_AXIS_LGAIN_ADC] [get_bd_intf_pins axis_clock_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net fifo_generator_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/S_AXIS] [get_bd_intf_pins fifo_generator_0/M_AXIS]

  # Create port connections
  connect_bd_net -net In0_1 [get_bd_pins In0] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net In1_1 [get_bd_pins In1] [get_bd_pins xlconcat_0/In1]
  connect_bd_net -net In2_1 [get_bd_pins In2] [get_bd_pins xlconcat_0/In2]
  connect_bd_net -net In3_1 [get_bd_pins In3] [get_bd_pins xlconcat_0/In3]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins axis_clock_converter_0/m_axis_aclk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins axis_clock_converter_0/m_axis_aresetn]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins S_ARESETN] [get_bd_pins axis_clock_converter_0/s_axis_aresetn] [get_bd_pins fifo_generator_0/s_aresetn]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_ACLK] [get_bd_pins axis_clock_converter_0/s_axis_aclk] [get_bd_pins fifo_generator_0/s_aclk]
  connect_bd_net -net empty_0_1 [get_bd_pins empty_0] [get_bd_pins empty_concat/In0]
  connect_bd_net -net empty_1_1 [get_bd_pins empty_1] [get_bd_pins empty_concat/In1]
  connect_bd_net -net empty_2_1 [get_bd_pins empty_2] [get_bd_pins empty_concat/In2]
  connect_bd_net -net empty_3_1 [get_bd_pins empty_3] [get_bd_pins empty_concat/In3]
  connect_bd_net -net empty_inverse_Res [get_bd_pins empty_inverse/Res] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net hier_0_dout_0 [get_bd_pins dout_0] [get_bd_pins fifo_generator_0/s_axis_tdata] [get_bd_pins hier_0/dout_0]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins fifo_generator_0/s_axis_tvalid] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins hier_0/Din] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlconcat_0_dout1 [get_bd_pins empty_concat/dout] [get_bd_pins empty_inverse/Op1]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_2
proc create_hier_cell_lgain_adc_2 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_2() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC


  # Create pins
  create_bd_pin -dir I -from 7 -to 0 In0
  create_bd_pin -dir I -from 7 -to 0 In1
  create_bd_pin -dir I -from 7 -to 0 In2
  create_bd_pin -dir I -from 7 -to 0 In3
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir I S_ACLK
  create_bd_pin -dir I S_ARESETN
  create_bd_pin -dir O -from 31 -to 0 dout_0_0
  create_bd_pin -dir I empty_0
  create_bd_pin -dir I empty_1
  create_bd_pin -dir I empty_2
  create_bd_pin -dir I empty_3

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]

  # Create instance: empty_concat, and set properties
  set empty_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 empty_concat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $empty_concat

  # Create instance: empty_inverse, and set properties
  set empty_inverse [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 empty_inverse ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $empty_inverse

  # Create instance: fifo_generator_0, and set properties
  set fifo_generator_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_generator_0 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TKEEP_WIDTH {4} \
   CONFIG.TSTRB_WIDTH {4} \
   CONFIG.TUSER_WIDTH {0} \
 ] $fifo_generator_0

  # Create instance: hier_1
  create_hier_cell_hier_1 $hier_obj hier_1

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_1, and set properties
  set xlconcat_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_1 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $xlconcat_1

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins M_AXIS_LGAIN_ADC] [get_bd_intf_pins axis_clock_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net fifo_generator_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/S_AXIS] [get_bd_intf_pins fifo_generator_0/M_AXIS]

  # Create port connections
  connect_bd_net -net In0_1 [get_bd_pins In0] [get_bd_pins xlconcat_1/In0]
  connect_bd_net -net In1_1 [get_bd_pins In1] [get_bd_pins xlconcat_1/In1]
  connect_bd_net -net In2_1 [get_bd_pins In2] [get_bd_pins xlconcat_1/In2]
  connect_bd_net -net In3_1 [get_bd_pins In3] [get_bd_pins xlconcat_1/In3]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins axis_clock_converter_0/m_axis_aclk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins axis_clock_converter_0/m_axis_aresetn]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins S_ARESETN] [get_bd_pins axis_clock_converter_0/s_axis_aresetn] [get_bd_pins fifo_generator_0/s_aresetn]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_ACLK] [get_bd_pins axis_clock_converter_0/s_axis_aclk] [get_bd_pins fifo_generator_0/s_aclk]
  connect_bd_net -net empty_0_1 [get_bd_pins empty_0] [get_bd_pins empty_concat/In0]
  connect_bd_net -net empty_1_1 [get_bd_pins empty_1] [get_bd_pins empty_concat/In1]
  connect_bd_net -net empty_2_1 [get_bd_pins empty_2] [get_bd_pins empty_concat/In2]
  connect_bd_net -net empty_3_1 [get_bd_pins empty_3] [get_bd_pins empty_concat/In3]
  connect_bd_net -net empty_inverse_Res [get_bd_pins empty_inverse/Res] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net hier_1_dout_0 [get_bd_pins dout_0_0] [get_bd_pins fifo_generator_0/s_axis_tdata] [get_bd_pins hier_1/dout_0]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins fifo_generator_0/s_axis_tvalid] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins empty_concat/dout] [get_bd_pins empty_inverse/Op1]
  connect_bd_net -net xlconcat_1_dout [get_bd_pins hier_1/Din] [get_bd_pins xlconcat_1/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_1
proc create_hier_cell_lgain_adc_1 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_1() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC


  # Create pins
  create_bd_pin -dir I -from 7 -to 0 In0
  create_bd_pin -dir I -from 7 -to 0 In1
  create_bd_pin -dir I -from 7 -to 0 In2
  create_bd_pin -dir I -from 7 -to 0 In3
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir I S_ACLK
  create_bd_pin -dir I S_ARESETN
  create_bd_pin -dir O -from 31 -to 0 dout_0_1
  create_bd_pin -dir I empty_0
  create_bd_pin -dir I empty_1
  create_bd_pin -dir I empty_2
  create_bd_pin -dir I empty_3

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]

  # Create instance: empty_concat, and set properties
  set empty_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 empty_concat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $empty_concat

  # Create instance: empty_inverse, and set properties
  set empty_inverse [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 empty_inverse ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $empty_inverse

  # Create instance: fifo_generator_0, and set properties
  set fifo_generator_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_generator_0 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TKEEP_WIDTH {4} \
   CONFIG.TSTRB_WIDTH {4} \
   CONFIG.TUSER_WIDTH {0} \
 ] $fifo_generator_0

  # Create instance: hier_2
  create_hier_cell_hier_2 $hier_obj hier_2

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_2, and set properties
  set xlconcat_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_2 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $xlconcat_2

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins M_AXIS_LGAIN_ADC] [get_bd_intf_pins axis_clock_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net fifo_generator_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/S_AXIS] [get_bd_intf_pins fifo_generator_0/M_AXIS]

  # Create port connections
  connect_bd_net -net In0_1 [get_bd_pins In0] [get_bd_pins xlconcat_2/In0]
  connect_bd_net -net In1_1 [get_bd_pins In1] [get_bd_pins xlconcat_2/In1]
  connect_bd_net -net In2_1 [get_bd_pins In2] [get_bd_pins xlconcat_2/In2]
  connect_bd_net -net In3_1 [get_bd_pins In3] [get_bd_pins xlconcat_2/In3]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins axis_clock_converter_0/m_axis_aclk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins axis_clock_converter_0/m_axis_aresetn]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins S_ARESETN] [get_bd_pins axis_clock_converter_0/s_axis_aresetn] [get_bd_pins fifo_generator_0/s_aresetn]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_ACLK] [get_bd_pins axis_clock_converter_0/s_axis_aclk] [get_bd_pins fifo_generator_0/s_aclk]
  connect_bd_net -net empty_0_1 [get_bd_pins empty_0] [get_bd_pins empty_concat/In0]
  connect_bd_net -net empty_1_1 [get_bd_pins empty_1] [get_bd_pins empty_concat/In1]
  connect_bd_net -net empty_2_1 [get_bd_pins empty_2] [get_bd_pins empty_concat/In2]
  connect_bd_net -net empty_3_1 [get_bd_pins empty_3] [get_bd_pins empty_concat/In3]
  connect_bd_net -net empty_inverse_Res [get_bd_pins empty_inverse/Res] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net hier_2_dout_0 [get_bd_pins dout_0_1] [get_bd_pins fifo_generator_0/s_axis_tdata] [get_bd_pins hier_2/dout_0]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins fifo_generator_0/s_axis_tvalid] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins empty_concat/dout] [get_bd_pins empty_inverse/Op1]
  connect_bd_net -net xlconcat_2_dout [get_bd_pins hier_2/Din] [get_bd_pins xlconcat_2/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_0
proc create_hier_cell_lgain_adc_0 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_0() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC


  # Create pins
  create_bd_pin -dir I -from 7 -to 0 In0
  create_bd_pin -dir I -from 7 -to 0 In1
  create_bd_pin -dir I -from 7 -to 0 In2
  create_bd_pin -dir I -from 7 -to 0 In3
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir I S_ACLK
  create_bd_pin -dir I S_ARESETN
  create_bd_pin -dir O -from 31 -to 0 dout_0_2
  create_bd_pin -dir I empty_0
  create_bd_pin -dir I empty_1
  create_bd_pin -dir I empty_2
  create_bd_pin -dir I empty_3

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]

  # Create instance: empty_concat, and set properties
  set empty_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 empty_concat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $empty_concat

  # Create instance: empty_inverse, and set properties
  set empty_inverse [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 empty_inverse ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $empty_inverse

  # Create instance: fifo_generator_0, and set properties
  set fifo_generator_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 fifo_generator_0 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TKEEP_WIDTH {4} \
   CONFIG.TSTRB_WIDTH {4} \
   CONFIG.TUSER_WIDTH {0} \
 ] $fifo_generator_0

  # Create instance: hier_3
  create_hier_cell_hier_3 $hier_obj hier_3

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {or} \
   CONFIG.C_SIZE {4} \
   CONFIG.LOGO_FILE {data/sym_orgate.png} \
 ] $util_reduced_logic_0

  # Create instance: xlconcat_3, and set properties
  set xlconcat_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_3 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {4} \
 ] $xlconcat_3

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins M_AXIS_LGAIN_ADC] [get_bd_intf_pins axis_clock_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net fifo_generator_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/S_AXIS] [get_bd_intf_pins fifo_generator_0/M_AXIS]

  # Create port connections
  connect_bd_net -net Din_1 [get_bd_pins hier_3/Din] [get_bd_pins xlconcat_3/dout]
  connect_bd_net -net In0_1 [get_bd_pins In0] [get_bd_pins xlconcat_3/In0]
  connect_bd_net -net In1_1 [get_bd_pins In1] [get_bd_pins xlconcat_3/In1]
  connect_bd_net -net In2_1 [get_bd_pins In2] [get_bd_pins xlconcat_3/In2]
  connect_bd_net -net In3_1 [get_bd_pins In3] [get_bd_pins xlconcat_3/In3]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins axis_clock_converter_0/m_axis_aclk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins axis_clock_converter_0/m_axis_aresetn]
  connect_bd_net -net S_ARESETN_1 [get_bd_pins S_ARESETN] [get_bd_pins axis_clock_converter_0/s_axis_aresetn] [get_bd_pins fifo_generator_0/s_aresetn]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_ACLK] [get_bd_pins axis_clock_converter_0/s_axis_aclk] [get_bd_pins fifo_generator_0/s_aclk]
  connect_bd_net -net empty_0_1 [get_bd_pins empty_0] [get_bd_pins empty_concat/In0]
  connect_bd_net -net empty_1_1 [get_bd_pins empty_1] [get_bd_pins empty_concat/In1]
  connect_bd_net -net empty_2_1 [get_bd_pins empty_2] [get_bd_pins empty_concat/In2]
  connect_bd_net -net empty_3_1 [get_bd_pins empty_3] [get_bd_pins empty_concat/In3]
  connect_bd_net -net empty_inverse_Res [get_bd_pins empty_inverse/Res] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net hier_3_dout_0 [get_bd_pins dout_0_2] [get_bd_pins fifo_generator_0/s_axis_tdata] [get_bd_pins hier_3/dout_0]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins fifo_generator_0/s_axis_tvalid] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins empty_concat/dout] [get_bd_pins empty_inverse/Op1]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_block_3
proc create_hier_cell_lgain_adc_block_3 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_block_3() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC_12

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC_13

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC_14

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC_15

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:display_high_speed_selectio_wiz:hssio_data_rx_rtl:1.0 xiphy_rx_pins_3


  # Create pins
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir O fifo_rd_data_valid
  create_bd_pin -dir I rst

  # Create instance: ADC_IF_TEST_3_0_B66, and set properties
  set ADC_IF_TEST_3_0_B66 [ create_bd_cell -type ip -vlnv teldevice.local:user:ADC_IF_TEST_3:1.0 ADC_IF_TEST_3_0_B66 ]

  set_property -dict [ list \
   CONFIG.FREQ_HZ {125000000} \
 ] [get_bd_pins /lgain_adc_blocks/lgain_adc_block_3/ADC_IF_TEST_3_0_B66/clk]

  # Create instance: lgain_adc_12
  create_hier_cell_lgain_adc_12 $hier_obj lgain_adc_12

  # Create instance: lgain_adc_13
  create_hier_cell_lgain_adc_13 $hier_obj lgain_adc_13

  # Create instance: lgain_adc_14
  create_hier_cell_lgain_adc_14 $hier_obj lgain_adc_14

  # Create instance: lgain_adc_15
  create_hier_cell_lgain_adc_15 $hier_obj lgain_adc_15

  # Create instance: lgain_cf_replica_rst, and set properties
  set lgain_cf_replica_rst [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 lgain_cf_replica_rst ]

  # Create instance: vio_0, and set properties
  set vio_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:vio:3.0 vio_0 ]
  set_property -dict [ list \
   CONFIG.C_NUM_PROBE_IN {21} \
 ] $vio_0

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]

  # Create interface connections
  connect_bd_intf_net -intf_net lgain_adc_12_M_AXIS_LGAIN_ADC [get_bd_intf_pins M_AXIS_LGAIN_ADC_12] [get_bd_intf_pins lgain_adc_12/M_AXIS_LGAIN_ADC]
  connect_bd_intf_net -intf_net lgain_adc_13_M_AXIS_LGAIN_ADC [get_bd_intf_pins M_AXIS_LGAIN_ADC_13] [get_bd_intf_pins lgain_adc_13/M_AXIS_LGAIN_ADC]
  connect_bd_intf_net -intf_net lgain_adc_14_M_AXIS_LGAIN_ADC [get_bd_intf_pins M_AXIS_LGAIN_ADC_14] [get_bd_intf_pins lgain_adc_14/M_AXIS_LGAIN_ADC]
  connect_bd_intf_net -intf_net lgain_adc_15_M_AXIS_LGAIN_ADC [get_bd_intf_pins M_AXIS_LGAIN_ADC_15] [get_bd_intf_pins lgain_adc_15/M_AXIS_LGAIN_ADC]
  connect_bd_intf_net -intf_net xiphy_rx_pins_3_1 [get_bd_intf_pins xiphy_rx_pins_3] [get_bd_intf_pins ADC_IF_TEST_3_0_B66/xiphy_rx_pins]

  # Create port connections
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_0 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_0] [get_bd_pins vio_0/probe_in2]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_4 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_4] [get_bd_pins vio_0/probe_in0]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_6 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_6] [get_bd_pins vio_0/probe_in3]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_8 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_8] [get_bd_pins vio_0/probe_in4]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_10 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_10] [get_bd_pins vio_0/probe_in5]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_13 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_13] [get_bd_pins vio_0/probe_in6]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_17 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_17] [get_bd_pins vio_0/probe_in7]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_19 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_19] [get_bd_pins vio_0/probe_in8]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_21 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_21] [get_bd_pins vio_0/probe_in9]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_23 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_23] [get_bd_pins vio_0/probe_in10]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_26 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_26] [get_bd_pins vio_0/probe_in1]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_30 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_30] [get_bd_pins vio_0/probe_in11]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_32 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_32] [get_bd_pins vio_0/probe_in12]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_34 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_34] [get_bd_pins vio_0/probe_in13]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_36 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_36] [get_bd_pins vio_0/probe_in14]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_39 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_39] [get_bd_pins vio_0/probe_in15]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_43 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_43] [get_bd_pins vio_0/probe_in16]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_45 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_45] [get_bd_pins vio_0/probe_in17]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_47 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_47] [get_bd_pins vio_0/probe_in18]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_bitslip_error_49 [get_bd_pins ADC_IF_TEST_3_0_B66/bitslip_error_49] [get_bd_pins vio_0/probe_in19]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_data_to_fabric_b66_bg0_pin10_10 [get_bd_pins ADC_IF_TEST_3_0_B66/data_to_fabric_b66_bg0_pin10_10] [get_bd_pins lgain_adc_12/In1]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_data_to_fabric_b66_bg0_pin4_4 [get_bd_pins ADC_IF_TEST_3_0_B66/data_to_fabric_b66_bg0_pin4_4] [get_bd_pins lgain_adc_12/In3]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_data_to_fabric_b66_bg0_pin6_6 [get_bd_pins ADC_IF_TEST_3_0_B66/data_to_fabric_b66_bg0_pin6_6] [get_bd_pins lgain_adc_12/In2]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_data_to_fabric_b66_bg0_pin8_8 [get_bd_pins ADC_IF_TEST_3_0_B66/data_to_fabric_b66_bg0_pin8_8] [get_bd_pins lgain_adc_12/In0]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_data_to_fabric_b66_bg1_pin10_23 [get_bd_pins ADC_IF_TEST_3_0_B66/data_to_fabric_b66_bg1_pin10_23] [get_bd_pins lgain_adc_14/In0]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_data_to_fabric_b66_bg1_pin4_17 [get_bd_pins ADC_IF_TEST_3_0_B66/data_to_fabric_b66_bg1_pin4_17] [get_bd_pins lgain_adc_14/In1]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_data_to_fabric_b66_bg1_pin6_19 [get_bd_pins ADC_IF_TEST_3_0_B66/data_to_fabric_b66_bg1_pin6_19] [get_bd_pins lgain_adc_14/In3]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_data_to_fabric_b66_bg1_pin8_21 [get_bd_pins ADC_IF_TEST_3_0_B66/data_to_fabric_b66_bg1_pin8_21] [get_bd_pins lgain_adc_14/In2]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_data_to_fabric_b66_bg2_pin10_36 [get_bd_pins ADC_IF_TEST_3_0_B66/data_to_fabric_b66_bg2_pin10_36] [get_bd_pins lgain_adc_13/In0]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_data_to_fabric_b66_bg2_pin4_30 [get_bd_pins ADC_IF_TEST_3_0_B66/data_to_fabric_b66_bg2_pin4_30] [get_bd_pins lgain_adc_13/In2]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_data_to_fabric_b66_bg2_pin6_32 [get_bd_pins ADC_IF_TEST_3_0_B66/data_to_fabric_b66_bg2_pin6_32] [get_bd_pins lgain_adc_13/In1]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_data_to_fabric_b66_bg2_pin8_34 [get_bd_pins ADC_IF_TEST_3_0_B66/data_to_fabric_b66_bg2_pin8_34] [get_bd_pins lgain_adc_13/In3]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_data_to_fabric_b66_bg3_pin10_49 [get_bd_pins ADC_IF_TEST_3_0_B66/data_to_fabric_b66_bg3_pin10_49] [get_bd_pins lgain_adc_15/In1]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_data_to_fabric_b66_bg3_pin4_43 [get_bd_pins ADC_IF_TEST_3_0_B66/data_to_fabric_b66_bg3_pin4_43] [get_bd_pins lgain_adc_15/In3]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_data_to_fabric_b66_bg3_pin6_45 [get_bd_pins ADC_IF_TEST_3_0_B66/data_to_fabric_b66_bg3_pin6_45] [get_bd_pins lgain_adc_15/In0]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_data_to_fabric_b66_bg3_pin8_47 [get_bd_pins ADC_IF_TEST_3_0_B66/data_to_fabric_b66_bg3_pin8_47] [get_bd_pins lgain_adc_15/In2]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_fifo_empty_4 [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_empty_4] [get_bd_pins lgain_adc_12/empty_0]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_fifo_empty_6 [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_empty_6] [get_bd_pins lgain_adc_12/empty_1]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_fifo_empty_8 [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_empty_8] [get_bd_pins lgain_adc_12/empty_2]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_fifo_empty_10 [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_empty_10] [get_bd_pins lgain_adc_12/empty_3]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_fifo_empty_17 [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_empty_17] [get_bd_pins lgain_adc_14/empty_0]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_fifo_empty_19 [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_empty_19] [get_bd_pins lgain_adc_14/empty_1]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_fifo_empty_21 [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_empty_21] [get_bd_pins lgain_adc_14/empty_2]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_fifo_empty_23 [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_empty_23] [get_bd_pins lgain_adc_14/empty_3]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_fifo_empty_30 [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_empty_30] [get_bd_pins lgain_adc_13/empty_0]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_fifo_empty_32 [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_empty_32] [get_bd_pins lgain_adc_13/empty_1]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_fifo_empty_34 [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_empty_34] [get_bd_pins lgain_adc_13/empty_2]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_fifo_empty_36 [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_empty_36] [get_bd_pins lgain_adc_13/empty_3]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_fifo_empty_43 [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_empty_43] [get_bd_pins lgain_adc_15/empty_0]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_fifo_empty_45 [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_empty_45] [get_bd_pins lgain_adc_15/empty_1]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_fifo_empty_47 [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_empty_47] [get_bd_pins lgain_adc_15/empty_2]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_fifo_empty_49 [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_empty_49] [get_bd_pins lgain_adc_15/empty_3]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_fifo_rd_data_valid [get_bd_pins fifo_rd_data_valid] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_data_valid]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_pll0_locked [get_bd_pins ADC_IF_TEST_3_0_B66/pll0_locked] [get_bd_pins lgain_cf_replica_rst/ext_reset_in]
  connect_bd_net -net ADC_IF_TEST_3_0_B66_rx_bitslip_sync_done [get_bd_pins ADC_IF_TEST_3_0_B66/rx_bitslip_sync_done] [get_bd_pins vio_0/probe_in20]
  connect_bd_net -net ADC_IF_TEST_3_0_pll0_clkout0 [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_0] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_4] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_6] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_8] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_10] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_13] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_17] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_19] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_21] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_23] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_26] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_30] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_32] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_34] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_36] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_39] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_43] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_45] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_47] [get_bd_pins ADC_IF_TEST_3_0_B66/fifo_rd_clk_49] [get_bd_pins ADC_IF_TEST_3_0_B66/pll0_clkout0] [get_bd_pins lgain_adc_12/S_ACLK] [get_bd_pins lgain_adc_13/S_ACLK] [get_bd_pins lgain_adc_14/S_ACLK] [get_bd_pins lgain_adc_15/S_ACLK] [get_bd_pins lgain_cf_replica_rst/slowest_sync_clk]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins ADC_IF_TEST_3_0_B66/clk] [get_bd_pins lgain_adc_12/M_ACLK] [get_bd_pins lgain_adc_13/M_ACLK] [get_bd_pins lgain_adc_14/M_ACLK] [get_bd_pins lgain_adc_15/M_ACLK] [get_bd_pins vio_0/clk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins lgain_adc_12/M_ARESETN] [get_bd_pins lgain_adc_13/M_ARESETN] [get_bd_pins lgain_adc_14/M_ARESETN] [get_bd_pins lgain_adc_15/M_ARESETN]
  connect_bd_net -net en_vtc_bsc0_1 [get_bd_pins ADC_IF_TEST_3_0_B66/en_vtc_bsc0] [get_bd_pins ADC_IF_TEST_3_0_B66/en_vtc_bsc1] [get_bd_pins ADC_IF_TEST_3_0_B66/en_vtc_bsc2] [get_bd_pins ADC_IF_TEST_3_0_B66/en_vtc_bsc3] [get_bd_pins ADC_IF_TEST_3_0_B66/en_vtc_bsc4] [get_bd_pins ADC_IF_TEST_3_0_B66/en_vtc_bsc5] [get_bd_pins ADC_IF_TEST_3_0_B66/en_vtc_bsc6] [get_bd_pins ADC_IF_TEST_3_0_B66/en_vtc_bsc7] [get_bd_pins xlconstant_0/dout]
  connect_bd_net -net lgain_cf_replica_rst_peripheral_aresetn [get_bd_pins lgain_adc_12/S_ARESETN] [get_bd_pins lgain_adc_13/S_ARESETN] [get_bd_pins lgain_adc_14/S_ARESETN] [get_bd_pins lgain_adc_15/S_ARESETN] [get_bd_pins lgain_cf_replica_rst/peripheral_aresetn]
  connect_bd_net -net rst_1 [get_bd_pins rst] [get_bd_pins ADC_IF_TEST_3_0_B66/rst]
  connect_bd_net -net vio_0_probe_out0 [get_bd_pins ADC_IF_TEST_3_0_B66/start_bitslip] [get_bd_pins vio_0/probe_out0]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_block_2
proc create_hier_cell_lgain_adc_block_2 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_block_2() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC_8

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC_9

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC_10

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC_11

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:display_high_speed_selectio_wiz:hssio_data_rx_rtl:1.0 xiphy_rx_pins_2


  # Create pins
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir O fifo_rd_data_valid
  create_bd_pin -dir I rst

  # Create instance: ADC_IF_TEST_2_0_B65, and set properties
  set ADC_IF_TEST_2_0_B65 [ create_bd_cell -type ip -vlnv teldevice.local:user:ADC_IF_TEST_2:1.0 ADC_IF_TEST_2_0_B65 ]

  set_property -dict [ list \
   CONFIG.FREQ_HZ {125000000} \
 ] [get_bd_pins /lgain_adc_blocks/lgain_adc_block_2/ADC_IF_TEST_2_0_B65/clk]

  # Create instance: lgain_8b_replica_rst, and set properties
  set lgain_8b_replica_rst [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 lgain_8b_replica_rst ]

  # Create instance: lgain_adc_8
  create_hier_cell_lgain_adc_8 $hier_obj lgain_adc_8

  # Create instance: lgain_adc_9
  create_hier_cell_lgain_adc_9 $hier_obj lgain_adc_9

  # Create instance: lgain_adc_10
  create_hier_cell_lgain_adc_10 $hier_obj lgain_adc_10

  # Create instance: lgain_adc_11
  create_hier_cell_lgain_adc_11 $hier_obj lgain_adc_11

  # Create instance: vio_0, and set properties
  set vio_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:vio:3.0 vio_0 ]
  set_property -dict [ list \
   CONFIG.C_NUM_PROBE_IN {21} \
 ] $vio_0

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]

  # Create interface connections
  connect_bd_intf_net -intf_net lgain_adc_10_M_AXIS_LGAIN_ADC [get_bd_intf_pins M_AXIS_LGAIN_ADC_10] [get_bd_intf_pins lgain_adc_10/M_AXIS_LGAIN_ADC]
  connect_bd_intf_net -intf_net lgain_adc_11_M_AXIS_LGAIN_ADC [get_bd_intf_pins M_AXIS_LGAIN_ADC_11] [get_bd_intf_pins lgain_adc_11/M_AXIS_LGAIN_ADC]
  connect_bd_intf_net -intf_net lgain_adc_8_M_AXIS_LGAIN_ADC [get_bd_intf_pins M_AXIS_LGAIN_ADC_8] [get_bd_intf_pins lgain_adc_8/M_AXIS_LGAIN_ADC]
  connect_bd_intf_net -intf_net lgain_adc_9_M_AXIS_LGAIN_ADC [get_bd_intf_pins M_AXIS_LGAIN_ADC_9] [get_bd_intf_pins lgain_adc_9/M_AXIS_LGAIN_ADC]
  connect_bd_intf_net -intf_net xiphy_rx_pins_2_1 [get_bd_intf_pins xiphy_rx_pins_2] [get_bd_intf_pins ADC_IF_TEST_2_0_B65/xiphy_rx_pins]

  # Create port connections
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_0 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_0] [get_bd_pins vio_0/probe_in2]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_4 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_4] [get_bd_pins vio_0/probe_in0]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_6 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_6] [get_bd_pins vio_0/probe_in3]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_8 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_8] [get_bd_pins vio_0/probe_in4]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_10 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_10] [get_bd_pins vio_0/probe_in5]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_13 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_13] [get_bd_pins vio_0/probe_in6]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_17 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_17] [get_bd_pins vio_0/probe_in7]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_19 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_19] [get_bd_pins vio_0/probe_in8]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_21 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_21] [get_bd_pins vio_0/probe_in9]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_23 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_23] [get_bd_pins vio_0/probe_in10]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_26 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_26] [get_bd_pins vio_0/probe_in1]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_30 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_30] [get_bd_pins vio_0/probe_in11]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_32 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_32] [get_bd_pins vio_0/probe_in12]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_34 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_34] [get_bd_pins vio_0/probe_in13]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_36 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_36] [get_bd_pins vio_0/probe_in14]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_39 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_39] [get_bd_pins vio_0/probe_in15]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_43 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_43] [get_bd_pins vio_0/probe_in16]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_45 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_45] [get_bd_pins vio_0/probe_in17]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_47 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_47] [get_bd_pins vio_0/probe_in18]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_bitslip_error_49 [get_bd_pins ADC_IF_TEST_2_0_B65/bitslip_error_49] [get_bd_pins vio_0/probe_in19]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_data_to_fabric_b65_bg0_pin10_10 [get_bd_pins ADC_IF_TEST_2_0_B65/data_to_fabric_b65_bg0_pin10_10] [get_bd_pins lgain_adc_11/In1]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_data_to_fabric_b65_bg0_pin4_4 [get_bd_pins ADC_IF_TEST_2_0_B65/data_to_fabric_b65_bg0_pin4_4] [get_bd_pins lgain_adc_11/In2]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_data_to_fabric_b65_bg0_pin6_6 [get_bd_pins ADC_IF_TEST_2_0_B65/data_to_fabric_b65_bg0_pin6_6] [get_bd_pins lgain_adc_11/In0]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_data_to_fabric_b65_bg0_pin8_8 [get_bd_pins ADC_IF_TEST_2_0_B65/data_to_fabric_b65_bg0_pin8_8] [get_bd_pins lgain_adc_11/In3]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_data_to_fabric_b65_bg1_pin10_23 [get_bd_pins ADC_IF_TEST_2_0_B65/data_to_fabric_b65_bg1_pin10_23] [get_bd_pins lgain_adc_10/In0]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_data_to_fabric_b65_bg1_pin4_17 [get_bd_pins ADC_IF_TEST_2_0_B65/data_to_fabric_b65_bg1_pin4_17] [get_bd_pins lgain_adc_10/In3]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_data_to_fabric_b65_bg1_pin6_19 [get_bd_pins ADC_IF_TEST_2_0_B65/data_to_fabric_b65_bg1_pin6_19] [get_bd_pins lgain_adc_10/In2]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_data_to_fabric_b65_bg1_pin8_21 [get_bd_pins ADC_IF_TEST_2_0_B65/data_to_fabric_b65_bg1_pin8_21] [get_bd_pins lgain_adc_10/In1]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_data_to_fabric_b65_bg2_pin10_36 [get_bd_pins ADC_IF_TEST_2_0_B65/data_to_fabric_b65_bg2_pin10_36] [get_bd_pins lgain_adc_9/In0]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_data_to_fabric_b65_bg2_pin4_30 [get_bd_pins ADC_IF_TEST_2_0_B65/data_to_fabric_b65_bg2_pin4_30] [get_bd_pins lgain_adc_9/In3]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_data_to_fabric_b65_bg2_pin6_32 [get_bd_pins ADC_IF_TEST_2_0_B65/data_to_fabric_b65_bg2_pin6_32] [get_bd_pins lgain_adc_9/In1]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_data_to_fabric_b65_bg2_pin8_34 [get_bd_pins ADC_IF_TEST_2_0_B65/data_to_fabric_b65_bg2_pin8_34] [get_bd_pins lgain_adc_9/In2]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_data_to_fabric_b65_bg3_pin10_49 [get_bd_pins ADC_IF_TEST_2_0_B65/data_to_fabric_b65_bg3_pin10_49] [get_bd_pins lgain_adc_8/In3]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_data_to_fabric_b65_bg3_pin4_43 [get_bd_pins ADC_IF_TEST_2_0_B65/data_to_fabric_b65_bg3_pin4_43] [get_bd_pins lgain_adc_8/In0]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_data_to_fabric_b65_bg3_pin6_45 [get_bd_pins ADC_IF_TEST_2_0_B65/data_to_fabric_b65_bg3_pin6_45] [get_bd_pins lgain_adc_8/In2]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_data_to_fabric_b65_bg3_pin8_47 [get_bd_pins ADC_IF_TEST_2_0_B65/data_to_fabric_b65_bg3_pin8_47] [get_bd_pins lgain_adc_8/In1]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_fifo_empty_4 [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_empty_4] [get_bd_pins lgain_adc_11/empty_0]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_fifo_empty_6 [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_empty_6] [get_bd_pins lgain_adc_11/empty_1]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_fifo_empty_8 [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_empty_8] [get_bd_pins lgain_adc_11/empty_2]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_fifo_empty_10 [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_empty_10] [get_bd_pins lgain_adc_11/empty_3]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_fifo_empty_17 [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_empty_17] [get_bd_pins lgain_adc_10/empty_0]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_fifo_empty_19 [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_empty_19] [get_bd_pins lgain_adc_10/empty_1]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_fifo_empty_21 [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_empty_21] [get_bd_pins lgain_adc_10/empty_2]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_fifo_empty_23 [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_empty_23] [get_bd_pins lgain_adc_10/empty_3]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_fifo_empty_30 [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_empty_30] [get_bd_pins lgain_adc_9/empty_0]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_fifo_empty_32 [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_empty_32] [get_bd_pins lgain_adc_9/empty_1]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_fifo_empty_34 [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_empty_34] [get_bd_pins lgain_adc_9/empty_2]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_fifo_empty_36 [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_empty_36] [get_bd_pins lgain_adc_9/empty_3]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_fifo_empty_43 [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_empty_43] [get_bd_pins lgain_adc_8/empty_0]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_fifo_empty_45 [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_empty_45] [get_bd_pins lgain_adc_8/empty_1]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_fifo_empty_47 [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_empty_47] [get_bd_pins lgain_adc_8/empty_2]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_fifo_empty_49 [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_empty_49] [get_bd_pins lgain_adc_8/empty_3]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_fifo_rd_data_valid [get_bd_pins fifo_rd_data_valid] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_data_valid]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_pll0_clkout0 [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_0] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_4] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_6] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_8] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_10] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_13] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_17] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_19] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_21] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_23] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_26] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_30] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_32] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_34] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_36] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_39] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_43] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_45] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_47] [get_bd_pins ADC_IF_TEST_2_0_B65/fifo_rd_clk_49] [get_bd_pins ADC_IF_TEST_2_0_B65/pll0_clkout0] [get_bd_pins lgain_8b_replica_rst/slowest_sync_clk] [get_bd_pins lgain_adc_10/S_ACLK] [get_bd_pins lgain_adc_11/S_ACLK] [get_bd_pins lgain_adc_8/S_ACLK] [get_bd_pins lgain_adc_9/S_ACLK]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_pll0_locked [get_bd_pins ADC_IF_TEST_2_0_B65/pll0_locked] [get_bd_pins lgain_8b_replica_rst/ext_reset_in]
  connect_bd_net -net ADC_IF_TEST_2_0_B65_rx_bitslip_sync_done [get_bd_pins ADC_IF_TEST_2_0_B65/rx_bitslip_sync_done] [get_bd_pins vio_0/probe_in20]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins ADC_IF_TEST_2_0_B65/clk] [get_bd_pins lgain_adc_10/M_ACLK] [get_bd_pins lgain_adc_11/M_ACLK] [get_bd_pins lgain_adc_8/M_ACLK] [get_bd_pins lgain_adc_9/M_ACLK] [get_bd_pins vio_0/clk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins lgain_adc_10/M_ARESETN] [get_bd_pins lgain_adc_11/M_ARESETN] [get_bd_pins lgain_adc_8/M_ARESETN] [get_bd_pins lgain_adc_9/M_ARESETN]
  connect_bd_net -net en_vtc_bsc0_1 [get_bd_pins ADC_IF_TEST_2_0_B65/en_vtc_bsc0] [get_bd_pins ADC_IF_TEST_2_0_B65/en_vtc_bsc1] [get_bd_pins ADC_IF_TEST_2_0_B65/en_vtc_bsc2] [get_bd_pins ADC_IF_TEST_2_0_B65/en_vtc_bsc3] [get_bd_pins ADC_IF_TEST_2_0_B65/en_vtc_bsc4] [get_bd_pins ADC_IF_TEST_2_0_B65/en_vtc_bsc5] [get_bd_pins ADC_IF_TEST_2_0_B65/en_vtc_bsc6] [get_bd_pins ADC_IF_TEST_2_0_B65/en_vtc_bsc7] [get_bd_pins xlconstant_0/dout]
  connect_bd_net -net lgain_8b_replica_rst_peripheral_aresetn [get_bd_pins lgain_8b_replica_rst/peripheral_aresetn] [get_bd_pins lgain_adc_10/S_ARESETN] [get_bd_pins lgain_adc_11/S_ARESETN] [get_bd_pins lgain_adc_8/S_ARESETN] [get_bd_pins lgain_adc_9/S_ARESETN]
  connect_bd_net -net rst_1 [get_bd_pins rst] [get_bd_pins ADC_IF_TEST_2_0_B65/rst]
  connect_bd_net -net vio_0_probe_out0 [get_bd_pins ADC_IF_TEST_2_0_B65/start_bitslip] [get_bd_pins vio_0/probe_out0]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_block_1
proc create_hier_cell_lgain_adc_block_1 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_block_1() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC_4

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC_5

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC_6

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC_7

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:display_high_speed_selectio_wiz:hssio_data_rx_rtl:1.0 xiphy_rx_pins_1


  # Create pins
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir O fifo_rd_data_valid
  create_bd_pin -dir I rst

  # Create instance: ADC_IF_TEST_1_0_B64, and set properties
  set ADC_IF_TEST_1_0_B64 [ create_bd_cell -type ip -vlnv teldevice.local:user:ADC_IF_TEST_1:1.0 ADC_IF_TEST_1_0_B64 ]

  set_property -dict [ list \
   CONFIG.FREQ_HZ {125000000} \
 ] [get_bd_pins /lgain_adc_blocks/lgain_adc_block_1/ADC_IF_TEST_1_0_B64/clk]

  # Create instance: lgain_47_replica_rst, and set properties
  set lgain_47_replica_rst [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 lgain_47_replica_rst ]

  # Create instance: lgain_adc_4
  create_hier_cell_lgain_adc_4 $hier_obj lgain_adc_4

  # Create instance: lgain_adc_5
  create_hier_cell_lgain_adc_5 $hier_obj lgain_adc_5

  # Create instance: lgain_adc_6
  create_hier_cell_lgain_adc_6 $hier_obj lgain_adc_6

  # Create instance: lgain_adc_7
  create_hier_cell_lgain_adc_7 $hier_obj lgain_adc_7

  # Create instance: vio_0, and set properties
  set vio_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:vio:3.0 vio_0 ]
  set_property -dict [ list \
   CONFIG.C_NUM_PROBE_IN {21} \
 ] $vio_0

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]

  # Create interface connections
  connect_bd_intf_net -intf_net lgain_adc_4_M_AXIS_LGAIN_ADC [get_bd_intf_pins M_AXIS_LGAIN_ADC_4] [get_bd_intf_pins lgain_adc_4/M_AXIS_LGAIN_ADC]
  connect_bd_intf_net -intf_net lgain_adc_5_M_AXIS_LGAIN_ADC [get_bd_intf_pins M_AXIS_LGAIN_ADC_5] [get_bd_intf_pins lgain_adc_5/M_AXIS_LGAIN_ADC]
  connect_bd_intf_net -intf_net lgain_adc_6_M_AXIS_LGAIN_ADC [get_bd_intf_pins M_AXIS_LGAIN_ADC_6] [get_bd_intf_pins lgain_adc_6/M_AXIS_LGAIN_ADC]
  connect_bd_intf_net -intf_net lgain_adc_7_M_AXIS_LGAIN_ADC [get_bd_intf_pins M_AXIS_LGAIN_ADC_7] [get_bd_intf_pins lgain_adc_7/M_AXIS_LGAIN_ADC]
  connect_bd_intf_net -intf_net xiphy_rx_pins_1_1 [get_bd_intf_pins xiphy_rx_pins_1] [get_bd_intf_pins ADC_IF_TEST_1_0_B64/xiphy_rx_pins]

  # Create port connections
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_0 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_0] [get_bd_pins vio_0/probe_in2]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_2 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_2] [get_bd_pins vio_0/probe_in3]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_4 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_4] [get_bd_pins vio_0/probe_in0]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_6 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_6] [get_bd_pins vio_0/probe_in4]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_8 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_8] [get_bd_pins vio_0/probe_in5]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_13 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_13] [get_bd_pins vio_0/probe_in6]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_17 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_17] [get_bd_pins vio_0/probe_in7]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_19 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_19] [get_bd_pins vio_0/probe_in8]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_21 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_21] [get_bd_pins vio_0/probe_in9]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_23 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_23] [get_bd_pins vio_0/probe_in10]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_26 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_26] [get_bd_pins vio_0/probe_in1]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_30 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_30] [get_bd_pins vio_0/probe_in11]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_32 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_32] [get_bd_pins vio_0/probe_in12]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_34 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_34] [get_bd_pins vio_0/probe_in13]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_36 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_36] [get_bd_pins vio_0/probe_in14]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_39 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_39] [get_bd_pins vio_0/probe_in15]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_43 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_43] [get_bd_pins vio_0/probe_in16]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_45 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_45] [get_bd_pins vio_0/probe_in17]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_47 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_47] [get_bd_pins vio_0/probe_in18]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_bitslip_error_49 [get_bd_pins ADC_IF_TEST_1_0_B64/bitslip_error_49] [get_bd_pins vio_0/probe_in19]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_data_to_fabric_b64_bg0_pin2_2 [get_bd_pins ADC_IF_TEST_1_0_B64/data_to_fabric_b64_bg0_pin2_2] [get_bd_pins lgain_adc_7/In3]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_data_to_fabric_b64_bg0_pin4_4 [get_bd_pins ADC_IF_TEST_1_0_B64/data_to_fabric_b64_bg0_pin4_4] [get_bd_pins lgain_adc_7/In1]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_data_to_fabric_b64_bg0_pin6_6 [get_bd_pins ADC_IF_TEST_1_0_B64/data_to_fabric_b64_bg0_pin6_6] [get_bd_pins lgain_adc_7/In2]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_data_to_fabric_b64_bg0_pin8_8 [get_bd_pins ADC_IF_TEST_1_0_B64/data_to_fabric_b64_bg0_pin8_8] [get_bd_pins lgain_adc_7/In0]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_data_to_fabric_b64_bg1_pin10_23 [get_bd_pins ADC_IF_TEST_1_0_B64/data_to_fabric_b64_bg1_pin10_23] [get_bd_pins lgain_adc_6/In2]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_data_to_fabric_b64_bg1_pin4_17 [get_bd_pins ADC_IF_TEST_1_0_B64/data_to_fabric_b64_bg1_pin4_17] [get_bd_pins lgain_adc_6/In1]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_data_to_fabric_b64_bg1_pin6_19 [get_bd_pins ADC_IF_TEST_1_0_B64/data_to_fabric_b64_bg1_pin6_19] [get_bd_pins lgain_adc_6/In3]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_data_to_fabric_b64_bg1_pin8_21 [get_bd_pins ADC_IF_TEST_1_0_B64/data_to_fabric_b64_bg1_pin8_21] [get_bd_pins lgain_adc_6/In0]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_data_to_fabric_b64_bg2_pin10_36 [get_bd_pins ADC_IF_TEST_1_0_B64/data_to_fabric_b64_bg2_pin10_36] [get_bd_pins lgain_adc_5/In0]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_data_to_fabric_b64_bg2_pin4_30 [get_bd_pins ADC_IF_TEST_1_0_B64/data_to_fabric_b64_bg2_pin4_30] [get_bd_pins lgain_adc_5/In1]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_data_to_fabric_b64_bg2_pin6_32 [get_bd_pins ADC_IF_TEST_1_0_B64/data_to_fabric_b64_bg2_pin6_32] [get_bd_pins lgain_adc_5/In3]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_data_to_fabric_b64_bg2_pin8_34 [get_bd_pins ADC_IF_TEST_1_0_B64/data_to_fabric_b64_bg2_pin8_34] [get_bd_pins lgain_adc_5/In2]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_data_to_fabric_b64_bg3_pin10_49 [get_bd_pins ADC_IF_TEST_1_0_B64/data_to_fabric_b64_bg3_pin10_49] [get_bd_pins lgain_adc_4/In2]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_data_to_fabric_b64_bg3_pin4_43 [get_bd_pins ADC_IF_TEST_1_0_B64/data_to_fabric_b64_bg3_pin4_43] [get_bd_pins lgain_adc_4/In1]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_data_to_fabric_b64_bg3_pin6_45 [get_bd_pins ADC_IF_TEST_1_0_B64/data_to_fabric_b64_bg3_pin6_45] [get_bd_pins lgain_adc_4/In0]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_data_to_fabric_b64_bg3_pin8_47 [get_bd_pins ADC_IF_TEST_1_0_B64/data_to_fabric_b64_bg3_pin8_47] [get_bd_pins lgain_adc_4/In3]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_fifo_empty_2 [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_empty_2] [get_bd_pins lgain_adc_7/empty_0]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_fifo_empty_4 [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_empty_4] [get_bd_pins lgain_adc_7/empty_1]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_fifo_empty_6 [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_empty_6] [get_bd_pins lgain_adc_7/empty_2]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_fifo_empty_8 [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_empty_8] [get_bd_pins lgain_adc_7/empty_3]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_fifo_empty_17 [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_empty_17] [get_bd_pins lgain_adc_6/empty_0]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_fifo_empty_19 [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_empty_19] [get_bd_pins lgain_adc_6/empty_1]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_fifo_empty_21 [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_empty_21] [get_bd_pins lgain_adc_6/empty_2]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_fifo_empty_23 [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_empty_23] [get_bd_pins lgain_adc_6/empty_3]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_fifo_empty_30 [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_empty_30] [get_bd_pins lgain_adc_5/empty_0]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_fifo_empty_32 [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_empty_32] [get_bd_pins lgain_adc_5/empty_1]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_fifo_empty_34 [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_empty_34] [get_bd_pins lgain_adc_5/empty_2]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_fifo_empty_36 [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_empty_36] [get_bd_pins lgain_adc_5/empty_3]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_fifo_empty_43 [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_empty_43] [get_bd_pins lgain_adc_4/empty_0]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_fifo_empty_45 [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_empty_45] [get_bd_pins lgain_adc_4/empty_1]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_fifo_empty_47 [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_empty_47] [get_bd_pins lgain_adc_4/empty_2]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_fifo_empty_49 [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_empty_49] [get_bd_pins lgain_adc_4/empty_3]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_fifo_rd_data_valid [get_bd_pins fifo_rd_data_valid] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_data_valid]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_pll0_locked [get_bd_pins ADC_IF_TEST_1_0_B64/pll0_locked] [get_bd_pins lgain_47_replica_rst/ext_reset_in]
  connect_bd_net -net ADC_IF_TEST_1_0_B64_rx_bitslip_sync_done [get_bd_pins ADC_IF_TEST_1_0_B64/rx_bitslip_sync_done] [get_bd_pins vio_0/probe_in20]
  connect_bd_net -net ADC_IF_TEST_1_0_pll0_clkout0 [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_0] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_2] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_4] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_6] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_8] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_13] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_17] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_19] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_21] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_23] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_26] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_30] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_32] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_34] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_36] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_39] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_43] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_45] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_47] [get_bd_pins ADC_IF_TEST_1_0_B64/fifo_rd_clk_49] [get_bd_pins ADC_IF_TEST_1_0_B64/pll0_clkout0] [get_bd_pins lgain_47_replica_rst/slowest_sync_clk] [get_bd_pins lgain_adc_4/S_ACLK] [get_bd_pins lgain_adc_5/S_ACLK] [get_bd_pins lgain_adc_6/S_ACLK] [get_bd_pins lgain_adc_7/S_ACLK]
  connect_bd_net -net M_ACLK_1 [get_bd_pins M_ACLK] [get_bd_pins ADC_IF_TEST_1_0_B64/clk] [get_bd_pins lgain_adc_4/M_ACLK] [get_bd_pins lgain_adc_5/M_ACLK] [get_bd_pins lgain_adc_6/M_ACLK] [get_bd_pins lgain_adc_7/M_ACLK] [get_bd_pins vio_0/clk]
  connect_bd_net -net M_ARESETN_1 [get_bd_pins M_ARESETN] [get_bd_pins lgain_adc_4/M_ARESETN] [get_bd_pins lgain_adc_5/M_ARESETN] [get_bd_pins lgain_adc_6/M_ARESETN] [get_bd_pins lgain_adc_7/M_ARESETN]
  connect_bd_net -net en_vtc_bsc0_1 [get_bd_pins ADC_IF_TEST_1_0_B64/en_vtc_bsc0] [get_bd_pins ADC_IF_TEST_1_0_B64/en_vtc_bsc1] [get_bd_pins ADC_IF_TEST_1_0_B64/en_vtc_bsc2] [get_bd_pins ADC_IF_TEST_1_0_B64/en_vtc_bsc3] [get_bd_pins ADC_IF_TEST_1_0_B64/en_vtc_bsc4] [get_bd_pins ADC_IF_TEST_1_0_B64/en_vtc_bsc5] [get_bd_pins ADC_IF_TEST_1_0_B64/en_vtc_bsc6] [get_bd_pins ADC_IF_TEST_1_0_B64/en_vtc_bsc7] [get_bd_pins xlconstant_0/dout]
  connect_bd_net -net lgain_47_replica_rst_peripheral_aresetn [get_bd_pins lgain_47_replica_rst/peripheral_aresetn] [get_bd_pins lgain_adc_4/S_ARESETN] [get_bd_pins lgain_adc_5/S_ARESETN] [get_bd_pins lgain_adc_6/S_ARESETN] [get_bd_pins lgain_adc_7/S_ARESETN]
  connect_bd_net -net rst_1 [get_bd_pins rst] [get_bd_pins ADC_IF_TEST_1_0_B64/rst]
  connect_bd_net -net vio_0_probe_out0 [get_bd_pins ADC_IF_TEST_1_0_B64/start_bitslip] [get_bd_pins vio_0/probe_out0]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_block_0
proc create_hier_cell_lgain_adc_block_0 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_block_0() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC_1

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC_2

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC_3

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:display_high_speed_selectio_wiz:hssio_data_rx_rtl:1.0 xiphy_rx_pins_0


  # Create pins
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir O fifo_rd_data_valid
  create_bd_pin -dir I -type rst rst

  # Create instance: ADC_IF_TEST_0_B69, and set properties
  set ADC_IF_TEST_0_B69 [ create_bd_cell -type ip -vlnv teldevice.local:user:ADC_IF_TEST:1.0 ADC_IF_TEST_0_B69 ]

  set_property -dict [ list \
   CONFIG.FREQ_HZ {125000000} \
 ] [get_bd_pins /lgain_adc_blocks/lgain_adc_block_0/ADC_IF_TEST_0_B69/clk]

  # Create instance: lgain_B69_rst, and set properties
  set lgain_B69_rst [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 lgain_B69_rst ]

  # Create instance: lgain_adc_0
  create_hier_cell_lgain_adc_0 $hier_obj lgain_adc_0

  # Create instance: lgain_adc_1
  create_hier_cell_lgain_adc_1 $hier_obj lgain_adc_1

  # Create instance: lgain_adc_2
  create_hier_cell_lgain_adc_2 $hier_obj lgain_adc_2

  # Create instance: lgain_adc_3
  create_hier_cell_lgain_adc_3 $hier_obj lgain_adc_3

  # Create instance: vio_0, and set properties
  set vio_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:vio:3.0 vio_0 ]
  set_property -dict [ list \
   CONFIG.C_NUM_PROBE_IN {21} \
 ] $vio_0

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]

  # Create interface connections
  connect_bd_intf_net -intf_net lgain_adc_0_M_AXIS_LGAIN_ADC [get_bd_intf_pins M_AXIS_LGAIN_ADC_0] [get_bd_intf_pins lgain_adc_0/M_AXIS_LGAIN_ADC]
  connect_bd_intf_net -intf_net lgain_adc_1_M_AXIS_LGAIN_ADC [get_bd_intf_pins M_AXIS_LGAIN_ADC_1] [get_bd_intf_pins lgain_adc_1/M_AXIS_LGAIN_ADC]
  connect_bd_intf_net -intf_net lgain_adc_2_M_AXIS_LGAIN_ADC [get_bd_intf_pins M_AXIS_LGAIN_ADC_2] [get_bd_intf_pins lgain_adc_2/M_AXIS_LGAIN_ADC]
  connect_bd_intf_net -intf_net lgain_adc_3_M_AXIS_LGAIN_ADC [get_bd_intf_pins M_AXIS_LGAIN_ADC_3] [get_bd_intf_pins lgain_adc_3/M_AXIS_LGAIN_ADC]
  connect_bd_intf_net -intf_net xiphy_rx_pins_0_1 [get_bd_intf_pins xiphy_rx_pins_0] [get_bd_intf_pins ADC_IF_TEST_0_B69/xiphy_rx_pins]

  # Create port connections
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_2 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_2] [get_bd_pins vio_0/probe_in3]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_4 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_4] [get_bd_pins vio_0/probe_in0]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_6 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_6] [get_bd_pins vio_0/probe_in4]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_8 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_8] [get_bd_pins vio_0/probe_in5]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_10 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_10] [get_bd_pins vio_0/probe_in6]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_15 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_15] [get_bd_pins vio_0/probe_in7]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_17 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_17] [get_bd_pins vio_0/probe_in8]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_19 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_19] [get_bd_pins vio_0/probe_in9]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_21 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_21] [get_bd_pins vio_0/probe_in10]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_23 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_23] [get_bd_pins vio_0/probe_in11]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_26 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_26] [get_bd_pins vio_0/probe_in1]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_28 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_28] [get_bd_pins vio_0/probe_in2]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_30 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_30] [get_bd_pins vio_0/probe_in12]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_34 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_34] [get_bd_pins vio_0/probe_in13]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_36 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_36] [get_bd_pins vio_0/probe_in14]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_41 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_41] [get_bd_pins vio_0/probe_in15]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_43 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_43] [get_bd_pins vio_0/probe_in16]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_45 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_45] [get_bd_pins vio_0/probe_in17]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_47 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_47] [get_bd_pins vio_0/probe_in18]
  connect_bd_net -net ADC_IF_TEST_0_B69_bitslip_error_49 [get_bd_pins ADC_IF_TEST_0_B69/bitslip_error_49] [get_bd_pins vio_0/probe_in19]
  connect_bd_net -net ADC_IF_TEST_0_B69_data_to_fabric_bg0_pin10_10 [get_bd_pins ADC_IF_TEST_0_B69/data_to_fabric_bg0_pin10_10] [get_bd_pins lgain_adc_3/In2]
  connect_bd_net -net ADC_IF_TEST_0_B69_data_to_fabric_bg0_pin2_2 [get_bd_pins ADC_IF_TEST_0_B69/data_to_fabric_bg0_pin2_2] [get_bd_pins lgain_adc_3/In3]
  connect_bd_net -net ADC_IF_TEST_0_B69_data_to_fabric_bg0_pin4_4 [get_bd_pins ADC_IF_TEST_0_B69/data_to_fabric_bg0_pin4_4] [get_bd_pins lgain_adc_3/In1]
  connect_bd_net -net ADC_IF_TEST_0_B69_data_to_fabric_bg0_pin8_8 [get_bd_pins ADC_IF_TEST_0_B69/data_to_fabric_bg0_pin8_8] [get_bd_pins lgain_adc_3/In0]
  connect_bd_net -net ADC_IF_TEST_0_B69_data_to_fabric_bg1_pin10_23 [get_bd_pins ADC_IF_TEST_0_B69/data_to_fabric_bg1_pin10_23] [get_bd_pins lgain_adc_2/In2]
  connect_bd_net -net ADC_IF_TEST_0_B69_data_to_fabric_bg1_pin2_15 [get_bd_pins ADC_IF_TEST_0_B69/data_to_fabric_bg1_pin2_15] [get_bd_pins lgain_adc_2/In3]
  connect_bd_net -net ADC_IF_TEST_0_B69_data_to_fabric_bg1_pin4_17 [get_bd_pins ADC_IF_TEST_0_B69/data_to_fabric_bg1_pin4_17] [get_bd_pins lgain_adc_2/In1]
  connect_bd_net -net ADC_IF_TEST_0_B69_data_to_fabric_bg1_pin8_21 [get_bd_pins ADC_IF_TEST_0_B69/data_to_fabric_bg1_pin8_21] [get_bd_pins lgain_adc_2/In0]
  connect_bd_net -net ADC_IF_TEST_0_B69_data_to_fabric_bg2_pin10_36 [get_bd_pins ADC_IF_TEST_0_B69/data_to_fabric_bg2_pin10_36] [get_bd_pins lgain_adc_1/In2]
  connect_bd_net -net ADC_IF_TEST_0_B69_data_to_fabric_bg2_pin2_28 [get_bd_pins ADC_IF_TEST_0_B69/data_to_fabric_bg2_pin2_28] [get_bd_pins lgain_adc_1/In3]
  connect_bd_net -net ADC_IF_TEST_0_B69_data_to_fabric_bg2_pin4_30 [get_bd_pins ADC_IF_TEST_0_B69/data_to_fabric_bg2_pin4_30] [get_bd_pins lgain_adc_1/In1]
  connect_bd_net -net ADC_IF_TEST_0_B69_data_to_fabric_bg2_pin8_34 [get_bd_pins ADC_IF_TEST_0_B69/data_to_fabric_bg2_pin8_34] [get_bd_pins lgain_adc_1/In0]
  connect_bd_net -net ADC_IF_TEST_0_B69_data_to_fabric_bg3_pin10_49 [get_bd_pins ADC_IF_TEST_0_B69/data_to_fabric_bg3_pin10_49] [get_bd_pins lgain_adc_0/In2]
  connect_bd_net -net ADC_IF_TEST_0_B69_data_to_fabric_bg3_pin2_41 [get_bd_pins ADC_IF_TEST_0_B69/data_to_fabric_bg3_pin2_41] [get_bd_pins lgain_adc_0/In3]
  connect_bd_net -net ADC_IF_TEST_0_B69_data_to_fabric_bg3_pin4_43 [get_bd_pins ADC_IF_TEST_0_B69/data_to_fabric_bg3_pin4_43] [get_bd_pins lgain_adc_0/In0]
  connect_bd_net -net ADC_IF_TEST_0_B69_data_to_fabric_bg3_pin8_47 [get_bd_pins ADC_IF_TEST_0_B69/data_to_fabric_bg3_pin8_47] [get_bd_pins lgain_adc_0/In1]
  connect_bd_net -net ADC_IF_TEST_0_B69_fifo_empty_2 [get_bd_pins ADC_IF_TEST_0_B69/fifo_empty_2] [get_bd_pins lgain_adc_3/empty_0]
  connect_bd_net -net ADC_IF_TEST_0_B69_fifo_empty_4 [get_bd_pins ADC_IF_TEST_0_B69/fifo_empty_4] [get_bd_pins lgain_adc_3/empty_1]
  connect_bd_net -net ADC_IF_TEST_0_B69_fifo_empty_8 [get_bd_pins ADC_IF_TEST_0_B69/fifo_empty_8] [get_bd_pins lgain_adc_3/empty_2]
  connect_bd_net -net ADC_IF_TEST_0_B69_fifo_empty_10 [get_bd_pins ADC_IF_TEST_0_B69/fifo_empty_10] [get_bd_pins lgain_adc_3/empty_3]
  connect_bd_net -net ADC_IF_TEST_0_B69_fifo_empty_15 [get_bd_pins ADC_IF_TEST_0_B69/fifo_empty_15] [get_bd_pins lgain_adc_2/empty_0]
  connect_bd_net -net ADC_IF_TEST_0_B69_fifo_empty_21 [get_bd_pins ADC_IF_TEST_0_B69/fifo_empty_21] [get_bd_pins lgain_adc_2/empty_2]
  connect_bd_net -net ADC_IF_TEST_0_B69_fifo_empty_23 [get_bd_pins ADC_IF_TEST_0_B69/fifo_empty_23] [get_bd_pins lgain_adc_2/empty_3]
  connect_bd_net -net ADC_IF_TEST_0_B69_fifo_empty_28 [get_bd_pins ADC_IF_TEST_0_B69/fifo_empty_28] [get_bd_pins lgain_adc_1/empty_0]
  connect_bd_net -net ADC_IF_TEST_0_B69_fifo_empty_30 [get_bd_pins ADC_IF_TEST_0_B69/fifo_empty_30] [get_bd_pins lgain_adc_1/empty_1]
  connect_bd_net -net ADC_IF_TEST_0_B69_fifo_empty_34 [get_bd_pins ADC_IF_TEST_0_B69/fifo_empty_34] [get_bd_pins lgain_adc_1/empty_2]
  connect_bd_net -net ADC_IF_TEST_0_B69_fifo_empty_36 [get_bd_pins ADC_IF_TEST_0_B69/fifo_empty_36] [get_bd_pins lgain_adc_1/empty_3]
  connect_bd_net -net ADC_IF_TEST_0_B69_fifo_empty_41 [get_bd_pins ADC_IF_TEST_0_B69/fifo_empty_41] [get_bd_pins lgain_adc_0/empty_0]
  connect_bd_net -net ADC_IF_TEST_0_B69_fifo_empty_43 [get_bd_pins ADC_IF_TEST_0_B69/fifo_empty_43] [get_bd_pins lgain_adc_0/empty_1]
  connect_bd_net -net ADC_IF_TEST_0_B69_fifo_empty_47 [get_bd_pins ADC_IF_TEST_0_B69/fifo_empty_47] [get_bd_pins lgain_adc_0/empty_2]
  connect_bd_net -net ADC_IF_TEST_0_B69_fifo_empty_49 [get_bd_pins ADC_IF_TEST_0_B69/fifo_empty_49] [get_bd_pins lgain_adc_0/empty_3]
  connect_bd_net -net ADC_IF_TEST_0_B69_fifo_rd_data_valid [get_bd_pins fifo_rd_data_valid] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_data_valid]
  connect_bd_net -net ADC_IF_TEST_0_B69_pll0_clkout0 [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_2] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_4] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_6] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_8] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_10] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_15] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_17] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_19] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_21] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_23] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_26] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_28] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_30] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_34] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_36] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_41] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_43] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_45] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_47] [get_bd_pins ADC_IF_TEST_0_B69/fifo_rd_clk_49] [get_bd_pins ADC_IF_TEST_0_B69/pll0_clkout0] [get_bd_pins lgain_B69_rst/slowest_sync_clk] [get_bd_pins lgain_adc_0/S_ACLK] [get_bd_pins lgain_adc_1/S_ACLK] [get_bd_pins lgain_adc_2/S_ACLK] [get_bd_pins lgain_adc_3/S_ACLK]
  connect_bd_net -net ADC_IF_TEST_0_B69_pll0_locked [get_bd_pins ADC_IF_TEST_0_B69/pll0_locked] [get_bd_pins lgain_B69_rst/ext_reset_in]
  connect_bd_net -net ADC_IF_TEST_0_B69_rx_bitslip_sync_done [get_bd_pins ADC_IF_TEST_0_B69/rx_bitslip_sync_done] [get_bd_pins vio_0/probe_in20]
  connect_bd_net -net empty_1_1 [get_bd_pins ADC_IF_TEST_0_B69/fifo_empty_17] [get_bd_pins lgain_adc_2/empty_1]
  connect_bd_net -net lgain_03_rst_peripheral_aresetn [get_bd_pins lgain_B69_rst/peripheral_aresetn] [get_bd_pins lgain_adc_0/S_ARESETN] [get_bd_pins lgain_adc_1/S_ARESETN] [get_bd_pins lgain_adc_2/S_ARESETN] [get_bd_pins lgain_adc_3/S_ARESETN]
  connect_bd_net -net mts_clk_pl_user_clk [get_bd_pins M_ACLK] [get_bd_pins ADC_IF_TEST_0_B69/clk] [get_bd_pins lgain_adc_0/M_ACLK] [get_bd_pins lgain_adc_1/M_ACLK] [get_bd_pins lgain_adc_2/M_ACLK] [get_bd_pins lgain_adc_3/M_ACLK] [get_bd_pins vio_0/clk]
  connect_bd_net -net pl_user_clk_rst_peripheral_aresetn [get_bd_pins M_ARESETN] [get_bd_pins lgain_adc_0/M_ARESETN] [get_bd_pins lgain_adc_1/M_ARESETN] [get_bd_pins lgain_adc_2/M_ARESETN] [get_bd_pins lgain_adc_3/M_ARESETN]
  connect_bd_net -net rst_1 [get_bd_pins rst] [get_bd_pins ADC_IF_TEST_0_B69/rst]
  connect_bd_net -net vio_0_probe_out0 [get_bd_pins ADC_IF_TEST_0_B69/start_bitslip] [get_bd_pins vio_0/probe_out0]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins ADC_IF_TEST_0_B69/en_vtc_bsc0] [get_bd_pins ADC_IF_TEST_0_B69/en_vtc_bsc1] [get_bd_pins ADC_IF_TEST_0_B69/en_vtc_bsc2] [get_bd_pins ADC_IF_TEST_0_B69/en_vtc_bsc3] [get_bd_pins ADC_IF_TEST_0_B69/en_vtc_bsc4] [get_bd_pins ADC_IF_TEST_0_B69/en_vtc_bsc5] [get_bd_pins ADC_IF_TEST_0_B69/en_vtc_bsc6] [get_bd_pins ADC_IF_TEST_0_B69/en_vtc_bsc7] [get_bd_pins xlconstant_0/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: lgain_adc_blocks
proc create_hier_cell_lgain_adc_blocks { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_lgain_adc_blocks() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC1

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC2

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC3

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC4

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC5

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC6

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC7

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC8

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC9

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC10

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC11

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC12

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC13

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC14

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_LGAIN_ADC15

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:display_high_speed_selectio_wiz:hssio_data_rx_rtl:1.0 xiphy_rx_pins_0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:display_high_speed_selectio_wiz:hssio_data_rx_rtl:1.0 xiphy_rx_pins_1

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:display_high_speed_selectio_wiz:hssio_data_rx_rtl:1.0 xiphy_rx_pins_2

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:display_high_speed_selectio_wiz:hssio_data_rx_rtl:1.0 xiphy_rx_pins_3


  # Create pins
  create_bd_pin -dir I M_ACLK
  create_bd_pin -dir I M_ARESETN
  create_bd_pin -dir O fifo_rd_data_valid
  create_bd_pin -dir O fifo_rd_data_valid1
  create_bd_pin -dir O fifo_rd_data_valid2
  create_bd_pin -dir O fifo_rd_data_valid3
  create_bd_pin -dir I -type rst rst

  # Create instance: lgain_adc_block_0
  create_hier_cell_lgain_adc_block_0 $hier_obj lgain_adc_block_0

  # Create instance: lgain_adc_block_1
  create_hier_cell_lgain_adc_block_1 $hier_obj lgain_adc_block_1

  # Create instance: lgain_adc_block_2
  create_hier_cell_lgain_adc_block_2 $hier_obj lgain_adc_block_2

  # Create instance: lgain_adc_block_3
  create_hier_cell_lgain_adc_block_3 $hier_obj lgain_adc_block_3

  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins xiphy_rx_pins_2] [get_bd_intf_pins lgain_adc_block_2/xiphy_rx_pins_2]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins xiphy_rx_pins_1] [get_bd_intf_pins lgain_adc_block_1/xiphy_rx_pins_1]
  connect_bd_intf_net -intf_net Conn3 [get_bd_intf_pins xiphy_rx_pins_3] [get_bd_intf_pins lgain_adc_block_3/xiphy_rx_pins_3]
  connect_bd_intf_net -intf_net lgain_adc_block_0_M_AXIS_LGAIN_ADC_0 [get_bd_intf_pins M_AXIS_LGAIN_ADC] [get_bd_intf_pins lgain_adc_block_0/M_AXIS_LGAIN_ADC_0]
  connect_bd_intf_net -intf_net lgain_adc_block_0_M_AXIS_LGAIN_ADC_1 [get_bd_intf_pins M_AXIS_LGAIN_ADC1] [get_bd_intf_pins lgain_adc_block_0/M_AXIS_LGAIN_ADC_1]
  connect_bd_intf_net -intf_net lgain_adc_block_0_M_AXIS_LGAIN_ADC_2 [get_bd_intf_pins M_AXIS_LGAIN_ADC2] [get_bd_intf_pins lgain_adc_block_0/M_AXIS_LGAIN_ADC_2]
  connect_bd_intf_net -intf_net lgain_adc_block_0_M_AXIS_LGAIN_ADC_3 [get_bd_intf_pins M_AXIS_LGAIN_ADC3] [get_bd_intf_pins lgain_adc_block_0/M_AXIS_LGAIN_ADC_3]
  connect_bd_intf_net -intf_net lgain_adc_block_1_M_AXIS_LGAIN_ADC_4 [get_bd_intf_pins M_AXIS_LGAIN_ADC4] [get_bd_intf_pins lgain_adc_block_1/M_AXIS_LGAIN_ADC_4]
  connect_bd_intf_net -intf_net lgain_adc_block_1_M_AXIS_LGAIN_ADC_5 [get_bd_intf_pins M_AXIS_LGAIN_ADC5] [get_bd_intf_pins lgain_adc_block_1/M_AXIS_LGAIN_ADC_5]
  connect_bd_intf_net -intf_net lgain_adc_block_1_M_AXIS_LGAIN_ADC_6 [get_bd_intf_pins M_AXIS_LGAIN_ADC6] [get_bd_intf_pins lgain_adc_block_1/M_AXIS_LGAIN_ADC_6]
  connect_bd_intf_net -intf_net lgain_adc_block_1_M_AXIS_LGAIN_ADC_7 [get_bd_intf_pins M_AXIS_LGAIN_ADC7] [get_bd_intf_pins lgain_adc_block_1/M_AXIS_LGAIN_ADC_7]
  connect_bd_intf_net -intf_net lgain_adc_block_2_M_AXIS_LGAIN_ADC_8 [get_bd_intf_pins M_AXIS_LGAIN_ADC8] [get_bd_intf_pins lgain_adc_block_2/M_AXIS_LGAIN_ADC_8]
  connect_bd_intf_net -intf_net lgain_adc_block_2_M_AXIS_LGAIN_ADC_9 [get_bd_intf_pins M_AXIS_LGAIN_ADC9] [get_bd_intf_pins lgain_adc_block_2/M_AXIS_LGAIN_ADC_9]
  connect_bd_intf_net -intf_net lgain_adc_block_2_M_AXIS_LGAIN_ADC_10 [get_bd_intf_pins M_AXIS_LGAIN_ADC10] [get_bd_intf_pins lgain_adc_block_2/M_AXIS_LGAIN_ADC_10]
  connect_bd_intf_net -intf_net lgain_adc_block_2_M_AXIS_LGAIN_ADC_11 [get_bd_intf_pins M_AXIS_LGAIN_ADC11] [get_bd_intf_pins lgain_adc_block_2/M_AXIS_LGAIN_ADC_11]
  connect_bd_intf_net -intf_net lgain_adc_block_3_M_AXIS_LGAIN_ADC_12 [get_bd_intf_pins M_AXIS_LGAIN_ADC12] [get_bd_intf_pins lgain_adc_block_3/M_AXIS_LGAIN_ADC_12]
  connect_bd_intf_net -intf_net lgain_adc_block_3_M_AXIS_LGAIN_ADC_13 [get_bd_intf_pins M_AXIS_LGAIN_ADC13] [get_bd_intf_pins lgain_adc_block_3/M_AXIS_LGAIN_ADC_13]
  connect_bd_intf_net -intf_net lgain_adc_block_3_M_AXIS_LGAIN_ADC_14 [get_bd_intf_pins M_AXIS_LGAIN_ADC14] [get_bd_intf_pins lgain_adc_block_3/M_AXIS_LGAIN_ADC_14]
  connect_bd_intf_net -intf_net lgain_adc_block_3_M_AXIS_LGAIN_ADC_15 [get_bd_intf_pins M_AXIS_LGAIN_ADC15] [get_bd_intf_pins lgain_adc_block_3/M_AXIS_LGAIN_ADC_15]
  connect_bd_intf_net -intf_net xiphy_rx_pins_0_1 [get_bd_intf_pins xiphy_rx_pins_0] [get_bd_intf_pins lgain_adc_block_0/xiphy_rx_pins_0]

  # Create port connections
  connect_bd_net -net lgain_adc_block_0_fifo_rd_data_valid [get_bd_pins fifo_rd_data_valid] [get_bd_pins lgain_adc_block_0/fifo_rd_data_valid]
  connect_bd_net -net lgain_adc_block_1_fifo_rd_data_valid [get_bd_pins fifo_rd_data_valid1] [get_bd_pins lgain_adc_block_1/fifo_rd_data_valid]
  connect_bd_net -net lgain_adc_block_2_fifo_rd_data_valid [get_bd_pins fifo_rd_data_valid2] [get_bd_pins lgain_adc_block_2/fifo_rd_data_valid]
  connect_bd_net -net lgain_adc_block_3_fifo_rd_data_valid [get_bd_pins fifo_rd_data_valid3] [get_bd_pins lgain_adc_block_3/fifo_rd_data_valid]
  connect_bd_net -net mts_clk_pl_user_clk [get_bd_pins M_ACLK] [get_bd_pins lgain_adc_block_0/M_ACLK] [get_bd_pins lgain_adc_block_1/M_ACLK] [get_bd_pins lgain_adc_block_2/M_ACLK] [get_bd_pins lgain_adc_block_3/M_ACLK]
  connect_bd_net -net pl_user_clk_rst_peripheral_aresetn [get_bd_pins M_ARESETN] [get_bd_pins lgain_adc_block_0/M_ARESETN] [get_bd_pins lgain_adc_block_1/M_ARESETN] [get_bd_pins lgain_adc_block_2/M_ARESETN] [get_bd_pins lgain_adc_block_3/M_ARESETN]
  connect_bd_net -net rst_1 [get_bd_pins rst] [get_bd_pins lgain_adc_block_0/rst] [get_bd_pins lgain_adc_block_1/rst] [get_bd_pins lgain_adc_block_2/rst] [get_bd_pins lgain_adc_block_3/rst]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports

  # Create ports

  # Create instance: lgain_adc_blocks
  create_hier_cell_lgain_adc_blocks [current_bd_instance .] lgain_adc_blocks

  # Create port connections

  # Create address segments


  # Restore current instance
  current_bd_instance $oldCurInst

  save_bd_design
common::send_msg_id "BD_TCL-1000" "WARNING" "This Tcl script was generated from a block design that has not been validated. It is possible that design <$design_name> may result in errors during validation."

  close_bd_design $design_name 
}
# End of cr_bd_ladc_block()
cr_bd_ladc_block ""
set_property EXCLUDE_DEBUG_LOGIC "0" [get_files ladc_block.bd ] 
set_property GENERATE_SYNTH_CHECKPOINT "1" [get_files ladc_block.bd ] 
set_property IS_ENABLED "1" [get_files ladc_block.bd ] 
set_property IS_GLOBAL_INCLUDE "0" [get_files ladc_block.bd ] 
set_property IS_LOCKED "0" [get_files ladc_block.bd ] 
set_property LIBRARY "xil_defaultlib" [get_files ladc_block.bd ] 
set_property PATH_MODE "RelativeFirst" [get_files ladc_block.bd ] 
set_property PFM_NAME "" [get_files ladc_block.bd ] 
set_property REGISTERED_WITH_MANAGER "1" [get_files ladc_block.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files ladc_block.bd ] 
set_property USED_IN "" [get_files ladc_block.bd ] 
set_property USED_IN_IMPLEMENTATION "0" [get_files ladc_block.bd ] 
set_property USED_IN_SIMULATION "0" [get_files ladc_block.bd ] 
set_property USED_IN_SYNTHESIS "0" [get_files ladc_block.bd ] 



# Proc to create BD rfdc_block
proc cr_bd_rfdc_block { parentCell } {

  # CHANGE DESIGN NAME HERE
  set design_name rfdc_block

  common::send_msg_id "BD_TCL-003" "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:usp_rf_data_converter:2.1\
  "

   set list_ips_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  if { $bCheckIPsPassed != 1 } {
    common::send_msg_id "BD_TCL-1003" "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  
# Hierarchical cell: rfadc_block
proc create_hier_cell_rfadc_block { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_rfadc_block() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFADC

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFADC1

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFADC2

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFADC3

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFADC4

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFADC5

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFADC6

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFADC7

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFADC8

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFADC9

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFADC10

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFADC11

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFADC12

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFADC13

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFADC14

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFADC15

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 adc0_clk

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 adc1_clk

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 adc2_clk

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 adc3_clk

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:display_usp_rf_data_converter:diff_pins_rtl:1.0 sysref_in

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin00

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin01

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin02

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin03

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin10

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin11

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin12

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin13

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin20

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin21

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin22

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin23

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin30

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin31

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin32

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin33


  # Create pins
  create_bd_pin -dir I -type clk m1_axis_aclk
  create_bd_pin -dir I -type rst m2_axis_aresetn
  create_bd_pin -dir I user_sysref_adc

  # Create instance: usp_rf_data_converter_0, and set properties
  set usp_rf_data_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:usp_rf_data_converter:2.1 usp_rf_data_converter_0 ]
  set_property -dict [ list \
   CONFIG.ADC0_Fabric_Freq {125.000} \
   CONFIG.ADC0_Link_Coupling {1} \
   CONFIG.ADC0_Multi_Tile_Sync {true} \
   CONFIG.ADC0_Outclk_Freq {125.000} \
   CONFIG.ADC0_PLL_Enable {true} \
   CONFIG.ADC0_Refclk_Freq {250.000} \
   CONFIG.ADC1_Enable {1} \
   CONFIG.ADC1_Fabric_Freq {125.000} \
   CONFIG.ADC1_Link_Coupling {1} \
   CONFIG.ADC1_Multi_Tile_Sync {true} \
   CONFIG.ADC1_Outclk_Freq {125.000} \
   CONFIG.ADC1_PLL_Enable {true} \
   CONFIG.ADC1_Refclk_Freq {250.000} \
   CONFIG.ADC2_Enable {1} \
   CONFIG.ADC2_Fabric_Freq {125.000} \
   CONFIG.ADC2_Link_Coupling {1} \
   CONFIG.ADC2_Multi_Tile_Sync {true} \
   CONFIG.ADC2_Outclk_Freq {125.000} \
   CONFIG.ADC2_PLL_Enable {true} \
   CONFIG.ADC2_Refclk_Freq {250.000} \
   CONFIG.ADC3_Enable {1} \
   CONFIG.ADC3_Fabric_Freq {125.000} \
   CONFIG.ADC3_Link_Coupling {1} \
   CONFIG.ADC3_Multi_Tile_Sync {true} \
   CONFIG.ADC3_Outclk_Freq {125.000} \
   CONFIG.ADC3_PLL_Enable {true} \
   CONFIG.ADC3_Refclk_Freq {250.000} \
   CONFIG.ADC_Decimation_Mode00 {2} \
   CONFIG.ADC_Decimation_Mode01 {2} \
   CONFIG.ADC_Decimation_Mode02 {2} \
   CONFIG.ADC_Decimation_Mode03 {2} \
   CONFIG.ADC_Decimation_Mode10 {2} \
   CONFIG.ADC_Decimation_Mode11 {2} \
   CONFIG.ADC_Decimation_Mode12 {2} \
   CONFIG.ADC_Decimation_Mode13 {2} \
   CONFIG.ADC_Decimation_Mode20 {2} \
   CONFIG.ADC_Decimation_Mode21 {2} \
   CONFIG.ADC_Decimation_Mode22 {2} \
   CONFIG.ADC_Decimation_Mode23 {2} \
   CONFIG.ADC_Decimation_Mode30 {2} \
   CONFIG.ADC_Decimation_Mode31 {2} \
   CONFIG.ADC_Decimation_Mode32 {2} \
   CONFIG.ADC_Decimation_Mode33 {2} \
   CONFIG.ADC_Mixer_Type01 {0} \
   CONFIG.ADC_Mixer_Type02 {0} \
   CONFIG.ADC_Mixer_Type03 {0} \
   CONFIG.ADC_Mixer_Type10 {0} \
   CONFIG.ADC_Mixer_Type11 {0} \
   CONFIG.ADC_Mixer_Type12 {0} \
   CONFIG.ADC_Mixer_Type13 {0} \
   CONFIG.ADC_Mixer_Type20 {0} \
   CONFIG.ADC_Mixer_Type21 {0} \
   CONFIG.ADC_Mixer_Type22 {0} \
   CONFIG.ADC_Mixer_Type23 {0} \
   CONFIG.ADC_Mixer_Type30 {0} \
   CONFIG.ADC_Mixer_Type31 {0} \
   CONFIG.ADC_Mixer_Type32 {0} \
   CONFIG.ADC_Mixer_Type33 {0} \
   CONFIG.ADC_Slice01_Enable {true} \
   CONFIG.ADC_Slice02_Enable {true} \
   CONFIG.ADC_Slice03_Enable {true} \
   CONFIG.ADC_Slice10_Enable {true} \
   CONFIG.ADC_Slice11_Enable {true} \
   CONFIG.ADC_Slice12_Enable {true} \
   CONFIG.ADC_Slice13_Enable {true} \
   CONFIG.ADC_Slice20_Enable {true} \
   CONFIG.ADC_Slice21_Enable {true} \
   CONFIG.ADC_Slice22_Enable {true} \
   CONFIG.ADC_Slice23_Enable {true} \
   CONFIG.ADC_Slice30_Enable {true} \
   CONFIG.ADC_Slice31_Enable {true} \
   CONFIG.ADC_Slice32_Enable {true} \
   CONFIG.ADC_Slice33_Enable {true} \
   CONFIG.Axiclk_Freq {125.0} \
   CONFIG.DAC0_Enable {0} \
   CONFIG.DAC0_Fabric_Freq {0.0} \
   CONFIG.DAC0_Multi_Tile_Sync {false} \
   CONFIG.DAC0_Outclk_Freq {50.000} \
   CONFIG.DAC0_PLL_Enable {false} \
   CONFIG.DAC0_Refclk_Freq {6400.000} \
   CONFIG.DAC0_Sampling_Rate {6.4} \
   CONFIG.DAC1_Enable {0} \
   CONFIG.DAC1_Fabric_Freq {0.0} \
   CONFIG.DAC1_Multi_Tile_Sync {false} \
   CONFIG.DAC1_Outclk_Freq {50.000} \
   CONFIG.DAC1_PLL_Enable {false} \
   CONFIG.DAC1_Refclk_Freq {6400.000} \
   CONFIG.DAC1_Sampling_Rate {6.4} \
   CONFIG.DAC2_Enable {0} \
   CONFIG.DAC2_Fabric_Freq {0.0} \
   CONFIG.DAC2_Multi_Tile_Sync {false} \
   CONFIG.DAC2_Outclk_Freq {50.000} \
   CONFIG.DAC2_PLL_Enable {false} \
   CONFIG.DAC2_Refclk_Freq {6400.000} \
   CONFIG.DAC2_Sampling_Rate {6.4} \
   CONFIG.DAC3_Enable {0} \
   CONFIG.DAC3_Fabric_Freq {0.0} \
   CONFIG.DAC3_Multi_Tile_Sync {false} \
   CONFIG.DAC3_Outclk_Freq {50.000} \
   CONFIG.DAC3_PLL_Enable {false} \
   CONFIG.DAC3_Refclk_Freq {6400.000} \
   CONFIG.DAC3_Sampling_Rate {6.4} \
   CONFIG.DAC_Data_Width00 {16} \
   CONFIG.DAC_Data_Width01 {16} \
   CONFIG.DAC_Data_Width02 {16} \
   CONFIG.DAC_Data_Width03 {16} \
   CONFIG.DAC_Data_Width10 {16} \
   CONFIG.DAC_Data_Width11 {16} \
   CONFIG.DAC_Data_Width12 {16} \
   CONFIG.DAC_Data_Width13 {16} \
   CONFIG.DAC_Data_Width20 {16} \
   CONFIG.DAC_Data_Width21 {16} \
   CONFIG.DAC_Data_Width22 {16} \
   CONFIG.DAC_Data_Width23 {16} \
   CONFIG.DAC_Data_Width30 {16} \
   CONFIG.DAC_Data_Width31 {16} \
   CONFIG.DAC_Data_Width32 {16} \
   CONFIG.DAC_Data_Width33 {16} \
   CONFIG.DAC_Interpolation_Mode00 {0} \
   CONFIG.DAC_Interpolation_Mode01 {0} \
   CONFIG.DAC_Interpolation_Mode02 {0} \
   CONFIG.DAC_Interpolation_Mode03 {0} \
   CONFIG.DAC_Interpolation_Mode10 {0} \
   CONFIG.DAC_Interpolation_Mode11 {0} \
   CONFIG.DAC_Interpolation_Mode12 {0} \
   CONFIG.DAC_Interpolation_Mode13 {0} \
   CONFIG.DAC_Interpolation_Mode20 {0} \
   CONFIG.DAC_Interpolation_Mode21 {0} \
   CONFIG.DAC_Interpolation_Mode22 {0} \
   CONFIG.DAC_Interpolation_Mode23 {0} \
   CONFIG.DAC_Interpolation_Mode30 {0} \
   CONFIG.DAC_Interpolation_Mode31 {0} \
   CONFIG.DAC_Interpolation_Mode32 {0} \
   CONFIG.DAC_Interpolation_Mode33 {0} \
   CONFIG.DAC_Mixer_Type00 {3} \
   CONFIG.DAC_Mixer_Type01 {3} \
   CONFIG.DAC_Mixer_Type02 {3} \
   CONFIG.DAC_Mixer_Type03 {3} \
   CONFIG.DAC_Mixer_Type10 {3} \
   CONFIG.DAC_Mixer_Type11 {3} \
   CONFIG.DAC_Mixer_Type12 {3} \
   CONFIG.DAC_Mixer_Type13 {3} \
   CONFIG.DAC_Mixer_Type20 {3} \
   CONFIG.DAC_Mixer_Type21 {3} \
   CONFIG.DAC_Mixer_Type22 {3} \
   CONFIG.DAC_Mixer_Type23 {3} \
   CONFIG.DAC_Mixer_Type30 {3} \
   CONFIG.DAC_Mixer_Type31 {3} \
   CONFIG.DAC_Mixer_Type32 {3} \
   CONFIG.DAC_Mixer_Type33 {3} \
   CONFIG.DAC_Slice00_Enable {false} \
   CONFIG.DAC_Slice01_Enable {false} \
   CONFIG.DAC_Slice02_Enable {false} \
   CONFIG.DAC_Slice03_Enable {false} \
   CONFIG.DAC_Slice10_Enable {false} \
   CONFIG.DAC_Slice11_Enable {false} \
   CONFIG.DAC_Slice12_Enable {false} \
   CONFIG.DAC_Slice13_Enable {false} \
   CONFIG.DAC_Slice20_Enable {false} \
   CONFIG.DAC_Slice21_Enable {false} \
   CONFIG.DAC_Slice22_Enable {false} \
   CONFIG.DAC_Slice23_Enable {false} \
   CONFIG.DAC_Slice30_Enable {false} \
   CONFIG.DAC_Slice31_Enable {false} \
   CONFIG.DAC_Slice32_Enable {false} \
   CONFIG.DAC_Slice33_Enable {false} \
 ] $usp_rf_data_converter_0

  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins vin20] [get_bd_intf_pins usp_rf_data_converter_0/vin20]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins vin21] [get_bd_intf_pins usp_rf_data_converter_0/vin21]
  connect_bd_intf_net -intf_net Conn3 [get_bd_intf_pins vin30] [get_bd_intf_pins usp_rf_data_converter_0/vin30]
  connect_bd_intf_net -intf_net Conn4 [get_bd_intf_pins vin03] [get_bd_intf_pins usp_rf_data_converter_0/vin03]
  connect_bd_intf_net -intf_net Conn5 [get_bd_intf_pins vin00] [get_bd_intf_pins usp_rf_data_converter_0/vin00]
  connect_bd_intf_net -intf_net Conn6 [get_bd_intf_pins vin31] [get_bd_intf_pins usp_rf_data_converter_0/vin31]
  connect_bd_intf_net -intf_net Conn7 [get_bd_intf_pins vin02] [get_bd_intf_pins usp_rf_data_converter_0/vin02]
  connect_bd_intf_net -intf_net Conn8 [get_bd_intf_pins vin32] [get_bd_intf_pins usp_rf_data_converter_0/vin32]
  connect_bd_intf_net -intf_net Conn9 [get_bd_intf_pins vin12] [get_bd_intf_pins usp_rf_data_converter_0/vin12]
  connect_bd_intf_net -intf_net Conn10 [get_bd_intf_pins vin33] [get_bd_intf_pins usp_rf_data_converter_0/vin33]
  connect_bd_intf_net -intf_net Conn11 [get_bd_intf_pins vin11] [get_bd_intf_pins usp_rf_data_converter_0/vin11]
  connect_bd_intf_net -intf_net Conn12 [get_bd_intf_pins adc0_clk] [get_bd_intf_pins usp_rf_data_converter_0/adc0_clk]
  connect_bd_intf_net -intf_net Conn13 [get_bd_intf_pins vin23] [get_bd_intf_pins usp_rf_data_converter_0/vin23]
  connect_bd_intf_net -intf_net Conn14 [get_bd_intf_pins vin22] [get_bd_intf_pins usp_rf_data_converter_0/vin22]
  connect_bd_intf_net -intf_net Conn15 [get_bd_intf_pins adc1_clk] [get_bd_intf_pins usp_rf_data_converter_0/adc1_clk]
  connect_bd_intf_net -intf_net Conn16 [get_bd_intf_pins vin13] [get_bd_intf_pins usp_rf_data_converter_0/vin13]
  connect_bd_intf_net -intf_net Conn17 [get_bd_intf_pins adc2_clk] [get_bd_intf_pins usp_rf_data_converter_0/adc2_clk]
  connect_bd_intf_net -intf_net Conn18 [get_bd_intf_pins sysref_in] [get_bd_intf_pins usp_rf_data_converter_0/sysref_in]
  connect_bd_intf_net -intf_net Conn19 [get_bd_intf_pins vin10] [get_bd_intf_pins usp_rf_data_converter_0/vin10]
  connect_bd_intf_net -intf_net Conn20 [get_bd_intf_pins vin01] [get_bd_intf_pins usp_rf_data_converter_0/vin01]
  connect_bd_intf_net -intf_net Conn21 [get_bd_intf_pins adc3_clk] [get_bd_intf_pins usp_rf_data_converter_0/adc3_clk]
  connect_bd_intf_net -intf_net Conn22 [get_bd_intf_pins s_axi] [get_bd_intf_pins usp_rf_data_converter_0/s_axi]
  connect_bd_intf_net -intf_net usp_rf_data_converter_0_m00_axis [get_bd_intf_pins M_AXIS_RFADC14] [get_bd_intf_pins usp_rf_data_converter_0/m00_axis]
  connect_bd_intf_net -intf_net usp_rf_data_converter_0_m01_axis [get_bd_intf_pins M_AXIS_RFADC15] [get_bd_intf_pins usp_rf_data_converter_0/m01_axis]
  connect_bd_intf_net -intf_net usp_rf_data_converter_0_m02_axis [get_bd_intf_pins M_AXIS_RFADC12] [get_bd_intf_pins usp_rf_data_converter_0/m02_axis]
  connect_bd_intf_net -intf_net usp_rf_data_converter_0_m03_axis [get_bd_intf_pins M_AXIS_RFADC13] [get_bd_intf_pins usp_rf_data_converter_0/m03_axis]
  connect_bd_intf_net -intf_net usp_rf_data_converter_0_m10_axis [get_bd_intf_pins M_AXIS_RFADC10] [get_bd_intf_pins usp_rf_data_converter_0/m10_axis]
  connect_bd_intf_net -intf_net usp_rf_data_converter_0_m11_axis [get_bd_intf_pins M_AXIS_RFADC11] [get_bd_intf_pins usp_rf_data_converter_0/m11_axis]
  connect_bd_intf_net -intf_net usp_rf_data_converter_0_m12_axis [get_bd_intf_pins M_AXIS_RFADC8] [get_bd_intf_pins usp_rf_data_converter_0/m12_axis]
  connect_bd_intf_net -intf_net usp_rf_data_converter_0_m13_axis [get_bd_intf_pins M_AXIS_RFADC9] [get_bd_intf_pins usp_rf_data_converter_0/m13_axis]
  connect_bd_intf_net -intf_net usp_rf_data_converter_0_m20_axis [get_bd_intf_pins M_AXIS_RFADC6] [get_bd_intf_pins usp_rf_data_converter_0/m20_axis]
  connect_bd_intf_net -intf_net usp_rf_data_converter_0_m21_axis [get_bd_intf_pins M_AXIS_RFADC7] [get_bd_intf_pins usp_rf_data_converter_0/m21_axis]
  connect_bd_intf_net -intf_net usp_rf_data_converter_0_m22_axis [get_bd_intf_pins M_AXIS_RFADC4] [get_bd_intf_pins usp_rf_data_converter_0/m22_axis]
  connect_bd_intf_net -intf_net usp_rf_data_converter_0_m23_axis [get_bd_intf_pins M_AXIS_RFADC5] [get_bd_intf_pins usp_rf_data_converter_0/m23_axis]
  connect_bd_intf_net -intf_net usp_rf_data_converter_0_m30_axis [get_bd_intf_pins M_AXIS_RFADC2] [get_bd_intf_pins usp_rf_data_converter_0/m30_axis]
  connect_bd_intf_net -intf_net usp_rf_data_converter_0_m31_axis [get_bd_intf_pins M_AXIS_RFADC3] [get_bd_intf_pins usp_rf_data_converter_0/m31_axis]
  connect_bd_intf_net -intf_net usp_rf_data_converter_0_m32_axis [get_bd_intf_pins M_AXIS_RFADC] [get_bd_intf_pins usp_rf_data_converter_0/m32_axis]
  connect_bd_intf_net -intf_net usp_rf_data_converter_0_m33_axis [get_bd_intf_pins M_AXIS_RFADC1] [get_bd_intf_pins usp_rf_data_converter_0/m33_axis]

  # Create port connections
  connect_bd_net -net m1_axis_aclk_1 [get_bd_pins m1_axis_aclk] [get_bd_pins usp_rf_data_converter_0/m0_axis_aclk] [get_bd_pins usp_rf_data_converter_0/m1_axis_aclk] [get_bd_pins usp_rf_data_converter_0/m2_axis_aclk] [get_bd_pins usp_rf_data_converter_0/m3_axis_aclk] [get_bd_pins usp_rf_data_converter_0/s_axi_aclk]
  connect_bd_net -net m2_axis_aresetn_1 [get_bd_pins m2_axis_aresetn] [get_bd_pins usp_rf_data_converter_0/m0_axis_aresetn] [get_bd_pins usp_rf_data_converter_0/m1_axis_aresetn] [get_bd_pins usp_rf_data_converter_0/m2_axis_aresetn] [get_bd_pins usp_rf_data_converter_0/m3_axis_aresetn] [get_bd_pins usp_rf_data_converter_0/s_axi_aresetn]
  connect_bd_net -net user_sysref_adc_1 [get_bd_pins user_sysref_adc] [get_bd_pins usp_rf_data_converter_0/user_sysref_adc]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports

  # Create ports

  # Create instance: rfadc_block
  create_hier_cell_rfadc_block [current_bd_instance .] rfadc_block

  # Create port connections

  # Create address segments


  # Restore current instance
  current_bd_instance $oldCurInst

  save_bd_design
common::send_msg_id "BD_TCL-1000" "WARNING" "This Tcl script was generated from a block design that has not been validated. It is possible that design <$design_name> may result in errors during validation."

  close_bd_design $design_name 
}
# End of cr_bd_rfdc_block()
cr_bd_rfdc_block ""
set_property EXCLUDE_DEBUG_LOGIC "0" [get_files rfdc_block.bd ] 
set_property GENERATE_SYNTH_CHECKPOINT "1" [get_files rfdc_block.bd ] 
set_property IS_ENABLED "1" [get_files rfdc_block.bd ] 
set_property IS_GLOBAL_INCLUDE "0" [get_files rfdc_block.bd ] 
set_property IS_LOCKED "0" [get_files rfdc_block.bd ] 
set_property LIBRARY "xil_defaultlib" [get_files rfdc_block.bd ] 
set_property PATH_MODE "RelativeFirst" [get_files rfdc_block.bd ] 
set_property PFM_NAME "" [get_files rfdc_block.bd ] 
set_property REGISTERED_WITH_MANAGER "1" [get_files rfdc_block.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files rfdc_block.bd ] 
set_property USED_IN "" [get_files rfdc_block.bd ] 
set_property USED_IN_IMPLEMENTATION "0" [get_files rfdc_block.bd ] 
set_property USED_IN_SIMULATION "0" [get_files rfdc_block.bd ] 
set_property USED_IN_SYNTHESIS "0" [get_files rfdc_block.bd ] 



# Proc to create BD hardware_trigger
proc cr_bd_hardware_trigger { parentCell } {

  # CHANGE DESIGN NAME HERE
  set design_name hardware_trigger

  common::send_msg_id "BD_TCL-003" "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1\
  xilinx.com:ip:axis_dwidth_converter:1.1\
  awa.tohoku.ac.jp:mogura2:control_distributer:1.0\
  awa.tohoku.ac.jp:mogura2:data_trigger:1.0\
  awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0\
  awa.tohoku.ac.jp:mogura2:trigger_selector:1.0\
  xilinx.com:ip:util_vector_logic:2.0\
  "

   set list_ips_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  if { $bCheckIPsPassed != 1 } {
    common::send_msg_id "BD_TCL-1003" "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  
# Hierarchical cell: hardware_trigger_0
proc create_hier_cell_hardware_trigger_0 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_0() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv awa.tohoku.ac.jp:mogura2:trigger_control_rtl:1.1 TRIGGER_CONTROL


  # Create pins
  create_bd_pin -dir O DATAFRAMEGEN_ERROR
  create_bd_pin -dir O -from 15 -to 0 -type data DIGTAL_BASELINE
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MAX_TRIGGER_LENGTH
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I SET_CONFIG
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN
  create_bd_pin -dir I -from 47 -to 0 TIMESTAMP

  # Create instance: async_dataframe_gene_0, and set properties
  set async_dataframe_gene_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1 async_dataframe_gene_0 ]

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {32} \
 ] $axis_dwidth_converter_0

  # Create instance: control_distributer_0, and set properties
  set control_distributer_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:control_distributer:1.0 control_distributer_0 ]

  # Create instance: data_trigger_0, and set properties
  set data_trigger_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:data_trigger:1.0 data_trigger_0 ]

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_0/data_trigger_0/ARESET]

  # Create instance: simple_dsp_module_0, and set properties
  set simple_dsp_module_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0 simple_dsp_module_0 ]

  # Create instance: trigger_selector_0, and set properties
  set trigger_selector_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_selector:1.0 trigger_selector_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins simple_dsp_module_0/l_s_axis]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins simple_dsp_module_0/h_s_axis]
  connect_bd_intf_net -intf_net TRIGGER_CONTROL_1 [get_bd_intf_pins TRIGGER_CONTROL] [get_bd_intf_pins control_distributer_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net async_dataframe_gene_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD1 [get_bd_intf_pins control_distributer_0/CONTROL_MOD1] [get_bd_intf_pins data_trigger_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD2 [get_bd_intf_pins control_distributer_0/CONTROL_MOD2] [get_bd_intf_pins trigger_selector_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net data_trigger_0_M_AXIS [get_bd_intf_pins data_trigger_0/M_AXIS] [get_bd_intf_pins trigger_selector_0/S_AXIS]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dac_m_axis [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins simple_dsp_module_0/dac_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dsp_m_axis [get_bd_intf_pins data_trigger_0/DSP_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/dsp_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_h_m_axis [get_bd_intf_pins data_trigger_0/H_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/h_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_l_m_axis [get_bd_intf_pins data_trigger_0/L_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/l_m_axis]
  connect_bd_intf_net -intf_net trigger_selector_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/S_AXIS] [get_bd_intf_pins trigger_selector_0/M_AXIS]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins trigger_selector_0/EXTERNAL_TRIGGER]
  connect_bd_net -net MAX_TRIGGER_LENGTH_1 [get_bd_pins MAX_TRIGGER_LENGTH] [get_bd_pins async_dataframe_gene_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_LOWER_THRESOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_UPPER_THRESOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/M_AXIS_ACLK] [get_bd_pins axis_dwidth_converter_0/aclk]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/M_AXIS_RESETN] [get_bd_pins axis_dwidth_converter_0/aresetn]
  connect_bd_net -net SET_CONFIG_1 [get_bd_pins SET_CONFIG] [get_bd_pins async_dataframe_gene_0/SET_CONFIG] [get_bd_pins data_trigger_0/SET_CONFIG] [get_bd_pins trigger_selector_0/SET_CONFIG]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/S_AXIS_ACLK] [get_bd_pins data_trigger_0/ACLK] [get_bd_pins simple_dsp_module_0/clk] [get_bd_pins trigger_selector_0/ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/S_AXIS_RESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net TIMESTAMP_1 [get_bd_pins TIMESTAMP] [get_bd_pins data_trigger_0/TIMESTAMP]
  connect_bd_net -net async_dataframe_gene_0_DATAFRAME_GEN_ERROR [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins async_dataframe_gene_0/DATAFRAME_GEN_ERROR]
  connect_bd_net -net control_distributer_0_H_GAIN_BASELINE_MOD0 [get_bd_pins control_distributer_0/H_GAIN_BASELINE_MOD0] [get_bd_pins simple_dsp_module_0/h_gain_baseline]
  connect_bd_net -net data_trigger_0_H_GAIN_SATURATED_FLAG [get_bd_pins HGAIN_SATURATION] [get_bd_pins data_trigger_0/H_GAIN_SATURATED_FLAG]
  connect_bd_net -net data_trigger_0_H_GAIN_TDATA [get_bd_pins data_trigger_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA_IN]
  connect_bd_net -net simple_dsp_module_0_digital_baseline [get_bd_pins DIGTAL_BASELINE] [get_bd_pins simple_dsp_module_0/digital_baseline]
  connect_bd_net -net trigger_selector_0_H_GAIN_TDATA [get_bd_pins async_dataframe_gene_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins data_trigger_0/ARESET] [get_bd_pins trigger_selector_0/ARESET] [get_bd_pins util_vector_logic_0/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set M_AXIS [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS ]

  set M_AXIS_RFDAC [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC ]

  set S_AXIS_LGAIN [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_LGAIN

  set S_AXIS_RFADC [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_RFADC

  set TRIGGER_CONTROL [ create_bd_intf_port -mode Slave -vlnv awa.tohoku.ac.jp:mogura2:trigger_control_rtl:1.1 TRIGGER_CONTROL ]


  # Create ports
  set DATAFRAMEGEN_ERROR [ create_bd_port -dir O DATAFRAMEGEN_ERROR ]
  set DIGTAL_BASELINE [ create_bd_port -dir O -from 15 -to 0 -type data DIGTAL_BASELINE ]
  set EXTERNAL_TRIGGER [ create_bd_port -dir I EXTERNAL_TRIGGER ]
  set HGAIN_SATURATION [ create_bd_port -dir O HGAIN_SATURATION ]
  set MAX_TRIGGER_LENGTH [ create_bd_port -dir I -from 15 -to 0 MAX_TRIGGER_LENGTH ]
  set MODE_SWITCH_LOWER_THRESHOLD [ create_bd_port -dir I -from 15 -to 0 -type data MODE_SWITCH_LOWER_THRESHOLD ]
  set MODE_SWITCH_UPPER_THRESHOLD [ create_bd_port -dir I -from 15 -to 0 -type data MODE_SWITCH_UPPER_THRESHOLD ]
  set M_AXIS_ACLK [ create_bd_port -dir I -type clk M_AXIS_ACLK ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {300000000} \
 ] $M_AXIS_ACLK
  set M_AXIS_ARESETN [ create_bd_port -dir I -type rst M_AXIS_ARESETN ]
  set SET_CONFIG [ create_bd_port -dir I SET_CONFIG ]
  set S_AXIS_ACLK [ create_bd_port -dir I -type clk S_AXIS_ACLK ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {125000000} \
 ] $S_AXIS_ACLK
  set S_AXIS_ARESETN [ create_bd_port -dir I -type rst S_AXIS_ARESETN ]
  set TIMESTAMP [ create_bd_port -dir I -from 47 -to 0 -type data TIMESTAMP ]

  # Create instance: hardware_trigger_0
  create_hier_cell_hardware_trigger_0 [current_bd_instance .] hardware_trigger_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_ports S_AXIS_LGAIN] [get_bd_intf_pins hardware_trigger_0/S_AXIS_LGAIN]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_ports S_AXIS_RFADC] [get_bd_intf_pins hardware_trigger_0/S_AXIS_RFADC]
  connect_bd_intf_net -intf_net TRIGGER_CONTROL_1 [get_bd_intf_ports TRIGGER_CONTROL] [get_bd_intf_pins hardware_trigger_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_ports M_AXIS] [get_bd_intf_pins hardware_trigger_0/M_AXIS]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dac_m_axis [get_bd_intf_ports M_AXIS_RFDAC] [get_bd_intf_pins hardware_trigger_0/M_AXIS_RFDAC]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_ports EXTERNAL_TRIGGER] [get_bd_pins hardware_trigger_0/EXTERNAL_TRIGGER]
  connect_bd_net -net MAX_TRIGGER_LENGTH_1 [get_bd_ports MAX_TRIGGER_LENGTH] [get_bd_pins hardware_trigger_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_ports MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins hardware_trigger_0/MODE_SWITCH_LOWER_THRESHOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_ports MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins hardware_trigger_0/MODE_SWITCH_UPPER_THRESHOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_ports M_AXIS_ACLK] [get_bd_pins hardware_trigger_0/M_AXIS_ACLK]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_ports M_AXIS_ARESETN] [get_bd_pins hardware_trigger_0/M_AXIS_ARESETN]
  connect_bd_net -net SET_CONFIG_1 [get_bd_ports SET_CONFIG] [get_bd_pins hardware_trigger_0/SET_CONFIG]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_ports S_AXIS_ACLK] [get_bd_pins hardware_trigger_0/S_AXIS_ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_ports S_AXIS_ARESETN] [get_bd_pins hardware_trigger_0/S_AXIS_ARESETN]
  connect_bd_net -net TIMESTAMP_1 [get_bd_ports TIMESTAMP] [get_bd_pins hardware_trigger_0/TIMESTAMP]
  connect_bd_net -net async_dataframe_gene_0_DATAFRAME_GEN_ERROR [get_bd_ports DATAFRAMEGEN_ERROR] [get_bd_pins hardware_trigger_0/DATAFRAMEGEN_ERROR]
  connect_bd_net -net data_trigger_0_H_GAIN_SATURATED_FLAG [get_bd_ports HGAIN_SATURATION] [get_bd_pins hardware_trigger_0/HGAIN_SATURATION]
  connect_bd_net -net simple_dsp_module_0_digital_baseline [get_bd_ports DIGTAL_BASELINE] [get_bd_pins hardware_trigger_0/DIGTAL_BASELINE]

  # Create address segments


  # Restore current instance
  current_bd_instance $oldCurInst

  save_bd_design
common::send_msg_id "BD_TCL-1000" "WARNING" "This Tcl script was generated from a block design that has not been validated. It is possible that design <$design_name> may result in errors during validation."

  close_bd_design $design_name 
}
# End of cr_bd_hardware_trigger()
cr_bd_hardware_trigger ""
set_property EXCLUDE_DEBUG_LOGIC "0" [get_files hardware_trigger.bd ] 
set_property GENERATE_SYNTH_CHECKPOINT "1" [get_files hardware_trigger.bd ] 
set_property IS_ENABLED "1" [get_files hardware_trigger.bd ] 
set_property IS_GLOBAL_INCLUDE "0" [get_files hardware_trigger.bd ] 
set_property IS_LOCKED "0" [get_files hardware_trigger.bd ] 
set_property LIBRARY "xil_defaultlib" [get_files hardware_trigger.bd ] 
set_property PATH_MODE "RelativeFirst" [get_files hardware_trigger.bd ] 
set_property PFM_NAME "" [get_files hardware_trigger.bd ] 
set_property REGISTERED_WITH_MANAGER "1" [get_files hardware_trigger.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files hardware_trigger.bd ] 
set_property USED_IN "" [get_files hardware_trigger.bd ] 
set_property USED_IN_IMPLEMENTATION "0" [get_files hardware_trigger.bd ] 
set_property USED_IN_SIMULATION "0" [get_files hardware_trigger.bd ] 
set_property USED_IN_SYNTHESIS "0" [get_files hardware_trigger.bd ] 



# Proc to create BD hardware_trigger_blocks
proc cr_bd_hardware_trigger_blocks { parentCell } {

  # CHANGE DESIGN NAME HERE
  set design_name hardware_trigger_blocks

  common::send_msg_id "BD_TCL-003" "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  awa.tohoku.ac.jp:mogura2:async_pl_ddr_mmu:1.1\
  xilinx.com:ip:axi_datamover:5.1\
  xilinx.com:ip:axis_dwidth_converter:1.1\
  xilinx.com:ip:c_counter_binary:12.0\
  awa.tohoku.ac.jp:mogura2:trigger_configrator:1.0\
  xilinx.com:ip:util_vector_logic:2.0\
  xilinx.com:ip:xlconcat:2.1\
  awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1\
  awa.tohoku.ac.jp:mogura2:control_distributer:1.0\
  awa.tohoku.ac.jp:mogura2:data_trigger:1.0\
  awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0\
  awa.tohoku.ac.jp:mogura2:trigger_selector:1.0\
  "

   set list_ips_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  if { $bCheckIPsPassed != 1 } {
    common::send_msg_id "BD_TCL-1003" "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  
# Hierarchical cell: hardware_trigger_15
proc create_hier_cell_hardware_trigger_15 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_15() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv awa.tohoku.ac.jp:mogura2:trigger_control_rtl:1.1 TRIGGER_CONTROL


  # Create pins
  create_bd_pin -dir O DATAFRAMEGEN_ERROR
  create_bd_pin -dir O -from 15 -to 0 -type data DIGTAL_BASELINE
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MAX_TRIGGER_LENGTH
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I SET_CONFIG
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN
  create_bd_pin -dir I -from 47 -to 0 TIMESTAMP

  # Create instance: async_dataframe_gene_0, and set properties
  set async_dataframe_gene_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1 async_dataframe_gene_0 ]
  set_property -dict [ list \
   CONFIG.CHANNEL_ID {15} \
 ] $async_dataframe_gene_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {32} \
 ] $axis_dwidth_converter_0

  # Create instance: control_distributer_0, and set properties
  set control_distributer_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:control_distributer:1.0 control_distributer_0 ]

  # Create instance: data_trigger_0, and set properties
  set data_trigger_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:data_trigger:1.0 data_trigger_0 ]

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_blocks/hardware_trigger_15/data_trigger_0/ARESET]

  # Create instance: simple_dsp_module_0, and set properties
  set simple_dsp_module_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0 simple_dsp_module_0 ]

  # Create instance: trigger_selector_0, and set properties
  set trigger_selector_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_selector:1.0 trigger_selector_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins simple_dsp_module_0/l_s_axis]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins simple_dsp_module_0/h_s_axis]
  connect_bd_intf_net -intf_net TRIGGER_CONTROL_1 [get_bd_intf_pins TRIGGER_CONTROL] [get_bd_intf_pins control_distributer_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net async_dataframe_gene_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD1 [get_bd_intf_pins control_distributer_0/CONTROL_MOD1] [get_bd_intf_pins data_trigger_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD2 [get_bd_intf_pins control_distributer_0/CONTROL_MOD2] [get_bd_intf_pins trigger_selector_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net data_trigger_0_M_AXIS [get_bd_intf_pins data_trigger_0/M_AXIS] [get_bd_intf_pins trigger_selector_0/S_AXIS]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dac_m_axis [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins simple_dsp_module_0/dac_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dsp_m_axis [get_bd_intf_pins data_trigger_0/DSP_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/dsp_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_h_m_axis [get_bd_intf_pins data_trigger_0/H_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/h_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_l_m_axis [get_bd_intf_pins data_trigger_0/L_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/l_m_axis]
  connect_bd_intf_net -intf_net trigger_selector_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/S_AXIS] [get_bd_intf_pins trigger_selector_0/M_AXIS]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins trigger_selector_0/EXTERNAL_TRIGGER]
  connect_bd_net -net MAX_TRIGGER_LENGTH_1 [get_bd_pins MAX_TRIGGER_LENGTH] [get_bd_pins async_dataframe_gene_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_LOWER_THRESOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_UPPER_THRESOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/M_AXIS_ACLK] [get_bd_pins axis_dwidth_converter_0/aclk]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/M_AXIS_RESETN] [get_bd_pins axis_dwidth_converter_0/aresetn]
  connect_bd_net -net SET_CONFIG_1 [get_bd_pins SET_CONFIG] [get_bd_pins async_dataframe_gene_0/SET_CONFIG] [get_bd_pins data_trigger_0/SET_CONFIG] [get_bd_pins trigger_selector_0/SET_CONFIG]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/S_AXIS_ACLK] [get_bd_pins data_trigger_0/ACLK] [get_bd_pins simple_dsp_module_0/clk] [get_bd_pins trigger_selector_0/ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/S_AXIS_RESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net TIMESTAMP_1 [get_bd_pins TIMESTAMP] [get_bd_pins data_trigger_0/TIMESTAMP]
  connect_bd_net -net async_dataframe_gene_0_DATAFRAME_GEN_ERROR [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins async_dataframe_gene_0/DATAFRAME_GEN_ERROR]
  connect_bd_net -net control_distributer_0_H_GAIN_BASELINE_MOD0 [get_bd_pins control_distributer_0/H_GAIN_BASELINE_MOD0] [get_bd_pins simple_dsp_module_0/h_gain_baseline]
  connect_bd_net -net data_trigger_0_H_GAIN_SATURATED_FLAG [get_bd_pins HGAIN_SATURATION] [get_bd_pins data_trigger_0/H_GAIN_SATURATED_FLAG]
  connect_bd_net -net data_trigger_0_H_GAIN_TDATA [get_bd_pins data_trigger_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA_IN]
  connect_bd_net -net simple_dsp_module_0_digital_baseline [get_bd_pins DIGTAL_BASELINE] [get_bd_pins simple_dsp_module_0/digital_baseline]
  connect_bd_net -net trigger_selector_0_H_GAIN_TDATA [get_bd_pins async_dataframe_gene_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins data_trigger_0/ARESET] [get_bd_pins trigger_selector_0/ARESET] [get_bd_pins util_vector_logic_0/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hardware_trigger_14
proc create_hier_cell_hardware_trigger_14 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_14() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv awa.tohoku.ac.jp:mogura2:trigger_control_rtl:1.1 TRIGGER_CONTROL


  # Create pins
  create_bd_pin -dir O DATAFRAMEGEN_ERROR
  create_bd_pin -dir O -from 15 -to 0 -type data DIGTAL_BASELINE
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MAX_TRIGGER_LENGTH
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I SET_CONFIG
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN
  create_bd_pin -dir I -from 47 -to 0 TIMESTAMP

  # Create instance: async_dataframe_gene_0, and set properties
  set async_dataframe_gene_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1 async_dataframe_gene_0 ]
  set_property -dict [ list \
   CONFIG.CHANNEL_ID {14} \
 ] $async_dataframe_gene_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {32} \
 ] $axis_dwidth_converter_0

  # Create instance: control_distributer_0, and set properties
  set control_distributer_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:control_distributer:1.0 control_distributer_0 ]

  # Create instance: data_trigger_0, and set properties
  set data_trigger_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:data_trigger:1.0 data_trigger_0 ]

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_blocks/hardware_trigger_14/data_trigger_0/ARESET]

  # Create instance: simple_dsp_module_0, and set properties
  set simple_dsp_module_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0 simple_dsp_module_0 ]

  # Create instance: trigger_selector_0, and set properties
  set trigger_selector_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_selector:1.0 trigger_selector_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins simple_dsp_module_0/l_s_axis]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins simple_dsp_module_0/h_s_axis]
  connect_bd_intf_net -intf_net TRIGGER_CONTROL_1 [get_bd_intf_pins TRIGGER_CONTROL] [get_bd_intf_pins control_distributer_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net async_dataframe_gene_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD1 [get_bd_intf_pins control_distributer_0/CONTROL_MOD1] [get_bd_intf_pins data_trigger_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD2 [get_bd_intf_pins control_distributer_0/CONTROL_MOD2] [get_bd_intf_pins trigger_selector_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net data_trigger_0_M_AXIS [get_bd_intf_pins data_trigger_0/M_AXIS] [get_bd_intf_pins trigger_selector_0/S_AXIS]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dac_m_axis [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins simple_dsp_module_0/dac_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dsp_m_axis [get_bd_intf_pins data_trigger_0/DSP_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/dsp_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_h_m_axis [get_bd_intf_pins data_trigger_0/H_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/h_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_l_m_axis [get_bd_intf_pins data_trigger_0/L_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/l_m_axis]
  connect_bd_intf_net -intf_net trigger_selector_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/S_AXIS] [get_bd_intf_pins trigger_selector_0/M_AXIS]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins trigger_selector_0/EXTERNAL_TRIGGER]
  connect_bd_net -net MAX_TRIGGER_LENGTH_1 [get_bd_pins MAX_TRIGGER_LENGTH] [get_bd_pins async_dataframe_gene_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_LOWER_THRESOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_UPPER_THRESOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/M_AXIS_ACLK] [get_bd_pins axis_dwidth_converter_0/aclk]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/M_AXIS_RESETN] [get_bd_pins axis_dwidth_converter_0/aresetn]
  connect_bd_net -net SET_CONFIG_1 [get_bd_pins SET_CONFIG] [get_bd_pins async_dataframe_gene_0/SET_CONFIG] [get_bd_pins data_trigger_0/SET_CONFIG] [get_bd_pins trigger_selector_0/SET_CONFIG]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/S_AXIS_ACLK] [get_bd_pins data_trigger_0/ACLK] [get_bd_pins simple_dsp_module_0/clk] [get_bd_pins trigger_selector_0/ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/S_AXIS_RESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net TIMESTAMP_1 [get_bd_pins TIMESTAMP] [get_bd_pins data_trigger_0/TIMESTAMP]
  connect_bd_net -net async_dataframe_gene_0_DATAFRAME_GEN_ERROR [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins async_dataframe_gene_0/DATAFRAME_GEN_ERROR]
  connect_bd_net -net control_distributer_0_H_GAIN_BASELINE_MOD0 [get_bd_pins control_distributer_0/H_GAIN_BASELINE_MOD0] [get_bd_pins simple_dsp_module_0/h_gain_baseline]
  connect_bd_net -net data_trigger_0_H_GAIN_SATURATED_FLAG [get_bd_pins HGAIN_SATURATION] [get_bd_pins data_trigger_0/H_GAIN_SATURATED_FLAG]
  connect_bd_net -net data_trigger_0_H_GAIN_TDATA [get_bd_pins data_trigger_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA_IN]
  connect_bd_net -net simple_dsp_module_0_digital_baseline [get_bd_pins DIGTAL_BASELINE] [get_bd_pins simple_dsp_module_0/digital_baseline]
  connect_bd_net -net trigger_selector_0_H_GAIN_TDATA [get_bd_pins async_dataframe_gene_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins data_trigger_0/ARESET] [get_bd_pins trigger_selector_0/ARESET] [get_bd_pins util_vector_logic_0/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hardware_trigger_13
proc create_hier_cell_hardware_trigger_13 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_13() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv awa.tohoku.ac.jp:mogura2:trigger_control_rtl:1.1 TRIGGER_CONTROL


  # Create pins
  create_bd_pin -dir O DATAFRAMEGEN_ERROR
  create_bd_pin -dir O -from 15 -to 0 -type data DIGTAL_BASELINE
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MAX_TRIGGER_LENGTH
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I SET_CONFIG
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN
  create_bd_pin -dir I -from 47 -to 0 TIMESTAMP

  # Create instance: async_dataframe_gene_0, and set properties
  set async_dataframe_gene_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1 async_dataframe_gene_0 ]
  set_property -dict [ list \
   CONFIG.CHANNEL_ID {13} \
 ] $async_dataframe_gene_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {32} \
 ] $axis_dwidth_converter_0

  # Create instance: control_distributer_0, and set properties
  set control_distributer_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:control_distributer:1.0 control_distributer_0 ]

  # Create instance: data_trigger_0, and set properties
  set data_trigger_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:data_trigger:1.0 data_trigger_0 ]

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_blocks/hardware_trigger_13/data_trigger_0/ARESET]

  # Create instance: simple_dsp_module_0, and set properties
  set simple_dsp_module_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0 simple_dsp_module_0 ]

  # Create instance: trigger_selector_0, and set properties
  set trigger_selector_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_selector:1.0 trigger_selector_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins simple_dsp_module_0/l_s_axis]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins simple_dsp_module_0/h_s_axis]
  connect_bd_intf_net -intf_net TRIGGER_CONTROL_1 [get_bd_intf_pins TRIGGER_CONTROL] [get_bd_intf_pins control_distributer_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net async_dataframe_gene_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD1 [get_bd_intf_pins control_distributer_0/CONTROL_MOD1] [get_bd_intf_pins data_trigger_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD2 [get_bd_intf_pins control_distributer_0/CONTROL_MOD2] [get_bd_intf_pins trigger_selector_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net data_trigger_0_M_AXIS [get_bd_intf_pins data_trigger_0/M_AXIS] [get_bd_intf_pins trigger_selector_0/S_AXIS]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dac_m_axis [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins simple_dsp_module_0/dac_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dsp_m_axis [get_bd_intf_pins data_trigger_0/DSP_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/dsp_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_h_m_axis [get_bd_intf_pins data_trigger_0/H_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/h_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_l_m_axis [get_bd_intf_pins data_trigger_0/L_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/l_m_axis]
  connect_bd_intf_net -intf_net trigger_selector_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/S_AXIS] [get_bd_intf_pins trigger_selector_0/M_AXIS]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins trigger_selector_0/EXTERNAL_TRIGGER]
  connect_bd_net -net MAX_TRIGGER_LENGTH_1 [get_bd_pins MAX_TRIGGER_LENGTH] [get_bd_pins async_dataframe_gene_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_LOWER_THRESOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_UPPER_THRESOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/M_AXIS_ACLK] [get_bd_pins axis_dwidth_converter_0/aclk]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/M_AXIS_RESETN] [get_bd_pins axis_dwidth_converter_0/aresetn]
  connect_bd_net -net SET_CONFIG_1 [get_bd_pins SET_CONFIG] [get_bd_pins async_dataframe_gene_0/SET_CONFIG] [get_bd_pins data_trigger_0/SET_CONFIG] [get_bd_pins trigger_selector_0/SET_CONFIG]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/S_AXIS_ACLK] [get_bd_pins data_trigger_0/ACLK] [get_bd_pins simple_dsp_module_0/clk] [get_bd_pins trigger_selector_0/ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/S_AXIS_RESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net TIMESTAMP_1 [get_bd_pins TIMESTAMP] [get_bd_pins data_trigger_0/TIMESTAMP]
  connect_bd_net -net async_dataframe_gene_0_DATAFRAME_GEN_ERROR [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins async_dataframe_gene_0/DATAFRAME_GEN_ERROR]
  connect_bd_net -net control_distributer_0_H_GAIN_BASELINE_MOD0 [get_bd_pins control_distributer_0/H_GAIN_BASELINE_MOD0] [get_bd_pins simple_dsp_module_0/h_gain_baseline]
  connect_bd_net -net data_trigger_0_H_GAIN_SATURATED_FLAG [get_bd_pins HGAIN_SATURATION] [get_bd_pins data_trigger_0/H_GAIN_SATURATED_FLAG]
  connect_bd_net -net data_trigger_0_H_GAIN_TDATA [get_bd_pins data_trigger_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA_IN]
  connect_bd_net -net simple_dsp_module_0_digital_baseline [get_bd_pins DIGTAL_BASELINE] [get_bd_pins simple_dsp_module_0/digital_baseline]
  connect_bd_net -net trigger_selector_0_H_GAIN_TDATA [get_bd_pins async_dataframe_gene_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins data_trigger_0/ARESET] [get_bd_pins trigger_selector_0/ARESET] [get_bd_pins util_vector_logic_0/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hardware_trigger_12
proc create_hier_cell_hardware_trigger_12 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_12() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv awa.tohoku.ac.jp:mogura2:trigger_control_rtl:1.1 TRIGGER_CONTROL


  # Create pins
  create_bd_pin -dir O DATAFRAMEGEN_ERROR
  create_bd_pin -dir O -from 15 -to 0 -type data DIGTAL_BASELINE
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MAX_TRIGGER_LENGTH
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I SET_CONFIG
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN
  create_bd_pin -dir I -from 47 -to 0 TIMESTAMP

  # Create instance: async_dataframe_gene_0, and set properties
  set async_dataframe_gene_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1 async_dataframe_gene_0 ]
  set_property -dict [ list \
   CONFIG.CHANNEL_ID {12} \
 ] $async_dataframe_gene_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {32} \
 ] $axis_dwidth_converter_0

  # Create instance: control_distributer_0, and set properties
  set control_distributer_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:control_distributer:1.0 control_distributer_0 ]

  # Create instance: data_trigger_0, and set properties
  set data_trigger_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:data_trigger:1.0 data_trigger_0 ]

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_blocks/hardware_trigger_12/data_trigger_0/ARESET]

  # Create instance: simple_dsp_module_0, and set properties
  set simple_dsp_module_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0 simple_dsp_module_0 ]

  # Create instance: trigger_selector_0, and set properties
  set trigger_selector_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_selector:1.0 trigger_selector_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins simple_dsp_module_0/l_s_axis]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins simple_dsp_module_0/h_s_axis]
  connect_bd_intf_net -intf_net TRIGGER_CONTROL_1 [get_bd_intf_pins TRIGGER_CONTROL] [get_bd_intf_pins control_distributer_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net async_dataframe_gene_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD1 [get_bd_intf_pins control_distributer_0/CONTROL_MOD1] [get_bd_intf_pins data_trigger_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD2 [get_bd_intf_pins control_distributer_0/CONTROL_MOD2] [get_bd_intf_pins trigger_selector_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net data_trigger_0_M_AXIS [get_bd_intf_pins data_trigger_0/M_AXIS] [get_bd_intf_pins trigger_selector_0/S_AXIS]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dac_m_axis [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins simple_dsp_module_0/dac_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dsp_m_axis [get_bd_intf_pins data_trigger_0/DSP_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/dsp_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_h_m_axis [get_bd_intf_pins data_trigger_0/H_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/h_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_l_m_axis [get_bd_intf_pins data_trigger_0/L_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/l_m_axis]
  connect_bd_intf_net -intf_net trigger_selector_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/S_AXIS] [get_bd_intf_pins trigger_selector_0/M_AXIS]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins trigger_selector_0/EXTERNAL_TRIGGER]
  connect_bd_net -net MAX_TRIGGER_LENGTH_1 [get_bd_pins MAX_TRIGGER_LENGTH] [get_bd_pins async_dataframe_gene_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_LOWER_THRESOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_UPPER_THRESOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/M_AXIS_ACLK] [get_bd_pins axis_dwidth_converter_0/aclk]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/M_AXIS_RESETN] [get_bd_pins axis_dwidth_converter_0/aresetn]
  connect_bd_net -net SET_CONFIG_1 [get_bd_pins SET_CONFIG] [get_bd_pins async_dataframe_gene_0/SET_CONFIG] [get_bd_pins data_trigger_0/SET_CONFIG] [get_bd_pins trigger_selector_0/SET_CONFIG]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/S_AXIS_ACLK] [get_bd_pins data_trigger_0/ACLK] [get_bd_pins simple_dsp_module_0/clk] [get_bd_pins trigger_selector_0/ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/S_AXIS_RESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net TIMESTAMP_1 [get_bd_pins TIMESTAMP] [get_bd_pins data_trigger_0/TIMESTAMP]
  connect_bd_net -net async_dataframe_gene_0_DATAFRAME_GEN_ERROR [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins async_dataframe_gene_0/DATAFRAME_GEN_ERROR]
  connect_bd_net -net control_distributer_0_H_GAIN_BASELINE_MOD0 [get_bd_pins control_distributer_0/H_GAIN_BASELINE_MOD0] [get_bd_pins simple_dsp_module_0/h_gain_baseline]
  connect_bd_net -net data_trigger_0_H_GAIN_SATURATED_FLAG [get_bd_pins HGAIN_SATURATION] [get_bd_pins data_trigger_0/H_GAIN_SATURATED_FLAG]
  connect_bd_net -net data_trigger_0_H_GAIN_TDATA [get_bd_pins data_trigger_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA_IN]
  connect_bd_net -net simple_dsp_module_0_digital_baseline [get_bd_pins DIGTAL_BASELINE] [get_bd_pins simple_dsp_module_0/digital_baseline]
  connect_bd_net -net trigger_selector_0_H_GAIN_TDATA [get_bd_pins async_dataframe_gene_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins data_trigger_0/ARESET] [get_bd_pins trigger_selector_0/ARESET] [get_bd_pins util_vector_logic_0/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hardware_trigger_11
proc create_hier_cell_hardware_trigger_11 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_11() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv awa.tohoku.ac.jp:mogura2:trigger_control_rtl:1.1 TRIGGER_CONTROL


  # Create pins
  create_bd_pin -dir O DATAFRAMEGEN_ERROR
  create_bd_pin -dir O -from 15 -to 0 -type data DIGTAL_BASELINE
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MAX_TRIGGER_LENGTH
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I SET_CONFIG
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN
  create_bd_pin -dir I -from 47 -to 0 TIMESTAMP

  # Create instance: async_dataframe_gene_0, and set properties
  set async_dataframe_gene_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1 async_dataframe_gene_0 ]
  set_property -dict [ list \
   CONFIG.CHANNEL_ID {11} \
 ] $async_dataframe_gene_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {32} \
 ] $axis_dwidth_converter_0

  # Create instance: control_distributer_0, and set properties
  set control_distributer_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:control_distributer:1.0 control_distributer_0 ]

  # Create instance: data_trigger_0, and set properties
  set data_trigger_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:data_trigger:1.0 data_trigger_0 ]

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_blocks/hardware_trigger_11/data_trigger_0/ARESET]

  # Create instance: simple_dsp_module_0, and set properties
  set simple_dsp_module_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0 simple_dsp_module_0 ]

  # Create instance: trigger_selector_0, and set properties
  set trigger_selector_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_selector:1.0 trigger_selector_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins simple_dsp_module_0/l_s_axis]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins simple_dsp_module_0/h_s_axis]
  connect_bd_intf_net -intf_net TRIGGER_CONTROL_1 [get_bd_intf_pins TRIGGER_CONTROL] [get_bd_intf_pins control_distributer_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net async_dataframe_gene_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD1 [get_bd_intf_pins control_distributer_0/CONTROL_MOD1] [get_bd_intf_pins data_trigger_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD2 [get_bd_intf_pins control_distributer_0/CONTROL_MOD2] [get_bd_intf_pins trigger_selector_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net data_trigger_0_M_AXIS [get_bd_intf_pins data_trigger_0/M_AXIS] [get_bd_intf_pins trigger_selector_0/S_AXIS]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dac_m_axis [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins simple_dsp_module_0/dac_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dsp_m_axis [get_bd_intf_pins data_trigger_0/DSP_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/dsp_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_h_m_axis [get_bd_intf_pins data_trigger_0/H_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/h_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_l_m_axis [get_bd_intf_pins data_trigger_0/L_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/l_m_axis]
  connect_bd_intf_net -intf_net trigger_selector_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/S_AXIS] [get_bd_intf_pins trigger_selector_0/M_AXIS]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins trigger_selector_0/EXTERNAL_TRIGGER]
  connect_bd_net -net MAX_TRIGGER_LENGTH_1 [get_bd_pins MAX_TRIGGER_LENGTH] [get_bd_pins async_dataframe_gene_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_LOWER_THRESOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_UPPER_THRESOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/M_AXIS_ACLK] [get_bd_pins axis_dwidth_converter_0/aclk]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/M_AXIS_RESETN] [get_bd_pins axis_dwidth_converter_0/aresetn]
  connect_bd_net -net SET_CONFIG_1 [get_bd_pins SET_CONFIG] [get_bd_pins async_dataframe_gene_0/SET_CONFIG] [get_bd_pins data_trigger_0/SET_CONFIG] [get_bd_pins trigger_selector_0/SET_CONFIG]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/S_AXIS_ACLK] [get_bd_pins data_trigger_0/ACLK] [get_bd_pins simple_dsp_module_0/clk] [get_bd_pins trigger_selector_0/ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/S_AXIS_RESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net TIMESTAMP_1 [get_bd_pins TIMESTAMP] [get_bd_pins data_trigger_0/TIMESTAMP]
  connect_bd_net -net async_dataframe_gene_0_DATAFRAME_GEN_ERROR [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins async_dataframe_gene_0/DATAFRAME_GEN_ERROR]
  connect_bd_net -net control_distributer_0_H_GAIN_BASELINE_MOD0 [get_bd_pins control_distributer_0/H_GAIN_BASELINE_MOD0] [get_bd_pins simple_dsp_module_0/h_gain_baseline]
  connect_bd_net -net data_trigger_0_H_GAIN_SATURATED_FLAG [get_bd_pins HGAIN_SATURATION] [get_bd_pins data_trigger_0/H_GAIN_SATURATED_FLAG]
  connect_bd_net -net data_trigger_0_H_GAIN_TDATA [get_bd_pins data_trigger_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA_IN]
  connect_bd_net -net simple_dsp_module_0_digital_baseline [get_bd_pins DIGTAL_BASELINE] [get_bd_pins simple_dsp_module_0/digital_baseline]
  connect_bd_net -net trigger_selector_0_H_GAIN_TDATA [get_bd_pins async_dataframe_gene_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins data_trigger_0/ARESET] [get_bd_pins trigger_selector_0/ARESET] [get_bd_pins util_vector_logic_0/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hardware_trigger_10
proc create_hier_cell_hardware_trigger_10 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_10() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv awa.tohoku.ac.jp:mogura2:trigger_control_rtl:1.1 TRIGGER_CONTROL


  # Create pins
  create_bd_pin -dir O DATAFRAMEGEN_ERROR
  create_bd_pin -dir O -from 15 -to 0 -type data DIGTAL_BASELINE
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MAX_TRIGGER_LENGTH
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I SET_CONFIG
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN
  create_bd_pin -dir I -from 47 -to 0 TIMESTAMP

  # Create instance: async_dataframe_gene_0, and set properties
  set async_dataframe_gene_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1 async_dataframe_gene_0 ]
  set_property -dict [ list \
   CONFIG.CHANNEL_ID {10} \
 ] $async_dataframe_gene_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {32} \
 ] $axis_dwidth_converter_0

  # Create instance: control_distributer_0, and set properties
  set control_distributer_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:control_distributer:1.0 control_distributer_0 ]

  # Create instance: data_trigger_0, and set properties
  set data_trigger_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:data_trigger:1.0 data_trigger_0 ]

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_blocks/hardware_trigger_10/data_trigger_0/ARESET]

  # Create instance: simple_dsp_module_0, and set properties
  set simple_dsp_module_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0 simple_dsp_module_0 ]

  # Create instance: trigger_selector_0, and set properties
  set trigger_selector_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_selector:1.0 trigger_selector_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins simple_dsp_module_0/l_s_axis]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins simple_dsp_module_0/h_s_axis]
  connect_bd_intf_net -intf_net TRIGGER_CONTROL_1 [get_bd_intf_pins TRIGGER_CONTROL] [get_bd_intf_pins control_distributer_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net async_dataframe_gene_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD1 [get_bd_intf_pins control_distributer_0/CONTROL_MOD1] [get_bd_intf_pins data_trigger_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD2 [get_bd_intf_pins control_distributer_0/CONTROL_MOD2] [get_bd_intf_pins trigger_selector_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net data_trigger_0_M_AXIS [get_bd_intf_pins data_trigger_0/M_AXIS] [get_bd_intf_pins trigger_selector_0/S_AXIS]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dac_m_axis [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins simple_dsp_module_0/dac_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dsp_m_axis [get_bd_intf_pins data_trigger_0/DSP_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/dsp_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_h_m_axis [get_bd_intf_pins data_trigger_0/H_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/h_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_l_m_axis [get_bd_intf_pins data_trigger_0/L_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/l_m_axis]
  connect_bd_intf_net -intf_net trigger_selector_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/S_AXIS] [get_bd_intf_pins trigger_selector_0/M_AXIS]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins trigger_selector_0/EXTERNAL_TRIGGER]
  connect_bd_net -net MAX_TRIGGER_LENGTH_1 [get_bd_pins MAX_TRIGGER_LENGTH] [get_bd_pins async_dataframe_gene_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_LOWER_THRESOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_UPPER_THRESOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/M_AXIS_ACLK] [get_bd_pins axis_dwidth_converter_0/aclk]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/M_AXIS_RESETN] [get_bd_pins axis_dwidth_converter_0/aresetn]
  connect_bd_net -net SET_CONFIG_1 [get_bd_pins SET_CONFIG] [get_bd_pins async_dataframe_gene_0/SET_CONFIG] [get_bd_pins data_trigger_0/SET_CONFIG] [get_bd_pins trigger_selector_0/SET_CONFIG]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/S_AXIS_ACLK] [get_bd_pins data_trigger_0/ACLK] [get_bd_pins simple_dsp_module_0/clk] [get_bd_pins trigger_selector_0/ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/S_AXIS_RESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net TIMESTAMP_1 [get_bd_pins TIMESTAMP] [get_bd_pins data_trigger_0/TIMESTAMP]
  connect_bd_net -net async_dataframe_gene_0_DATAFRAME_GEN_ERROR [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins async_dataframe_gene_0/DATAFRAME_GEN_ERROR]
  connect_bd_net -net control_distributer_0_H_GAIN_BASELINE_MOD0 [get_bd_pins control_distributer_0/H_GAIN_BASELINE_MOD0] [get_bd_pins simple_dsp_module_0/h_gain_baseline]
  connect_bd_net -net data_trigger_0_H_GAIN_SATURATED_FLAG [get_bd_pins HGAIN_SATURATION] [get_bd_pins data_trigger_0/H_GAIN_SATURATED_FLAG]
  connect_bd_net -net data_trigger_0_H_GAIN_TDATA [get_bd_pins data_trigger_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA_IN]
  connect_bd_net -net simple_dsp_module_0_digital_baseline [get_bd_pins DIGTAL_BASELINE] [get_bd_pins simple_dsp_module_0/digital_baseline]
  connect_bd_net -net trigger_selector_0_H_GAIN_TDATA [get_bd_pins async_dataframe_gene_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins data_trigger_0/ARESET] [get_bd_pins trigger_selector_0/ARESET] [get_bd_pins util_vector_logic_0/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hardware_trigger_9
proc create_hier_cell_hardware_trigger_9 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_9() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv awa.tohoku.ac.jp:mogura2:trigger_control_rtl:1.1 TRIGGER_CONTROL


  # Create pins
  create_bd_pin -dir O DATAFRAMEGEN_ERROR
  create_bd_pin -dir O -from 15 -to 0 -type data DIGTAL_BASELINE
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MAX_TRIGGER_LENGTH
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I SET_CONFIG
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN
  create_bd_pin -dir I -from 47 -to 0 TIMESTAMP

  # Create instance: async_dataframe_gene_0, and set properties
  set async_dataframe_gene_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1 async_dataframe_gene_0 ]
  set_property -dict [ list \
   CONFIG.CHANNEL_ID {9} \
 ] $async_dataframe_gene_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {32} \
 ] $axis_dwidth_converter_0

  # Create instance: control_distributer_0, and set properties
  set control_distributer_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:control_distributer:1.0 control_distributer_0 ]

  # Create instance: data_trigger_0, and set properties
  set data_trigger_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:data_trigger:1.0 data_trigger_0 ]

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_blocks/hardware_trigger_9/data_trigger_0/ARESET]

  # Create instance: simple_dsp_module_0, and set properties
  set simple_dsp_module_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0 simple_dsp_module_0 ]

  # Create instance: trigger_selector_0, and set properties
  set trigger_selector_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_selector:1.0 trigger_selector_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins simple_dsp_module_0/l_s_axis]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins simple_dsp_module_0/h_s_axis]
  connect_bd_intf_net -intf_net TRIGGER_CONTROL_1 [get_bd_intf_pins TRIGGER_CONTROL] [get_bd_intf_pins control_distributer_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net async_dataframe_gene_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD1 [get_bd_intf_pins control_distributer_0/CONTROL_MOD1] [get_bd_intf_pins data_trigger_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD2 [get_bd_intf_pins control_distributer_0/CONTROL_MOD2] [get_bd_intf_pins trigger_selector_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net data_trigger_0_M_AXIS [get_bd_intf_pins data_trigger_0/M_AXIS] [get_bd_intf_pins trigger_selector_0/S_AXIS]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dac_m_axis [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins simple_dsp_module_0/dac_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dsp_m_axis [get_bd_intf_pins data_trigger_0/DSP_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/dsp_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_h_m_axis [get_bd_intf_pins data_trigger_0/H_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/h_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_l_m_axis [get_bd_intf_pins data_trigger_0/L_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/l_m_axis]
  connect_bd_intf_net -intf_net trigger_selector_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/S_AXIS] [get_bd_intf_pins trigger_selector_0/M_AXIS]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins trigger_selector_0/EXTERNAL_TRIGGER]
  connect_bd_net -net MAX_TRIGGER_LENGTH_1 [get_bd_pins MAX_TRIGGER_LENGTH] [get_bd_pins async_dataframe_gene_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_LOWER_THRESOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_UPPER_THRESOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/M_AXIS_ACLK] [get_bd_pins axis_dwidth_converter_0/aclk]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/M_AXIS_RESETN] [get_bd_pins axis_dwidth_converter_0/aresetn]
  connect_bd_net -net SET_CONFIG_1 [get_bd_pins SET_CONFIG] [get_bd_pins async_dataframe_gene_0/SET_CONFIG] [get_bd_pins data_trigger_0/SET_CONFIG] [get_bd_pins trigger_selector_0/SET_CONFIG]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/S_AXIS_ACLK] [get_bd_pins data_trigger_0/ACLK] [get_bd_pins simple_dsp_module_0/clk] [get_bd_pins trigger_selector_0/ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/S_AXIS_RESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net TIMESTAMP_1 [get_bd_pins TIMESTAMP] [get_bd_pins data_trigger_0/TIMESTAMP]
  connect_bd_net -net async_dataframe_gene_0_DATAFRAME_GEN_ERROR [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins async_dataframe_gene_0/DATAFRAME_GEN_ERROR]
  connect_bd_net -net control_distributer_0_H_GAIN_BASELINE_MOD0 [get_bd_pins control_distributer_0/H_GAIN_BASELINE_MOD0] [get_bd_pins simple_dsp_module_0/h_gain_baseline]
  connect_bd_net -net data_trigger_0_H_GAIN_SATURATED_FLAG [get_bd_pins HGAIN_SATURATION] [get_bd_pins data_trigger_0/H_GAIN_SATURATED_FLAG]
  connect_bd_net -net data_trigger_0_H_GAIN_TDATA [get_bd_pins data_trigger_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA_IN]
  connect_bd_net -net simple_dsp_module_0_digital_baseline [get_bd_pins DIGTAL_BASELINE] [get_bd_pins simple_dsp_module_0/digital_baseline]
  connect_bd_net -net trigger_selector_0_H_GAIN_TDATA [get_bd_pins async_dataframe_gene_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins data_trigger_0/ARESET] [get_bd_pins trigger_selector_0/ARESET] [get_bd_pins util_vector_logic_0/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hardware_trigger_8
proc create_hier_cell_hardware_trigger_8 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_8() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv awa.tohoku.ac.jp:mogura2:trigger_control_rtl:1.1 TRIGGER_CONTROL


  # Create pins
  create_bd_pin -dir O DATAFRAMEGEN_ERROR
  create_bd_pin -dir O -from 15 -to 0 -type data DIGTAL_BASELINE
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MAX_TRIGGER_LENGTH
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I SET_CONFIG
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN
  create_bd_pin -dir I -from 47 -to 0 TIMESTAMP

  # Create instance: async_dataframe_gene_0, and set properties
  set async_dataframe_gene_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1 async_dataframe_gene_0 ]
  set_property -dict [ list \
   CONFIG.CHANNEL_ID {8} \
 ] $async_dataframe_gene_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {32} \
 ] $axis_dwidth_converter_0

  # Create instance: control_distributer_0, and set properties
  set control_distributer_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:control_distributer:1.0 control_distributer_0 ]

  # Create instance: data_trigger_0, and set properties
  set data_trigger_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:data_trigger:1.0 data_trigger_0 ]

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_blocks/hardware_trigger_8/data_trigger_0/ARESET]

  # Create instance: simple_dsp_module_0, and set properties
  set simple_dsp_module_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0 simple_dsp_module_0 ]

  # Create instance: trigger_selector_0, and set properties
  set trigger_selector_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_selector:1.0 trigger_selector_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins simple_dsp_module_0/l_s_axis]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins simple_dsp_module_0/h_s_axis]
  connect_bd_intf_net -intf_net TRIGGER_CONTROL_1 [get_bd_intf_pins TRIGGER_CONTROL] [get_bd_intf_pins control_distributer_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net async_dataframe_gene_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD1 [get_bd_intf_pins control_distributer_0/CONTROL_MOD1] [get_bd_intf_pins data_trigger_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD2 [get_bd_intf_pins control_distributer_0/CONTROL_MOD2] [get_bd_intf_pins trigger_selector_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net data_trigger_0_M_AXIS [get_bd_intf_pins data_trigger_0/M_AXIS] [get_bd_intf_pins trigger_selector_0/S_AXIS]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dac_m_axis [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins simple_dsp_module_0/dac_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dsp_m_axis [get_bd_intf_pins data_trigger_0/DSP_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/dsp_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_h_m_axis [get_bd_intf_pins data_trigger_0/H_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/h_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_l_m_axis [get_bd_intf_pins data_trigger_0/L_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/l_m_axis]
  connect_bd_intf_net -intf_net trigger_selector_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/S_AXIS] [get_bd_intf_pins trigger_selector_0/M_AXIS]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins trigger_selector_0/EXTERNAL_TRIGGER]
  connect_bd_net -net MAX_TRIGGER_LENGTH_1 [get_bd_pins MAX_TRIGGER_LENGTH] [get_bd_pins async_dataframe_gene_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_LOWER_THRESOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_UPPER_THRESOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/M_AXIS_ACLK] [get_bd_pins axis_dwidth_converter_0/aclk]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/M_AXIS_RESETN] [get_bd_pins axis_dwidth_converter_0/aresetn]
  connect_bd_net -net SET_CONFIG_1 [get_bd_pins SET_CONFIG] [get_bd_pins async_dataframe_gene_0/SET_CONFIG] [get_bd_pins data_trigger_0/SET_CONFIG] [get_bd_pins trigger_selector_0/SET_CONFIG]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/S_AXIS_ACLK] [get_bd_pins data_trigger_0/ACLK] [get_bd_pins simple_dsp_module_0/clk] [get_bd_pins trigger_selector_0/ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/S_AXIS_RESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net TIMESTAMP_1 [get_bd_pins TIMESTAMP] [get_bd_pins data_trigger_0/TIMESTAMP]
  connect_bd_net -net async_dataframe_gene_0_DATAFRAME_GEN_ERROR [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins async_dataframe_gene_0/DATAFRAME_GEN_ERROR]
  connect_bd_net -net control_distributer_0_H_GAIN_BASELINE_MOD0 [get_bd_pins control_distributer_0/H_GAIN_BASELINE_MOD0] [get_bd_pins simple_dsp_module_0/h_gain_baseline]
  connect_bd_net -net data_trigger_0_H_GAIN_SATURATED_FLAG [get_bd_pins HGAIN_SATURATION] [get_bd_pins data_trigger_0/H_GAIN_SATURATED_FLAG]
  connect_bd_net -net data_trigger_0_H_GAIN_TDATA [get_bd_pins data_trigger_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA_IN]
  connect_bd_net -net simple_dsp_module_0_digital_baseline [get_bd_pins DIGTAL_BASELINE] [get_bd_pins simple_dsp_module_0/digital_baseline]
  connect_bd_net -net trigger_selector_0_H_GAIN_TDATA [get_bd_pins async_dataframe_gene_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins data_trigger_0/ARESET] [get_bd_pins trigger_selector_0/ARESET] [get_bd_pins util_vector_logic_0/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hardware_trigger_7
proc create_hier_cell_hardware_trigger_7 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_7() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv awa.tohoku.ac.jp:mogura2:trigger_control_rtl:1.1 TRIGGER_CONTROL


  # Create pins
  create_bd_pin -dir O DATAFRAMEGEN_ERROR
  create_bd_pin -dir O -from 15 -to 0 -type data DIGTAL_BASELINE
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MAX_TRIGGER_LENGTH
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I SET_CONFIG
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN
  create_bd_pin -dir I -from 47 -to 0 TIMESTAMP

  # Create instance: async_dataframe_gene_0, and set properties
  set async_dataframe_gene_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1 async_dataframe_gene_0 ]
  set_property -dict [ list \
   CONFIG.CHANNEL_ID {7} \
 ] $async_dataframe_gene_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {32} \
 ] $axis_dwidth_converter_0

  # Create instance: control_distributer_0, and set properties
  set control_distributer_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:control_distributer:1.0 control_distributer_0 ]

  # Create instance: data_trigger_0, and set properties
  set data_trigger_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:data_trigger:1.0 data_trigger_0 ]

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_blocks/hardware_trigger_7/data_trigger_0/ARESET]

  # Create instance: simple_dsp_module_0, and set properties
  set simple_dsp_module_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0 simple_dsp_module_0 ]

  # Create instance: trigger_selector_0, and set properties
  set trigger_selector_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_selector:1.0 trigger_selector_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins simple_dsp_module_0/l_s_axis]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins simple_dsp_module_0/h_s_axis]
  connect_bd_intf_net -intf_net TRIGGER_CONTROL_1 [get_bd_intf_pins TRIGGER_CONTROL] [get_bd_intf_pins control_distributer_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net async_dataframe_gene_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD1 [get_bd_intf_pins control_distributer_0/CONTROL_MOD1] [get_bd_intf_pins data_trigger_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD2 [get_bd_intf_pins control_distributer_0/CONTROL_MOD2] [get_bd_intf_pins trigger_selector_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net data_trigger_0_M_AXIS [get_bd_intf_pins data_trigger_0/M_AXIS] [get_bd_intf_pins trigger_selector_0/S_AXIS]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dac_m_axis [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins simple_dsp_module_0/dac_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dsp_m_axis [get_bd_intf_pins data_trigger_0/DSP_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/dsp_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_h_m_axis [get_bd_intf_pins data_trigger_0/H_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/h_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_l_m_axis [get_bd_intf_pins data_trigger_0/L_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/l_m_axis]
  connect_bd_intf_net -intf_net trigger_selector_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/S_AXIS] [get_bd_intf_pins trigger_selector_0/M_AXIS]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins trigger_selector_0/EXTERNAL_TRIGGER]
  connect_bd_net -net MAX_TRIGGER_LENGTH_1 [get_bd_pins MAX_TRIGGER_LENGTH] [get_bd_pins async_dataframe_gene_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_LOWER_THRESOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_UPPER_THRESOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/M_AXIS_ACLK] [get_bd_pins axis_dwidth_converter_0/aclk]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/M_AXIS_RESETN] [get_bd_pins axis_dwidth_converter_0/aresetn]
  connect_bd_net -net SET_CONFIG_1 [get_bd_pins SET_CONFIG] [get_bd_pins async_dataframe_gene_0/SET_CONFIG] [get_bd_pins data_trigger_0/SET_CONFIG] [get_bd_pins trigger_selector_0/SET_CONFIG]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/S_AXIS_ACLK] [get_bd_pins data_trigger_0/ACLK] [get_bd_pins simple_dsp_module_0/clk] [get_bd_pins trigger_selector_0/ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/S_AXIS_RESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net TIMESTAMP_1 [get_bd_pins TIMESTAMP] [get_bd_pins data_trigger_0/TIMESTAMP]
  connect_bd_net -net async_dataframe_gene_0_DATAFRAME_GEN_ERROR [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins async_dataframe_gene_0/DATAFRAME_GEN_ERROR]
  connect_bd_net -net control_distributer_0_H_GAIN_BASELINE_MOD0 [get_bd_pins control_distributer_0/H_GAIN_BASELINE_MOD0] [get_bd_pins simple_dsp_module_0/h_gain_baseline]
  connect_bd_net -net data_trigger_0_H_GAIN_SATURATED_FLAG [get_bd_pins HGAIN_SATURATION] [get_bd_pins data_trigger_0/H_GAIN_SATURATED_FLAG]
  connect_bd_net -net data_trigger_0_H_GAIN_TDATA [get_bd_pins data_trigger_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA_IN]
  connect_bd_net -net simple_dsp_module_0_digital_baseline [get_bd_pins DIGTAL_BASELINE] [get_bd_pins simple_dsp_module_0/digital_baseline]
  connect_bd_net -net trigger_selector_0_H_GAIN_TDATA [get_bd_pins async_dataframe_gene_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins data_trigger_0/ARESET] [get_bd_pins trigger_selector_0/ARESET] [get_bd_pins util_vector_logic_0/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hardware_trigger_6
proc create_hier_cell_hardware_trigger_6 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_6() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv awa.tohoku.ac.jp:mogura2:trigger_control_rtl:1.1 TRIGGER_CONTROL


  # Create pins
  create_bd_pin -dir O DATAFRAMEGEN_ERROR
  create_bd_pin -dir O -from 15 -to 0 -type data DIGTAL_BASELINE
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MAX_TRIGGER_LENGTH
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I SET_CONFIG
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN
  create_bd_pin -dir I -from 47 -to 0 TIMESTAMP

  # Create instance: async_dataframe_gene_0, and set properties
  set async_dataframe_gene_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1 async_dataframe_gene_0 ]
  set_property -dict [ list \
   CONFIG.CHANNEL_ID {6} \
 ] $async_dataframe_gene_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {32} \
 ] $axis_dwidth_converter_0

  # Create instance: control_distributer_0, and set properties
  set control_distributer_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:control_distributer:1.0 control_distributer_0 ]

  # Create instance: data_trigger_0, and set properties
  set data_trigger_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:data_trigger:1.0 data_trigger_0 ]

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_blocks/hardware_trigger_6/data_trigger_0/ARESET]

  # Create instance: simple_dsp_module_0, and set properties
  set simple_dsp_module_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0 simple_dsp_module_0 ]

  # Create instance: trigger_selector_0, and set properties
  set trigger_selector_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_selector:1.0 trigger_selector_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins simple_dsp_module_0/l_s_axis]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins simple_dsp_module_0/h_s_axis]
  connect_bd_intf_net -intf_net TRIGGER_CONTROL_1 [get_bd_intf_pins TRIGGER_CONTROL] [get_bd_intf_pins control_distributer_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net async_dataframe_gene_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD1 [get_bd_intf_pins control_distributer_0/CONTROL_MOD1] [get_bd_intf_pins data_trigger_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD2 [get_bd_intf_pins control_distributer_0/CONTROL_MOD2] [get_bd_intf_pins trigger_selector_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net data_trigger_0_M_AXIS [get_bd_intf_pins data_trigger_0/M_AXIS] [get_bd_intf_pins trigger_selector_0/S_AXIS]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dac_m_axis [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins simple_dsp_module_0/dac_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dsp_m_axis [get_bd_intf_pins data_trigger_0/DSP_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/dsp_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_h_m_axis [get_bd_intf_pins data_trigger_0/H_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/h_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_l_m_axis [get_bd_intf_pins data_trigger_0/L_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/l_m_axis]
  connect_bd_intf_net -intf_net trigger_selector_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/S_AXIS] [get_bd_intf_pins trigger_selector_0/M_AXIS]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins trigger_selector_0/EXTERNAL_TRIGGER]
  connect_bd_net -net MAX_TRIGGER_LENGTH_1 [get_bd_pins MAX_TRIGGER_LENGTH] [get_bd_pins async_dataframe_gene_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_LOWER_THRESOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_UPPER_THRESOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/M_AXIS_ACLK] [get_bd_pins axis_dwidth_converter_0/aclk]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/M_AXIS_RESETN] [get_bd_pins axis_dwidth_converter_0/aresetn]
  connect_bd_net -net SET_CONFIG_1 [get_bd_pins SET_CONFIG] [get_bd_pins async_dataframe_gene_0/SET_CONFIG] [get_bd_pins data_trigger_0/SET_CONFIG] [get_bd_pins trigger_selector_0/SET_CONFIG]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/S_AXIS_ACLK] [get_bd_pins data_trigger_0/ACLK] [get_bd_pins simple_dsp_module_0/clk] [get_bd_pins trigger_selector_0/ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/S_AXIS_RESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net TIMESTAMP_1 [get_bd_pins TIMESTAMP] [get_bd_pins data_trigger_0/TIMESTAMP]
  connect_bd_net -net async_dataframe_gene_0_DATAFRAME_GEN_ERROR [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins async_dataframe_gene_0/DATAFRAME_GEN_ERROR]
  connect_bd_net -net control_distributer_0_H_GAIN_BASELINE_MOD0 [get_bd_pins control_distributer_0/H_GAIN_BASELINE_MOD0] [get_bd_pins simple_dsp_module_0/h_gain_baseline]
  connect_bd_net -net data_trigger_0_H_GAIN_SATURATED_FLAG [get_bd_pins HGAIN_SATURATION] [get_bd_pins data_trigger_0/H_GAIN_SATURATED_FLAG]
  connect_bd_net -net data_trigger_0_H_GAIN_TDATA [get_bd_pins data_trigger_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA_IN]
  connect_bd_net -net simple_dsp_module_0_digital_baseline [get_bd_pins DIGTAL_BASELINE] [get_bd_pins simple_dsp_module_0/digital_baseline]
  connect_bd_net -net trigger_selector_0_H_GAIN_TDATA [get_bd_pins async_dataframe_gene_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins data_trigger_0/ARESET] [get_bd_pins trigger_selector_0/ARESET] [get_bd_pins util_vector_logic_0/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hardware_trigger_5
proc create_hier_cell_hardware_trigger_5 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_5() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv awa.tohoku.ac.jp:mogura2:trigger_control_rtl:1.1 TRIGGER_CONTROL


  # Create pins
  create_bd_pin -dir O DATAFRAMEGEN_ERROR
  create_bd_pin -dir O -from 15 -to 0 -type data DIGTAL_BASELINE
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MAX_TRIGGER_LENGTH
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I SET_CONFIG
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN
  create_bd_pin -dir I -from 47 -to 0 TIMESTAMP

  # Create instance: async_dataframe_gene_0, and set properties
  set async_dataframe_gene_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1 async_dataframe_gene_0 ]
  set_property -dict [ list \
   CONFIG.CHANNEL_ID {5} \
 ] $async_dataframe_gene_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {32} \
 ] $axis_dwidth_converter_0

  # Create instance: control_distributer_0, and set properties
  set control_distributer_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:control_distributer:1.0 control_distributer_0 ]

  # Create instance: data_trigger_0, and set properties
  set data_trigger_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:data_trigger:1.0 data_trigger_0 ]

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_blocks/hardware_trigger_5/data_trigger_0/ARESET]

  # Create instance: simple_dsp_module_0, and set properties
  set simple_dsp_module_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0 simple_dsp_module_0 ]

  # Create instance: trigger_selector_0, and set properties
  set trigger_selector_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_selector:1.0 trigger_selector_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins simple_dsp_module_0/l_s_axis]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins simple_dsp_module_0/h_s_axis]
  connect_bd_intf_net -intf_net TRIGGER_CONTROL_1 [get_bd_intf_pins TRIGGER_CONTROL] [get_bd_intf_pins control_distributer_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net async_dataframe_gene_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD1 [get_bd_intf_pins control_distributer_0/CONTROL_MOD1] [get_bd_intf_pins data_trigger_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD2 [get_bd_intf_pins control_distributer_0/CONTROL_MOD2] [get_bd_intf_pins trigger_selector_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net data_trigger_0_M_AXIS [get_bd_intf_pins data_trigger_0/M_AXIS] [get_bd_intf_pins trigger_selector_0/S_AXIS]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dac_m_axis [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins simple_dsp_module_0/dac_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dsp_m_axis [get_bd_intf_pins data_trigger_0/DSP_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/dsp_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_h_m_axis [get_bd_intf_pins data_trigger_0/H_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/h_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_l_m_axis [get_bd_intf_pins data_trigger_0/L_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/l_m_axis]
  connect_bd_intf_net -intf_net trigger_selector_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/S_AXIS] [get_bd_intf_pins trigger_selector_0/M_AXIS]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins trigger_selector_0/EXTERNAL_TRIGGER]
  connect_bd_net -net MAX_TRIGGER_LENGTH_1 [get_bd_pins MAX_TRIGGER_LENGTH] [get_bd_pins async_dataframe_gene_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_LOWER_THRESOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_UPPER_THRESOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/M_AXIS_ACLK] [get_bd_pins axis_dwidth_converter_0/aclk]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/M_AXIS_RESETN] [get_bd_pins axis_dwidth_converter_0/aresetn]
  connect_bd_net -net SET_CONFIG_1 [get_bd_pins SET_CONFIG] [get_bd_pins async_dataframe_gene_0/SET_CONFIG] [get_bd_pins data_trigger_0/SET_CONFIG] [get_bd_pins trigger_selector_0/SET_CONFIG]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/S_AXIS_ACLK] [get_bd_pins data_trigger_0/ACLK] [get_bd_pins simple_dsp_module_0/clk] [get_bd_pins trigger_selector_0/ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/S_AXIS_RESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net TIMESTAMP_1 [get_bd_pins TIMESTAMP] [get_bd_pins data_trigger_0/TIMESTAMP]
  connect_bd_net -net async_dataframe_gene_0_DATAFRAME_GEN_ERROR [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins async_dataframe_gene_0/DATAFRAME_GEN_ERROR]
  connect_bd_net -net control_distributer_0_H_GAIN_BASELINE_MOD0 [get_bd_pins control_distributer_0/H_GAIN_BASELINE_MOD0] [get_bd_pins simple_dsp_module_0/h_gain_baseline]
  connect_bd_net -net data_trigger_0_H_GAIN_SATURATED_FLAG [get_bd_pins HGAIN_SATURATION] [get_bd_pins data_trigger_0/H_GAIN_SATURATED_FLAG]
  connect_bd_net -net data_trigger_0_H_GAIN_TDATA [get_bd_pins data_trigger_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA_IN]
  connect_bd_net -net simple_dsp_module_0_digital_baseline [get_bd_pins DIGTAL_BASELINE] [get_bd_pins simple_dsp_module_0/digital_baseline]
  connect_bd_net -net trigger_selector_0_H_GAIN_TDATA [get_bd_pins async_dataframe_gene_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins data_trigger_0/ARESET] [get_bd_pins trigger_selector_0/ARESET] [get_bd_pins util_vector_logic_0/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hardware_trigger_4
proc create_hier_cell_hardware_trigger_4 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_4() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv awa.tohoku.ac.jp:mogura2:trigger_control_rtl:1.1 TRIGGER_CONTROL


  # Create pins
  create_bd_pin -dir O DATAFRAMEGEN_ERROR
  create_bd_pin -dir O -from 15 -to 0 -type data DIGTAL_BASELINE
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MAX_TRIGGER_LENGTH
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I SET_CONFIG
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN
  create_bd_pin -dir I -from 47 -to 0 TIMESTAMP

  # Create instance: async_dataframe_gene_0, and set properties
  set async_dataframe_gene_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1 async_dataframe_gene_0 ]
  set_property -dict [ list \
   CONFIG.CHANNEL_ID {4} \
 ] $async_dataframe_gene_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {32} \
 ] $axis_dwidth_converter_0

  # Create instance: control_distributer_0, and set properties
  set control_distributer_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:control_distributer:1.0 control_distributer_0 ]

  # Create instance: data_trigger_0, and set properties
  set data_trigger_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:data_trigger:1.0 data_trigger_0 ]

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_blocks/hardware_trigger_4/data_trigger_0/ARESET]

  # Create instance: simple_dsp_module_0, and set properties
  set simple_dsp_module_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0 simple_dsp_module_0 ]

  # Create instance: trigger_selector_0, and set properties
  set trigger_selector_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_selector:1.0 trigger_selector_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins simple_dsp_module_0/l_s_axis]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins simple_dsp_module_0/h_s_axis]
  connect_bd_intf_net -intf_net TRIGGER_CONTROL_1 [get_bd_intf_pins TRIGGER_CONTROL] [get_bd_intf_pins control_distributer_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net async_dataframe_gene_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD1 [get_bd_intf_pins control_distributer_0/CONTROL_MOD1] [get_bd_intf_pins data_trigger_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD2 [get_bd_intf_pins control_distributer_0/CONTROL_MOD2] [get_bd_intf_pins trigger_selector_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net data_trigger_0_M_AXIS [get_bd_intf_pins data_trigger_0/M_AXIS] [get_bd_intf_pins trigger_selector_0/S_AXIS]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dac_m_axis [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins simple_dsp_module_0/dac_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dsp_m_axis [get_bd_intf_pins data_trigger_0/DSP_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/dsp_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_h_m_axis [get_bd_intf_pins data_trigger_0/H_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/h_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_l_m_axis [get_bd_intf_pins data_trigger_0/L_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/l_m_axis]
  connect_bd_intf_net -intf_net trigger_selector_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/S_AXIS] [get_bd_intf_pins trigger_selector_0/M_AXIS]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins trigger_selector_0/EXTERNAL_TRIGGER]
  connect_bd_net -net MAX_TRIGGER_LENGTH_1 [get_bd_pins MAX_TRIGGER_LENGTH] [get_bd_pins async_dataframe_gene_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_LOWER_THRESOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_UPPER_THRESOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/M_AXIS_ACLK] [get_bd_pins axis_dwidth_converter_0/aclk]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/M_AXIS_RESETN] [get_bd_pins axis_dwidth_converter_0/aresetn]
  connect_bd_net -net SET_CONFIG_1 [get_bd_pins SET_CONFIG] [get_bd_pins async_dataframe_gene_0/SET_CONFIG] [get_bd_pins data_trigger_0/SET_CONFIG] [get_bd_pins trigger_selector_0/SET_CONFIG]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/S_AXIS_ACLK] [get_bd_pins data_trigger_0/ACLK] [get_bd_pins simple_dsp_module_0/clk] [get_bd_pins trigger_selector_0/ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/S_AXIS_RESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net TIMESTAMP_1 [get_bd_pins TIMESTAMP] [get_bd_pins data_trigger_0/TIMESTAMP]
  connect_bd_net -net async_dataframe_gene_0_DATAFRAME_GEN_ERROR [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins async_dataframe_gene_0/DATAFRAME_GEN_ERROR]
  connect_bd_net -net control_distributer_0_H_GAIN_BASELINE_MOD0 [get_bd_pins control_distributer_0/H_GAIN_BASELINE_MOD0] [get_bd_pins simple_dsp_module_0/h_gain_baseline]
  connect_bd_net -net data_trigger_0_H_GAIN_SATURATED_FLAG [get_bd_pins HGAIN_SATURATION] [get_bd_pins data_trigger_0/H_GAIN_SATURATED_FLAG]
  connect_bd_net -net data_trigger_0_H_GAIN_TDATA [get_bd_pins data_trigger_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA_IN]
  connect_bd_net -net simple_dsp_module_0_digital_baseline [get_bd_pins DIGTAL_BASELINE] [get_bd_pins simple_dsp_module_0/digital_baseline]
  connect_bd_net -net trigger_selector_0_H_GAIN_TDATA [get_bd_pins async_dataframe_gene_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins data_trigger_0/ARESET] [get_bd_pins trigger_selector_0/ARESET] [get_bd_pins util_vector_logic_0/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hardware_trigger_3
proc create_hier_cell_hardware_trigger_3 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_3() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv awa.tohoku.ac.jp:mogura2:trigger_control_rtl:1.1 TRIGGER_CONTROL


  # Create pins
  create_bd_pin -dir O DATAFRAMEGEN_ERROR
  create_bd_pin -dir O -from 15 -to 0 -type data DIGTAL_BASELINE
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MAX_TRIGGER_LENGTH
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I SET_CONFIG
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN
  create_bd_pin -dir I -from 47 -to 0 TIMESTAMP

  # Create instance: async_dataframe_gene_0, and set properties
  set async_dataframe_gene_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1 async_dataframe_gene_0 ]
  set_property -dict [ list \
   CONFIG.CHANNEL_ID {3} \
 ] $async_dataframe_gene_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {32} \
 ] $axis_dwidth_converter_0

  # Create instance: control_distributer_0, and set properties
  set control_distributer_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:control_distributer:1.0 control_distributer_0 ]

  # Create instance: data_trigger_0, and set properties
  set data_trigger_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:data_trigger:1.0 data_trigger_0 ]

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_blocks/hardware_trigger_3/data_trigger_0/ARESET]

  # Create instance: simple_dsp_module_0, and set properties
  set simple_dsp_module_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0 simple_dsp_module_0 ]

  # Create instance: trigger_selector_0, and set properties
  set trigger_selector_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_selector:1.0 trigger_selector_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins simple_dsp_module_0/l_s_axis]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins simple_dsp_module_0/h_s_axis]
  connect_bd_intf_net -intf_net TRIGGER_CONTROL_1 [get_bd_intf_pins TRIGGER_CONTROL] [get_bd_intf_pins control_distributer_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net async_dataframe_gene_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD1 [get_bd_intf_pins control_distributer_0/CONTROL_MOD1] [get_bd_intf_pins data_trigger_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD2 [get_bd_intf_pins control_distributer_0/CONTROL_MOD2] [get_bd_intf_pins trigger_selector_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net data_trigger_0_M_AXIS [get_bd_intf_pins data_trigger_0/M_AXIS] [get_bd_intf_pins trigger_selector_0/S_AXIS]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dac_m_axis [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins simple_dsp_module_0/dac_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dsp_m_axis [get_bd_intf_pins data_trigger_0/DSP_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/dsp_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_h_m_axis [get_bd_intf_pins data_trigger_0/H_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/h_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_l_m_axis [get_bd_intf_pins data_trigger_0/L_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/l_m_axis]
  connect_bd_intf_net -intf_net trigger_selector_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/S_AXIS] [get_bd_intf_pins trigger_selector_0/M_AXIS]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins trigger_selector_0/EXTERNAL_TRIGGER]
  connect_bd_net -net MAX_TRIGGER_LENGTH_1 [get_bd_pins MAX_TRIGGER_LENGTH] [get_bd_pins async_dataframe_gene_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_LOWER_THRESOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_UPPER_THRESOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/M_AXIS_ACLK] [get_bd_pins axis_dwidth_converter_0/aclk]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/M_AXIS_RESETN] [get_bd_pins axis_dwidth_converter_0/aresetn]
  connect_bd_net -net SET_CONFIG_1 [get_bd_pins SET_CONFIG] [get_bd_pins async_dataframe_gene_0/SET_CONFIG] [get_bd_pins data_trigger_0/SET_CONFIG] [get_bd_pins trigger_selector_0/SET_CONFIG]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/S_AXIS_ACLK] [get_bd_pins data_trigger_0/ACLK] [get_bd_pins simple_dsp_module_0/clk] [get_bd_pins trigger_selector_0/ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/S_AXIS_RESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net TIMESTAMP_1 [get_bd_pins TIMESTAMP] [get_bd_pins data_trigger_0/TIMESTAMP]
  connect_bd_net -net async_dataframe_gene_0_DATAFRAME_GEN_ERROR [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins async_dataframe_gene_0/DATAFRAME_GEN_ERROR]
  connect_bd_net -net control_distributer_0_H_GAIN_BASELINE_MOD0 [get_bd_pins control_distributer_0/H_GAIN_BASELINE_MOD0] [get_bd_pins simple_dsp_module_0/h_gain_baseline]
  connect_bd_net -net data_trigger_0_H_GAIN_SATURATED_FLAG [get_bd_pins HGAIN_SATURATION] [get_bd_pins data_trigger_0/H_GAIN_SATURATED_FLAG]
  connect_bd_net -net data_trigger_0_H_GAIN_TDATA [get_bd_pins data_trigger_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA_IN]
  connect_bd_net -net simple_dsp_module_0_digital_baseline [get_bd_pins DIGTAL_BASELINE] [get_bd_pins simple_dsp_module_0/digital_baseline]
  connect_bd_net -net trigger_selector_0_H_GAIN_TDATA [get_bd_pins async_dataframe_gene_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins data_trigger_0/ARESET] [get_bd_pins trigger_selector_0/ARESET] [get_bd_pins util_vector_logic_0/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hardware_trigger_2
proc create_hier_cell_hardware_trigger_2 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_2() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv awa.tohoku.ac.jp:mogura2:trigger_control_rtl:1.1 TRIGGER_CONTROL


  # Create pins
  create_bd_pin -dir O DATAFRAMEGEN_ERROR
  create_bd_pin -dir O -from 15 -to 0 -type data DIGTAL_BASELINE
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MAX_TRIGGER_LENGTH
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I SET_CONFIG
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN
  create_bd_pin -dir I -from 47 -to 0 TIMESTAMP

  # Create instance: async_dataframe_gene_0, and set properties
  set async_dataframe_gene_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1 async_dataframe_gene_0 ]
  set_property -dict [ list \
   CONFIG.CHANNEL_ID {2} \
 ] $async_dataframe_gene_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {32} \
 ] $axis_dwidth_converter_0

  # Create instance: control_distributer_0, and set properties
  set control_distributer_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:control_distributer:1.0 control_distributer_0 ]

  # Create instance: data_trigger_0, and set properties
  set data_trigger_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:data_trigger:1.0 data_trigger_0 ]

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_blocks/hardware_trigger_2/data_trigger_0/ARESET]

  # Create instance: simple_dsp_module_0, and set properties
  set simple_dsp_module_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0 simple_dsp_module_0 ]

  # Create instance: trigger_selector_0, and set properties
  set trigger_selector_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_selector:1.0 trigger_selector_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins simple_dsp_module_0/l_s_axis]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins simple_dsp_module_0/h_s_axis]
  connect_bd_intf_net -intf_net TRIGGER_CONTROL_1 [get_bd_intf_pins TRIGGER_CONTROL] [get_bd_intf_pins control_distributer_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net async_dataframe_gene_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD1 [get_bd_intf_pins control_distributer_0/CONTROL_MOD1] [get_bd_intf_pins data_trigger_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD2 [get_bd_intf_pins control_distributer_0/CONTROL_MOD2] [get_bd_intf_pins trigger_selector_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net data_trigger_0_M_AXIS [get_bd_intf_pins data_trigger_0/M_AXIS] [get_bd_intf_pins trigger_selector_0/S_AXIS]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dac_m_axis [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins simple_dsp_module_0/dac_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dsp_m_axis [get_bd_intf_pins data_trigger_0/DSP_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/dsp_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_h_m_axis [get_bd_intf_pins data_trigger_0/H_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/h_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_l_m_axis [get_bd_intf_pins data_trigger_0/L_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/l_m_axis]
  connect_bd_intf_net -intf_net trigger_selector_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/S_AXIS] [get_bd_intf_pins trigger_selector_0/M_AXIS]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins trigger_selector_0/EXTERNAL_TRIGGER]
  connect_bd_net -net MAX_TRIGGER_LENGTH_1 [get_bd_pins MAX_TRIGGER_LENGTH] [get_bd_pins async_dataframe_gene_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_LOWER_THRESOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_UPPER_THRESOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/M_AXIS_ACLK] [get_bd_pins axis_dwidth_converter_0/aclk]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/M_AXIS_RESETN] [get_bd_pins axis_dwidth_converter_0/aresetn]
  connect_bd_net -net SET_CONFIG_1 [get_bd_pins SET_CONFIG] [get_bd_pins async_dataframe_gene_0/SET_CONFIG] [get_bd_pins data_trigger_0/SET_CONFIG] [get_bd_pins trigger_selector_0/SET_CONFIG]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/S_AXIS_ACLK] [get_bd_pins data_trigger_0/ACLK] [get_bd_pins simple_dsp_module_0/clk] [get_bd_pins trigger_selector_0/ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/S_AXIS_RESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net TIMESTAMP_1 [get_bd_pins TIMESTAMP] [get_bd_pins data_trigger_0/TIMESTAMP]
  connect_bd_net -net async_dataframe_gene_0_DATAFRAME_GEN_ERROR [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins async_dataframe_gene_0/DATAFRAME_GEN_ERROR]
  connect_bd_net -net control_distributer_0_H_GAIN_BASELINE_MOD0 [get_bd_pins control_distributer_0/H_GAIN_BASELINE_MOD0] [get_bd_pins simple_dsp_module_0/h_gain_baseline]
  connect_bd_net -net data_trigger_0_H_GAIN_SATURATED_FLAG [get_bd_pins HGAIN_SATURATION] [get_bd_pins data_trigger_0/H_GAIN_SATURATED_FLAG]
  connect_bd_net -net data_trigger_0_H_GAIN_TDATA [get_bd_pins data_trigger_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA_IN]
  connect_bd_net -net simple_dsp_module_0_digital_baseline [get_bd_pins DIGTAL_BASELINE] [get_bd_pins simple_dsp_module_0/digital_baseline]
  connect_bd_net -net trigger_selector_0_H_GAIN_TDATA [get_bd_pins async_dataframe_gene_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins data_trigger_0/ARESET] [get_bd_pins trigger_selector_0/ARESET] [get_bd_pins util_vector_logic_0/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hardware_trigger_1
proc create_hier_cell_hardware_trigger_1 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_1() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv awa.tohoku.ac.jp:mogura2:trigger_control_rtl:1.1 TRIGGER_CONTROL


  # Create pins
  create_bd_pin -dir O DATAFRAMEGEN_ERROR
  create_bd_pin -dir O -from 15 -to 0 -type data DIGTAL_BASELINE
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MAX_TRIGGER_LENGTH
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I SET_CONFIG
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN
  create_bd_pin -dir I -from 47 -to 0 TIMESTAMP

  # Create instance: async_dataframe_gene_0, and set properties
  set async_dataframe_gene_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1 async_dataframe_gene_0 ]
  set_property -dict [ list \
   CONFIG.CHANNEL_ID {1} \
 ] $async_dataframe_gene_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {32} \
 ] $axis_dwidth_converter_0

  # Create instance: control_distributer_0, and set properties
  set control_distributer_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:control_distributer:1.0 control_distributer_0 ]

  # Create instance: data_trigger_0, and set properties
  set data_trigger_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:data_trigger:1.0 data_trigger_0 ]

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_blocks/hardware_trigger_1/data_trigger_0/ARESET]

  # Create instance: simple_dsp_module_0, and set properties
  set simple_dsp_module_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0 simple_dsp_module_0 ]

  # Create instance: trigger_selector_0, and set properties
  set trigger_selector_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_selector:1.0 trigger_selector_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins simple_dsp_module_0/l_s_axis]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins simple_dsp_module_0/h_s_axis]
  connect_bd_intf_net -intf_net TRIGGER_CONTROL_1 [get_bd_intf_pins TRIGGER_CONTROL] [get_bd_intf_pins control_distributer_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net async_dataframe_gene_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD1 [get_bd_intf_pins control_distributer_0/CONTROL_MOD1] [get_bd_intf_pins data_trigger_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD2 [get_bd_intf_pins control_distributer_0/CONTROL_MOD2] [get_bd_intf_pins trigger_selector_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net data_trigger_0_M_AXIS [get_bd_intf_pins data_trigger_0/M_AXIS] [get_bd_intf_pins trigger_selector_0/S_AXIS]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dac_m_axis [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins simple_dsp_module_0/dac_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dsp_m_axis [get_bd_intf_pins data_trigger_0/DSP_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/dsp_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_h_m_axis [get_bd_intf_pins data_trigger_0/H_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/h_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_l_m_axis [get_bd_intf_pins data_trigger_0/L_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/l_m_axis]
  connect_bd_intf_net -intf_net trigger_selector_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/S_AXIS] [get_bd_intf_pins trigger_selector_0/M_AXIS]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins trigger_selector_0/EXTERNAL_TRIGGER]
  connect_bd_net -net MAX_TRIGGER_LENGTH_1 [get_bd_pins MAX_TRIGGER_LENGTH] [get_bd_pins async_dataframe_gene_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_LOWER_THRESOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_UPPER_THRESOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/M_AXIS_ACLK] [get_bd_pins axis_dwidth_converter_0/aclk]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/M_AXIS_RESETN] [get_bd_pins axis_dwidth_converter_0/aresetn]
  connect_bd_net -net SET_CONFIG_1 [get_bd_pins SET_CONFIG] [get_bd_pins async_dataframe_gene_0/SET_CONFIG] [get_bd_pins data_trigger_0/SET_CONFIG] [get_bd_pins trigger_selector_0/SET_CONFIG]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/S_AXIS_ACLK] [get_bd_pins data_trigger_0/ACLK] [get_bd_pins simple_dsp_module_0/clk] [get_bd_pins trigger_selector_0/ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/S_AXIS_RESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net TIMESTAMP_1 [get_bd_pins TIMESTAMP] [get_bd_pins data_trigger_0/TIMESTAMP]
  connect_bd_net -net async_dataframe_gene_0_DATAFRAME_GEN_ERROR [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins async_dataframe_gene_0/DATAFRAME_GEN_ERROR]
  connect_bd_net -net control_distributer_0_H_GAIN_BASELINE_MOD0 [get_bd_pins control_distributer_0/H_GAIN_BASELINE_MOD0] [get_bd_pins simple_dsp_module_0/h_gain_baseline]
  connect_bd_net -net data_trigger_0_H_GAIN_SATURATED_FLAG [get_bd_pins HGAIN_SATURATION] [get_bd_pins data_trigger_0/H_GAIN_SATURATED_FLAG]
  connect_bd_net -net data_trigger_0_H_GAIN_TDATA [get_bd_pins data_trigger_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA_IN]
  connect_bd_net -net simple_dsp_module_0_digital_baseline [get_bd_pins DIGTAL_BASELINE] [get_bd_pins simple_dsp_module_0/digital_baseline]
  connect_bd_net -net trigger_selector_0_H_GAIN_TDATA [get_bd_pins async_dataframe_gene_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins data_trigger_0/ARESET] [get_bd_pins trigger_selector_0/ARESET] [get_bd_pins util_vector_logic_0/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hardware_trigger_0
proc create_hier_cell_hardware_trigger_0 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_0() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv awa.tohoku.ac.jp:mogura2:trigger_control_rtl:1.1 TRIGGER_CONTROL


  # Create pins
  create_bd_pin -dir O DATAFRAMEGEN_ERROR
  create_bd_pin -dir O -from 15 -to 0 -type data DIGTAL_BASELINE
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MAX_TRIGGER_LENGTH
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I SET_CONFIG
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN
  create_bd_pin -dir I -from 47 -to 0 TIMESTAMP

  # Create instance: async_dataframe_gene_0, and set properties
  set async_dataframe_gene_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_dataframe_generator:1.1 async_dataframe_gene_0 ]

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {32} \
 ] $axis_dwidth_converter_0

  # Create instance: control_distributer_0, and set properties
  set control_distributer_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:control_distributer:1.0 control_distributer_0 ]

  # Create instance: data_trigger_0, and set properties
  set data_trigger_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:data_trigger:1.0 data_trigger_0 ]

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_blocks/hardware_trigger_0/data_trigger_0/ARESET]

  # Create instance: simple_dsp_module_0, and set properties
  set simple_dsp_module_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:simple_dsp_module:1.0 simple_dsp_module_0 ]

  # Create instance: trigger_selector_0, and set properties
  set trigger_selector_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_selector:1.0 trigger_selector_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins simple_dsp_module_0/l_s_axis]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins simple_dsp_module_0/h_s_axis]
  connect_bd_intf_net -intf_net TRIGGER_CONTROL_1 [get_bd_intf_pins TRIGGER_CONTROL] [get_bd_intf_pins control_distributer_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net async_dataframe_gene_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD1 [get_bd_intf_pins control_distributer_0/CONTROL_MOD1] [get_bd_intf_pins data_trigger_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net control_distributer_0_CONTROL_MOD2 [get_bd_intf_pins control_distributer_0/CONTROL_MOD2] [get_bd_intf_pins trigger_selector_0/TRIGGER_CONTROL]
  connect_bd_intf_net -intf_net data_trigger_0_M_AXIS [get_bd_intf_pins data_trigger_0/M_AXIS] [get_bd_intf_pins trigger_selector_0/S_AXIS]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dac_m_axis [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins simple_dsp_module_0/dac_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_dsp_m_axis [get_bd_intf_pins data_trigger_0/DSP_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/dsp_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_h_m_axis [get_bd_intf_pins data_trigger_0/H_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/h_m_axis]
  connect_bd_intf_net -intf_net simple_dsp_module_0_l_m_axis [get_bd_intf_pins data_trigger_0/L_S_AXIS] [get_bd_intf_pins simple_dsp_module_0/l_m_axis]
  connect_bd_intf_net -intf_net trigger_selector_0_M_AXIS [get_bd_intf_pins async_dataframe_gene_0/S_AXIS] [get_bd_intf_pins trigger_selector_0/M_AXIS]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins trigger_selector_0/EXTERNAL_TRIGGER]
  connect_bd_net -net MAX_TRIGGER_LENGTH_1 [get_bd_pins MAX_TRIGGER_LENGTH] [get_bd_pins async_dataframe_gene_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_LOWER_THRESOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins data_trigger_0/MODE_SWITCH_UPPER_THRESOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/M_AXIS_ACLK] [get_bd_pins axis_dwidth_converter_0/aclk]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/M_AXIS_RESETN] [get_bd_pins axis_dwidth_converter_0/aresetn]
  connect_bd_net -net SET_CONFIG_1 [get_bd_pins SET_CONFIG] [get_bd_pins async_dataframe_gene_0/SET_CONFIG] [get_bd_pins data_trigger_0/SET_CONFIG] [get_bd_pins trigger_selector_0/SET_CONFIG]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_dataframe_gene_0/S_AXIS_ACLK] [get_bd_pins data_trigger_0/ACLK] [get_bd_pins simple_dsp_module_0/clk] [get_bd_pins trigger_selector_0/ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins async_dataframe_gene_0/S_AXIS_RESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net TIMESTAMP_1 [get_bd_pins TIMESTAMP] [get_bd_pins data_trigger_0/TIMESTAMP]
  connect_bd_net -net async_dataframe_gene_0_DATAFRAME_GEN_ERROR [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins async_dataframe_gene_0/DATAFRAME_GEN_ERROR]
  connect_bd_net -net control_distributer_0_H_GAIN_BASELINE_MOD0 [get_bd_pins control_distributer_0/H_GAIN_BASELINE_MOD0] [get_bd_pins simple_dsp_module_0/h_gain_baseline]
  connect_bd_net -net data_trigger_0_H_GAIN_SATURATED_FLAG [get_bd_pins HGAIN_SATURATION] [get_bd_pins data_trigger_0/H_GAIN_SATURATED_FLAG]
  connect_bd_net -net data_trigger_0_H_GAIN_TDATA [get_bd_pins data_trigger_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA_IN]
  connect_bd_net -net simple_dsp_module_0_digital_baseline [get_bd_pins DIGTAL_BASELINE] [get_bd_pins simple_dsp_module_0/digital_baseline]
  connect_bd_net -net trigger_selector_0_H_GAIN_TDATA [get_bd_pins async_dataframe_gene_0/H_GAIN_TDATA] [get_bd_pins trigger_selector_0/H_GAIN_TDATA]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins data_trigger_0/ARESET] [get_bd_pins trigger_selector_0/ARESET] [get_bd_pins util_vector_logic_0/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hardware_trigger_blocks
proc create_hier_cell_hardware_trigger_blocks_1 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_hardware_trigger_blocks_1() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M_AXI

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC1

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC2

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC3

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC4

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC5

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC6

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC7

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC8

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC9

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC10

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC11

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC12

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC13

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC14

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC15

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN1

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN2

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN3

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN4

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN5

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN6

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN7

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN8

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN9

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN10

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN11

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN12

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN13

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN14

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN15

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC1

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC2

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC3

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC4

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC5

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC6

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC7

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC8

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC9

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC10

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC11

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC12

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC13

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC14

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC15


  # Create pins
  create_bd_pin -dir O -from 15 -to 0 DATAFRAMEGEN_ERROR
  create_bd_pin -dir I EXTERNAL_TRIGGER
  create_bd_pin -dir O -from 15 -to 0 HGAIN_SATURATION
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD
  create_bd_pin -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD
  create_bd_pin -dir I -type clk M_AXIS_ACLK
  create_bd_pin -dir I -type rst M_AXIS_ARESETN
  create_bd_pin -dir I -type clk S_AXIS_ACLK
  create_bd_pin -dir I -from 0 -to 0 S_AXIS_ARESETN

  # Create instance: async_pl_ddr_mmu_0, and set properties
  set async_pl_ddr_mmu_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:async_pl_ddr_mmu:1.1 async_pl_ddr_mmu_0 ]

  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] [get_bd_pins /hardware_trigger_blocks/async_pl_ddr_mmu_0/RESET]

  # Create instance: axi_datamover_0, and set properties
  set axi_datamover_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_datamover:5.1 axi_datamover_0 ]
  set_property -dict [ list \
   CONFIG.c_dummy {0} \
   CONFIG.c_m_axi_mm2s_data_width {256} \
   CONFIG.c_m_axi_s2mm_data_width {256} \
   CONFIG.c_m_axis_mm2s_tdata_width {256} \
   CONFIG.c_mm2s_btt_used {20} \
   CONFIG.c_mm2s_burst_size {128} \
   CONFIG.c_mm2s_include_sf {false} \
   CONFIG.c_s2mm_btt_used {20} \
   CONFIG.c_s2mm_burst_size {128} \
   CONFIG.c_s_axis_s2mm_tdata_width {256} \
   CONFIG.c_single_interface {1} \
 ] $axi_datamover_0

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.M_TDATA_NUM_BYTES {16} \
 ] $axis_dwidth_converter_0

  # Create instance: axis_interconnect_0, and set properties
  set axis_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_interconnect:2.1 axis_interconnect_0 ]
  set_property -dict [ list \
   CONFIG.ARB_ON_MAX_XFERS {0} \
   CONFIG.ARB_ON_TLAST {1} \
   CONFIG.M00_HAS_REGSLICE {1} \
   CONFIG.NUM_MI {1} \
   CONFIG.NUM_SI {16} \
   CONFIG.S00_FIFO_DEPTH {1024} \
   CONFIG.S00_HAS_REGSLICE {1} \
   CONFIG.S01_FIFO_DEPTH {1024} \
   CONFIG.S01_HAS_REGSLICE {1} \
   CONFIG.S02_FIFO_DEPTH {1024} \
   CONFIG.S02_HAS_REGSLICE {1} \
   CONFIG.S03_FIFO_DEPTH {1024} \
   CONFIG.S03_HAS_REGSLICE {1} \
   CONFIG.S04_FIFO_DEPTH {1024} \
   CONFIG.S04_HAS_REGSLICE {1} \
   CONFIG.S05_FIFO_DEPTH {1024} \
   CONFIG.S05_HAS_REGSLICE {1} \
   CONFIG.S06_FIFO_DEPTH {1024} \
   CONFIG.S06_HAS_REGSLICE {1} \
   CONFIG.S07_FIFO_DEPTH {1024} \
   CONFIG.S07_HAS_REGSLICE {1} \
   CONFIG.S08_FIFO_DEPTH {1024} \
   CONFIG.S08_HAS_REGSLICE {1} \
   CONFIG.S09_FIFO_DEPTH {1024} \
   CONFIG.S09_HAS_REGSLICE {1} \
   CONFIG.S10_FIFO_DEPTH {1024} \
   CONFIG.S10_HAS_REGSLICE {1} \
   CONFIG.S11_FIFO_DEPTH {1024} \
   CONFIG.S11_HAS_REGSLICE {1} \
   CONFIG.S12_FIFO_DEPTH {1024} \
   CONFIG.S12_HAS_REGSLICE {1} \
   CONFIG.S13_FIFO_DEPTH {1024} \
   CONFIG.S13_HAS_REGSLICE {1} \
   CONFIG.S14_FIFO_DEPTH {1024} \
   CONFIG.S14_HAS_REGSLICE {1} \
   CONFIG.S15_FIFO_DEPTH {1024} \
   CONFIG.S15_HAS_REGSLICE {1} \
 ] $axis_interconnect_0

  # Create instance: c_counter_binary_0, and set properties
  set c_counter_binary_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:c_counter_binary:12.0 c_counter_binary_0 ]
  set_property -dict [ list \
   CONFIG.Output_Width {48} \
   CONFIG.SCLR {true} \
 ] $c_counter_binary_0

  # Create instance: hardware_trigger_0
  create_hier_cell_hardware_trigger_0 $hier_obj hardware_trigger_0

  # Create instance: hardware_trigger_1
  create_hier_cell_hardware_trigger_1 $hier_obj hardware_trigger_1

  # Create instance: hardware_trigger_2
  create_hier_cell_hardware_trigger_2 $hier_obj hardware_trigger_2

  # Create instance: hardware_trigger_3
  create_hier_cell_hardware_trigger_3 $hier_obj hardware_trigger_3

  # Create instance: hardware_trigger_4
  create_hier_cell_hardware_trigger_4 $hier_obj hardware_trigger_4

  # Create instance: hardware_trigger_5
  create_hier_cell_hardware_trigger_5 $hier_obj hardware_trigger_5

  # Create instance: hardware_trigger_6
  create_hier_cell_hardware_trigger_6 $hier_obj hardware_trigger_6

  # Create instance: hardware_trigger_7
  create_hier_cell_hardware_trigger_7 $hier_obj hardware_trigger_7

  # Create instance: hardware_trigger_8
  create_hier_cell_hardware_trigger_8 $hier_obj hardware_trigger_8

  # Create instance: hardware_trigger_9
  create_hier_cell_hardware_trigger_9 $hier_obj hardware_trigger_9

  # Create instance: hardware_trigger_10
  create_hier_cell_hardware_trigger_10 $hier_obj hardware_trigger_10

  # Create instance: hardware_trigger_11
  create_hier_cell_hardware_trigger_11 $hier_obj hardware_trigger_11

  # Create instance: hardware_trigger_12
  create_hier_cell_hardware_trigger_12 $hier_obj hardware_trigger_12

  # Create instance: hardware_trigger_13
  create_hier_cell_hardware_trigger_13 $hier_obj hardware_trigger_13

  # Create instance: hardware_trigger_14
  create_hier_cell_hardware_trigger_14 $hier_obj hardware_trigger_14

  # Create instance: hardware_trigger_15
  create_hier_cell_hardware_trigger_15 $hier_obj hardware_trigger_15

  # Create instance: trigger_configrator_0, and set properties
  set trigger_configrator_0 [ create_bd_cell -type ip -vlnv awa.tohoku.ac.jp:mogura2:trigger_configrator:1.0 trigger_configrator_0 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {16} \
 ] $xlconcat_0

  # Create instance: xlconcat_1, and set properties
  set xlconcat_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_1 ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {16} \
 ] $xlconcat_1

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN10_1 [get_bd_intf_pins S_AXIS_LGAIN10] [get_bd_intf_pins hardware_trigger_10/S_AXIS_LGAIN]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN11_1 [get_bd_intf_pins S_AXIS_LGAIN11] [get_bd_intf_pins hardware_trigger_11/S_AXIS_LGAIN]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN12_1 [get_bd_intf_pins S_AXIS_LGAIN12] [get_bd_intf_pins hardware_trigger_12/S_AXIS_LGAIN]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN13_1 [get_bd_intf_pins S_AXIS_LGAIN13] [get_bd_intf_pins hardware_trigger_13/S_AXIS_LGAIN]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN14_1 [get_bd_intf_pins S_AXIS_LGAIN14] [get_bd_intf_pins hardware_trigger_14/S_AXIS_LGAIN]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN15_1 [get_bd_intf_pins S_AXIS_LGAIN15] [get_bd_intf_pins hardware_trigger_15/S_AXIS_LGAIN]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN1_1 [get_bd_intf_pins S_AXIS_LGAIN1] [get_bd_intf_pins hardware_trigger_1/S_AXIS_LGAIN]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN2_1 [get_bd_intf_pins S_AXIS_LGAIN2] [get_bd_intf_pins hardware_trigger_2/S_AXIS_LGAIN]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN3_1 [get_bd_intf_pins S_AXIS_LGAIN3] [get_bd_intf_pins hardware_trigger_3/S_AXIS_LGAIN]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN4_1 [get_bd_intf_pins S_AXIS_LGAIN4] [get_bd_intf_pins hardware_trigger_4/S_AXIS_LGAIN]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN5_1 [get_bd_intf_pins S_AXIS_LGAIN5] [get_bd_intf_pins hardware_trigger_5/S_AXIS_LGAIN]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN6_1 [get_bd_intf_pins S_AXIS_LGAIN6] [get_bd_intf_pins hardware_trigger_6/S_AXIS_LGAIN]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN7_1 [get_bd_intf_pins S_AXIS_LGAIN7] [get_bd_intf_pins hardware_trigger_7/S_AXIS_LGAIN]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN8_1 [get_bd_intf_pins S_AXIS_LGAIN8] [get_bd_intf_pins hardware_trigger_8/S_AXIS_LGAIN]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN9_1 [get_bd_intf_pins S_AXIS_LGAIN9] [get_bd_intf_pins hardware_trigger_9/S_AXIS_LGAIN]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_pins S_AXIS_LGAIN] [get_bd_intf_pins hardware_trigger_0/S_AXIS_LGAIN]
  connect_bd_intf_net -intf_net S_AXIS_RFADC10_1 [get_bd_intf_pins S_AXIS_RFADC10] [get_bd_intf_pins hardware_trigger_10/S_AXIS_RFADC]
  connect_bd_intf_net -intf_net S_AXIS_RFADC11_1 [get_bd_intf_pins S_AXIS_RFADC11] [get_bd_intf_pins hardware_trigger_11/S_AXIS_RFADC]
  connect_bd_intf_net -intf_net S_AXIS_RFADC12_1 [get_bd_intf_pins S_AXIS_RFADC12] [get_bd_intf_pins hardware_trigger_12/S_AXIS_RFADC]
  connect_bd_intf_net -intf_net S_AXIS_RFADC13_1 [get_bd_intf_pins S_AXIS_RFADC13] [get_bd_intf_pins hardware_trigger_13/S_AXIS_RFADC]
  connect_bd_intf_net -intf_net S_AXIS_RFADC14_1 [get_bd_intf_pins S_AXIS_RFADC14] [get_bd_intf_pins hardware_trigger_14/S_AXIS_RFADC]
  connect_bd_intf_net -intf_net S_AXIS_RFADC15_1 [get_bd_intf_pins S_AXIS_RFADC15] [get_bd_intf_pins hardware_trigger_15/S_AXIS_RFADC]
  connect_bd_intf_net -intf_net S_AXIS_RFADC1_1 [get_bd_intf_pins S_AXIS_RFADC1] [get_bd_intf_pins hardware_trigger_1/S_AXIS_RFADC]
  connect_bd_intf_net -intf_net S_AXIS_RFADC2_1 [get_bd_intf_pins S_AXIS_RFADC2] [get_bd_intf_pins hardware_trigger_2/S_AXIS_RFADC]
  connect_bd_intf_net -intf_net S_AXIS_RFADC3_1 [get_bd_intf_pins S_AXIS_RFADC3] [get_bd_intf_pins hardware_trigger_3/S_AXIS_RFADC]
  connect_bd_intf_net -intf_net S_AXIS_RFADC4_1 [get_bd_intf_pins S_AXIS_RFADC4] [get_bd_intf_pins hardware_trigger_4/S_AXIS_RFADC]
  connect_bd_intf_net -intf_net S_AXIS_RFADC5_1 [get_bd_intf_pins S_AXIS_RFADC5] [get_bd_intf_pins hardware_trigger_5/S_AXIS_RFADC]
  connect_bd_intf_net -intf_net S_AXIS_RFADC6_1 [get_bd_intf_pins S_AXIS_RFADC6] [get_bd_intf_pins hardware_trigger_6/S_AXIS_RFADC]
  connect_bd_intf_net -intf_net S_AXIS_RFADC7_1 [get_bd_intf_pins S_AXIS_RFADC7] [get_bd_intf_pins hardware_trigger_7/S_AXIS_RFADC]
  connect_bd_intf_net -intf_net S_AXIS_RFADC8_1 [get_bd_intf_pins S_AXIS_RFADC8] [get_bd_intf_pins hardware_trigger_8/S_AXIS_RFADC]
  connect_bd_intf_net -intf_net S_AXIS_RFADC9_1 [get_bd_intf_pins S_AXIS_RFADC9] [get_bd_intf_pins hardware_trigger_9/S_AXIS_RFADC]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_pins S_AXIS_RFADC] [get_bd_intf_pins hardware_trigger_0/S_AXIS_RFADC]
  connect_bd_intf_net -intf_net S_AXI_1 [get_bd_intf_pins S_AXI] [get_bd_intf_pins trigger_configrator_0/S_AXI]
  connect_bd_intf_net -intf_net async_pl_ddr_mmu_0_MM2S_CMD_M_AXIS [get_bd_intf_pins async_pl_ddr_mmu_0/MM2S_CMD_M_AXIS] [get_bd_intf_pins axi_datamover_0/S_AXIS_MM2S_CMD]
  connect_bd_intf_net -intf_net async_pl_ddr_mmu_0_M_AXIS [get_bd_intf_pins async_pl_ddr_mmu_0/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net async_pl_ddr_mmu_0_S2MM_CMD_M_AXIS [get_bd_intf_pins async_pl_ddr_mmu_0/S2MM_CMD_M_AXIS] [get_bd_intf_pins axi_datamover_0/S_AXIS_S2MM_CMD]
  connect_bd_intf_net -intf_net async_pl_ddr_mmu_0_S2MM_M_AXIS [get_bd_intf_pins async_pl_ddr_mmu_0/S2MM_M_AXIS] [get_bd_intf_pins axi_datamover_0/S_AXIS_S2MM]
  connect_bd_intf_net -intf_net axi_datamover_0_M_AXI [get_bd_intf_pins M_AXI] [get_bd_intf_pins axi_datamover_0/M_AXI]
  connect_bd_intf_net -intf_net axi_datamover_0_M_AXIS_MM2S [get_bd_intf_pins async_pl_ddr_mmu_0/MM2S_S_AXIS] [get_bd_intf_pins axi_datamover_0/M_AXIS_MM2S]
  connect_bd_intf_net -intf_net axi_datamover_0_M_AXIS_MM2S_STS [get_bd_intf_pins async_pl_ddr_mmu_0/MM2S_STS_S_AXIS] [get_bd_intf_pins axi_datamover_0/M_AXIS_MM2S_STS]
  connect_bd_intf_net -intf_net axi_datamover_0_M_AXIS_S2MM_STS [get_bd_intf_pins async_pl_ddr_mmu_0/S2MM_STS_S_AXIS] [get_bd_intf_pins axi_datamover_0/M_AXIS_S2MM_STS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net axis_interconnect_0_M00_AXIS [get_bd_intf_pins async_pl_ddr_mmu_0/S_AXIS] [get_bd_intf_pins axis_interconnect_0/M00_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_0_M_AXIS [get_bd_intf_pins axis_interconnect_0/S00_AXIS] [get_bd_intf_pins hardware_trigger_0/M_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_0_M_AXIS_RFDAC [get_bd_intf_pins M_AXIS_RFDAC] [get_bd_intf_pins hardware_trigger_0/M_AXIS_RFDAC]
  connect_bd_intf_net -intf_net hardware_trigger_10_M_AXIS [get_bd_intf_pins axis_interconnect_0/S10_AXIS] [get_bd_intf_pins hardware_trigger_10/M_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_10_M_AXIS_RFDAC [get_bd_intf_pins M_AXIS_RFDAC10] [get_bd_intf_pins hardware_trigger_10/M_AXIS_RFDAC]
  connect_bd_intf_net -intf_net hardware_trigger_11_M_AXIS [get_bd_intf_pins axis_interconnect_0/S11_AXIS] [get_bd_intf_pins hardware_trigger_11/M_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_11_M_AXIS_RFDAC [get_bd_intf_pins M_AXIS_RFDAC11] [get_bd_intf_pins hardware_trigger_11/M_AXIS_RFDAC]
  connect_bd_intf_net -intf_net hardware_trigger_12_M_AXIS [get_bd_intf_pins axis_interconnect_0/S12_AXIS] [get_bd_intf_pins hardware_trigger_12/M_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_12_M_AXIS_RFDAC [get_bd_intf_pins M_AXIS_RFDAC12] [get_bd_intf_pins hardware_trigger_12/M_AXIS_RFDAC]
  connect_bd_intf_net -intf_net hardware_trigger_13_M_AXIS [get_bd_intf_pins axis_interconnect_0/S13_AXIS] [get_bd_intf_pins hardware_trigger_13/M_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_13_M_AXIS_RFDAC [get_bd_intf_pins M_AXIS_RFDAC13] [get_bd_intf_pins hardware_trigger_13/M_AXIS_RFDAC]
  connect_bd_intf_net -intf_net hardware_trigger_14_M_AXIS [get_bd_intf_pins axis_interconnect_0/S14_AXIS] [get_bd_intf_pins hardware_trigger_14/M_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_14_M_AXIS_RFDAC [get_bd_intf_pins M_AXIS_RFDAC14] [get_bd_intf_pins hardware_trigger_14/M_AXIS_RFDAC]
  connect_bd_intf_net -intf_net hardware_trigger_15_M_AXIS [get_bd_intf_pins axis_interconnect_0/S15_AXIS] [get_bd_intf_pins hardware_trigger_15/M_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_15_M_AXIS_RFDAC [get_bd_intf_pins M_AXIS_RFDAC15] [get_bd_intf_pins hardware_trigger_15/M_AXIS_RFDAC]
  connect_bd_intf_net -intf_net hardware_trigger_1_M_AXIS [get_bd_intf_pins axis_interconnect_0/S01_AXIS] [get_bd_intf_pins hardware_trigger_1/M_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_1_M_AXIS_RFDAC [get_bd_intf_pins M_AXIS_RFDAC1] [get_bd_intf_pins hardware_trigger_1/M_AXIS_RFDAC]
  connect_bd_intf_net -intf_net hardware_trigger_2_M_AXIS [get_bd_intf_pins axis_interconnect_0/S02_AXIS] [get_bd_intf_pins hardware_trigger_2/M_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_2_M_AXIS_RFDAC [get_bd_intf_pins M_AXIS_RFDAC2] [get_bd_intf_pins hardware_trigger_2/M_AXIS_RFDAC]
  connect_bd_intf_net -intf_net hardware_trigger_3_M_AXIS [get_bd_intf_pins axis_interconnect_0/S03_AXIS] [get_bd_intf_pins hardware_trigger_3/M_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_3_M_AXIS_RFDAC [get_bd_intf_pins M_AXIS_RFDAC3] [get_bd_intf_pins hardware_trigger_3/M_AXIS_RFDAC]
  connect_bd_intf_net -intf_net hardware_trigger_4_M_AXIS [get_bd_intf_pins axis_interconnect_0/S04_AXIS] [get_bd_intf_pins hardware_trigger_4/M_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_4_M_AXIS_RFDAC [get_bd_intf_pins M_AXIS_RFDAC4] [get_bd_intf_pins hardware_trigger_4/M_AXIS_RFDAC]
  connect_bd_intf_net -intf_net hardware_trigger_5_M_AXIS [get_bd_intf_pins axis_interconnect_0/S05_AXIS] [get_bd_intf_pins hardware_trigger_5/M_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_5_M_AXIS_RFDAC [get_bd_intf_pins M_AXIS_RFDAC5] [get_bd_intf_pins hardware_trigger_5/M_AXIS_RFDAC]
  connect_bd_intf_net -intf_net hardware_trigger_6_M_AXIS [get_bd_intf_pins axis_interconnect_0/S06_AXIS] [get_bd_intf_pins hardware_trigger_6/M_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_6_M_AXIS_RFDAC [get_bd_intf_pins M_AXIS_RFDAC6] [get_bd_intf_pins hardware_trigger_6/M_AXIS_RFDAC]
  connect_bd_intf_net -intf_net hardware_trigger_7_M_AXIS [get_bd_intf_pins axis_interconnect_0/S07_AXIS] [get_bd_intf_pins hardware_trigger_7/M_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_7_M_AXIS_RFDAC [get_bd_intf_pins M_AXIS_RFDAC7] [get_bd_intf_pins hardware_trigger_7/M_AXIS_RFDAC]
  connect_bd_intf_net -intf_net hardware_trigger_8_M_AXIS [get_bd_intf_pins axis_interconnect_0/S08_AXIS] [get_bd_intf_pins hardware_trigger_8/M_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_8_M_AXIS_RFDAC [get_bd_intf_pins M_AXIS_RFDAC8] [get_bd_intf_pins hardware_trigger_8/M_AXIS_RFDAC]
  connect_bd_intf_net -intf_net hardware_trigger_9_M_AXIS [get_bd_intf_pins axis_interconnect_0/S09_AXIS] [get_bd_intf_pins hardware_trigger_9/M_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_9_M_AXIS_RFDAC [get_bd_intf_pins M_AXIS_RFDAC9] [get_bd_intf_pins hardware_trigger_9/M_AXIS_RFDAC]
  connect_bd_intf_net -intf_net trigger_configrator_0_CH0_CONTROL [get_bd_intf_pins hardware_trigger_0/TRIGGER_CONTROL] [get_bd_intf_pins trigger_configrator_0/CH0_CONTROL]
  connect_bd_intf_net -intf_net trigger_configrator_0_CH10_CONTROL [get_bd_intf_pins hardware_trigger_10/TRIGGER_CONTROL] [get_bd_intf_pins trigger_configrator_0/CH10_CONTROL]
  connect_bd_intf_net -intf_net trigger_configrator_0_CH11_CONTROL [get_bd_intf_pins hardware_trigger_11/TRIGGER_CONTROL] [get_bd_intf_pins trigger_configrator_0/CH11_CONTROL]
  connect_bd_intf_net -intf_net trigger_configrator_0_CH12_CONTROL [get_bd_intf_pins hardware_trigger_12/TRIGGER_CONTROL] [get_bd_intf_pins trigger_configrator_0/CH12_CONTROL]
  connect_bd_intf_net -intf_net trigger_configrator_0_CH13_CONTROL [get_bd_intf_pins hardware_trigger_13/TRIGGER_CONTROL] [get_bd_intf_pins trigger_configrator_0/CH13_CONTROL]
  connect_bd_intf_net -intf_net trigger_configrator_0_CH14_CONTROL [get_bd_intf_pins hardware_trigger_14/TRIGGER_CONTROL] [get_bd_intf_pins trigger_configrator_0/CH14_CONTROL]
  connect_bd_intf_net -intf_net trigger_configrator_0_CH15_CONTROL [get_bd_intf_pins hardware_trigger_15/TRIGGER_CONTROL] [get_bd_intf_pins trigger_configrator_0/CH15_CONTROL]
  connect_bd_intf_net -intf_net trigger_configrator_0_CH1_CONTROL [get_bd_intf_pins hardware_trigger_1/TRIGGER_CONTROL] [get_bd_intf_pins trigger_configrator_0/CH1_CONTROL]
  connect_bd_intf_net -intf_net trigger_configrator_0_CH2_CONTROL [get_bd_intf_pins hardware_trigger_2/TRIGGER_CONTROL] [get_bd_intf_pins trigger_configrator_0/CH2_CONTROL]
  connect_bd_intf_net -intf_net trigger_configrator_0_CH3_CONTROL [get_bd_intf_pins hardware_trigger_3/TRIGGER_CONTROL] [get_bd_intf_pins trigger_configrator_0/CH3_CONTROL]
  connect_bd_intf_net -intf_net trigger_configrator_0_CH4_CONTROL [get_bd_intf_pins hardware_trigger_4/TRIGGER_CONTROL] [get_bd_intf_pins trigger_configrator_0/CH4_CONTROL]
  connect_bd_intf_net -intf_net trigger_configrator_0_CH5_CONTROL [get_bd_intf_pins hardware_trigger_5/TRIGGER_CONTROL] [get_bd_intf_pins trigger_configrator_0/CH5_CONTROL]
  connect_bd_intf_net -intf_net trigger_configrator_0_CH6_CONTROL [get_bd_intf_pins hardware_trigger_6/TRIGGER_CONTROL] [get_bd_intf_pins trigger_configrator_0/CH6_CONTROL]
  connect_bd_intf_net -intf_net trigger_configrator_0_CH7_CONTROL [get_bd_intf_pins hardware_trigger_7/TRIGGER_CONTROL] [get_bd_intf_pins trigger_configrator_0/CH7_CONTROL]
  connect_bd_intf_net -intf_net trigger_configrator_0_CH8_CONTROL [get_bd_intf_pins hardware_trigger_8/TRIGGER_CONTROL] [get_bd_intf_pins trigger_configrator_0/CH8_CONTROL]
  connect_bd_intf_net -intf_net trigger_configrator_0_CH9_CONTROL [get_bd_intf_pins hardware_trigger_9/TRIGGER_CONTROL] [get_bd_intf_pins trigger_configrator_0/CH9_CONTROL]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_pins EXTERNAL_TRIGGER] [get_bd_pins hardware_trigger_0/EXTERNAL_TRIGGER] [get_bd_pins hardware_trigger_1/EXTERNAL_TRIGGER] [get_bd_pins hardware_trigger_10/EXTERNAL_TRIGGER] [get_bd_pins hardware_trigger_11/EXTERNAL_TRIGGER] [get_bd_pins hardware_trigger_12/EXTERNAL_TRIGGER] [get_bd_pins hardware_trigger_13/EXTERNAL_TRIGGER] [get_bd_pins hardware_trigger_14/EXTERNAL_TRIGGER] [get_bd_pins hardware_trigger_15/EXTERNAL_TRIGGER] [get_bd_pins hardware_trigger_2/EXTERNAL_TRIGGER] [get_bd_pins hardware_trigger_3/EXTERNAL_TRIGGER] [get_bd_pins hardware_trigger_4/EXTERNAL_TRIGGER] [get_bd_pins hardware_trigger_5/EXTERNAL_TRIGGER] [get_bd_pins hardware_trigger_6/EXTERNAL_TRIGGER] [get_bd_pins hardware_trigger_7/EXTERNAL_TRIGGER] [get_bd_pins hardware_trigger_8/EXTERNAL_TRIGGER] [get_bd_pins hardware_trigger_9/EXTERNAL_TRIGGER]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins hardware_trigger_0/MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins hardware_trigger_1/MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins hardware_trigger_10/MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins hardware_trigger_11/MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins hardware_trigger_12/MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins hardware_trigger_13/MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins hardware_trigger_14/MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins hardware_trigger_15/MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins hardware_trigger_2/MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins hardware_trigger_3/MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins hardware_trigger_4/MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins hardware_trigger_5/MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins hardware_trigger_6/MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins hardware_trigger_7/MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins hardware_trigger_8/MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins hardware_trigger_9/MODE_SWITCH_LOWER_THRESHOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_pins MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins hardware_trigger_0/MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins hardware_trigger_1/MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins hardware_trigger_10/MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins hardware_trigger_11/MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins hardware_trigger_12/MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins hardware_trigger_13/MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins hardware_trigger_14/MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins hardware_trigger_15/MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins hardware_trigger_2/MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins hardware_trigger_3/MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins hardware_trigger_4/MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins hardware_trigger_5/MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins hardware_trigger_6/MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins hardware_trigger_7/MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins hardware_trigger_8/MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins hardware_trigger_9/MODE_SWITCH_UPPER_THRESHOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_pins M_AXIS_ACLK] [get_bd_pins async_pl_ddr_mmu_0/ACLK] [get_bd_pins axi_datamover_0/m_axi_mm2s_aclk] [get_bd_pins axi_datamover_0/m_axi_s2mm_aclk] [get_bd_pins axi_datamover_0/m_axis_mm2s_cmdsts_aclk] [get_bd_pins axi_datamover_0/m_axis_s2mm_cmdsts_awclk] [get_bd_pins axis_dwidth_converter_0/aclk] [get_bd_pins axis_interconnect_0/ACLK] [get_bd_pins axis_interconnect_0/M00_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S00_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S01_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S02_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S03_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S04_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S05_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S06_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S07_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S08_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S09_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S10_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S11_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S12_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S13_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S14_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S15_AXIS_ACLK] [get_bd_pins hardware_trigger_0/M_AXIS_ACLK] [get_bd_pins hardware_trigger_1/M_AXIS_ACLK] [get_bd_pins hardware_trigger_10/M_AXIS_ACLK] [get_bd_pins hardware_trigger_11/M_AXIS_ACLK] [get_bd_pins hardware_trigger_12/M_AXIS_ACLK] [get_bd_pins hardware_trigger_13/M_AXIS_ACLK] [get_bd_pins hardware_trigger_14/M_AXIS_ACLK] [get_bd_pins hardware_trigger_15/M_AXIS_ACLK] [get_bd_pins hardware_trigger_2/M_AXIS_ACLK] [get_bd_pins hardware_trigger_3/M_AXIS_ACLK] [get_bd_pins hardware_trigger_4/M_AXIS_ACLK] [get_bd_pins hardware_trigger_5/M_AXIS_ACLK] [get_bd_pins hardware_trigger_6/M_AXIS_ACLK] [get_bd_pins hardware_trigger_7/M_AXIS_ACLK] [get_bd_pins hardware_trigger_8/M_AXIS_ACLK] [get_bd_pins hardware_trigger_9/M_AXIS_ACLK]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_pins M_AXIS_ARESETN] [get_bd_pins async_pl_ddr_mmu_0/ARESETN] [get_bd_pins axi_datamover_0/m_axi_mm2s_aresetn] [get_bd_pins axi_datamover_0/m_axi_s2mm_aresetn] [get_bd_pins axi_datamover_0/m_axis_mm2s_cmdsts_aresetn] [get_bd_pins axi_datamover_0/m_axis_s2mm_cmdsts_aresetn] [get_bd_pins axis_dwidth_converter_0/aresetn] [get_bd_pins axis_interconnect_0/ARESETN] [get_bd_pins axis_interconnect_0/M00_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S00_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S01_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S02_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S03_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S04_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S05_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S06_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S07_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S08_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S09_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S10_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S11_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S12_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S13_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S14_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S15_AXIS_ARESETN] [get_bd_pins hardware_trigger_0/M_AXIS_ARESETN] [get_bd_pins hardware_trigger_1/M_AXIS_ARESETN] [get_bd_pins hardware_trigger_10/M_AXIS_ARESETN] [get_bd_pins hardware_trigger_11/M_AXIS_ARESETN] [get_bd_pins hardware_trigger_12/M_AXIS_ARESETN] [get_bd_pins hardware_trigger_13/M_AXIS_ARESETN] [get_bd_pins hardware_trigger_14/M_AXIS_ARESETN] [get_bd_pins hardware_trigger_15/M_AXIS_ARESETN] [get_bd_pins hardware_trigger_2/M_AXIS_ARESETN] [get_bd_pins hardware_trigger_3/M_AXIS_ARESETN] [get_bd_pins hardware_trigger_4/M_AXIS_ARESETN] [get_bd_pins hardware_trigger_5/M_AXIS_ARESETN] [get_bd_pins hardware_trigger_6/M_AXIS_ARESETN] [get_bd_pins hardware_trigger_7/M_AXIS_ARESETN] [get_bd_pins hardware_trigger_8/M_AXIS_ARESETN] [get_bd_pins hardware_trigger_9/M_AXIS_ARESETN]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_pins S_AXIS_ACLK] [get_bd_pins async_pl_ddr_mmu_0/CLK] [get_bd_pins c_counter_binary_0/CLK] [get_bd_pins hardware_trigger_0/S_AXIS_ACLK] [get_bd_pins hardware_trigger_1/S_AXIS_ACLK] [get_bd_pins hardware_trigger_10/S_AXIS_ACLK] [get_bd_pins hardware_trigger_11/S_AXIS_ACLK] [get_bd_pins hardware_trigger_12/S_AXIS_ACLK] [get_bd_pins hardware_trigger_13/S_AXIS_ACLK] [get_bd_pins hardware_trigger_14/S_AXIS_ACLK] [get_bd_pins hardware_trigger_15/S_AXIS_ACLK] [get_bd_pins hardware_trigger_2/S_AXIS_ACLK] [get_bd_pins hardware_trigger_3/S_AXIS_ACLK] [get_bd_pins hardware_trigger_4/S_AXIS_ACLK] [get_bd_pins hardware_trigger_5/S_AXIS_ACLK] [get_bd_pins hardware_trigger_6/S_AXIS_ACLK] [get_bd_pins hardware_trigger_7/S_AXIS_ACLK] [get_bd_pins hardware_trigger_8/S_AXIS_ACLK] [get_bd_pins hardware_trigger_9/S_AXIS_ACLK] [get_bd_pins trigger_configrator_0/S_AXI_ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_pins S_AXIS_ARESETN] [get_bd_pins hardware_trigger_0/S_AXIS_ARESETN] [get_bd_pins hardware_trigger_1/S_AXIS_ARESETN] [get_bd_pins hardware_trigger_10/S_AXIS_ARESETN] [get_bd_pins hardware_trigger_11/S_AXIS_ARESETN] [get_bd_pins hardware_trigger_12/S_AXIS_ARESETN] [get_bd_pins hardware_trigger_13/S_AXIS_ARESETN] [get_bd_pins hardware_trigger_14/S_AXIS_ARESETN] [get_bd_pins hardware_trigger_15/S_AXIS_ARESETN] [get_bd_pins hardware_trigger_2/S_AXIS_ARESETN] [get_bd_pins hardware_trigger_3/S_AXIS_ARESETN] [get_bd_pins hardware_trigger_4/S_AXIS_ARESETN] [get_bd_pins hardware_trigger_5/S_AXIS_ARESETN] [get_bd_pins hardware_trigger_6/S_AXIS_ARESETN] [get_bd_pins hardware_trigger_7/S_AXIS_ARESETN] [get_bd_pins hardware_trigger_8/S_AXIS_ARESETN] [get_bd_pins hardware_trigger_9/S_AXIS_ARESETN] [get_bd_pins trigger_configrator_0/S_AXI_ARESETN] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net c_counter_binary_0_Q [get_bd_pins c_counter_binary_0/Q] [get_bd_pins hardware_trigger_0/TIMESTAMP] [get_bd_pins hardware_trigger_1/TIMESTAMP] [get_bd_pins hardware_trigger_10/TIMESTAMP] [get_bd_pins hardware_trigger_11/TIMESTAMP] [get_bd_pins hardware_trigger_12/TIMESTAMP] [get_bd_pins hardware_trigger_13/TIMESTAMP] [get_bd_pins hardware_trigger_14/TIMESTAMP] [get_bd_pins hardware_trigger_15/TIMESTAMP] [get_bd_pins hardware_trigger_2/TIMESTAMP] [get_bd_pins hardware_trigger_3/TIMESTAMP] [get_bd_pins hardware_trigger_4/TIMESTAMP] [get_bd_pins hardware_trigger_5/TIMESTAMP] [get_bd_pins hardware_trigger_6/TIMESTAMP] [get_bd_pins hardware_trigger_7/TIMESTAMP] [get_bd_pins hardware_trigger_8/TIMESTAMP] [get_bd_pins hardware_trigger_9/TIMESTAMP]
  connect_bd_net -net hardware_trigger_0_DATAFRAMEGEN_ERROR [get_bd_pins hardware_trigger_0/DATAFRAMEGEN_ERROR] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net hardware_trigger_0_HGAIN_SATURATION [get_bd_pins hardware_trigger_0/HGAIN_SATURATION] [get_bd_pins xlconcat_1/In0]
  connect_bd_net -net hardware_trigger_10_DATAFRAMEGEN_ERROR [get_bd_pins hardware_trigger_10/DATAFRAMEGEN_ERROR] [get_bd_pins xlconcat_0/In10]
  connect_bd_net -net hardware_trigger_10_HGAIN_SATURATION [get_bd_pins hardware_trigger_10/HGAIN_SATURATION] [get_bd_pins xlconcat_1/In10]
  connect_bd_net -net hardware_trigger_11_DATAFRAMEGEN_ERROR [get_bd_pins hardware_trigger_11/DATAFRAMEGEN_ERROR] [get_bd_pins xlconcat_0/In11]
  connect_bd_net -net hardware_trigger_11_HGAIN_SATURATION [get_bd_pins hardware_trigger_11/HGAIN_SATURATION] [get_bd_pins xlconcat_1/In11]
  connect_bd_net -net hardware_trigger_12_DATAFRAMEGEN_ERROR [get_bd_pins hardware_trigger_12/DATAFRAMEGEN_ERROR] [get_bd_pins xlconcat_0/In12]
  connect_bd_net -net hardware_trigger_12_HGAIN_SATURATION [get_bd_pins hardware_trigger_12/HGAIN_SATURATION] [get_bd_pins xlconcat_1/In12]
  connect_bd_net -net hardware_trigger_13_DATAFRAMEGEN_ERROR [get_bd_pins hardware_trigger_13/DATAFRAMEGEN_ERROR] [get_bd_pins xlconcat_0/In13]
  connect_bd_net -net hardware_trigger_13_HGAIN_SATURATION [get_bd_pins hardware_trigger_13/HGAIN_SATURATION] [get_bd_pins xlconcat_1/In13]
  connect_bd_net -net hardware_trigger_14_DATAFRAMEGEN_ERROR [get_bd_pins hardware_trigger_14/DATAFRAMEGEN_ERROR] [get_bd_pins xlconcat_0/In14]
  connect_bd_net -net hardware_trigger_14_HGAIN_SATURATION [get_bd_pins hardware_trigger_14/HGAIN_SATURATION] [get_bd_pins xlconcat_1/In14]
  connect_bd_net -net hardware_trigger_15_DATAFRAMEGEN_ERROR [get_bd_pins hardware_trigger_15/DATAFRAMEGEN_ERROR] [get_bd_pins xlconcat_0/In15]
  connect_bd_net -net hardware_trigger_15_HGAIN_SATURATION [get_bd_pins hardware_trigger_15/HGAIN_SATURATION] [get_bd_pins xlconcat_1/In15]
  connect_bd_net -net hardware_trigger_1_DATAFRAMEGEN_ERROR [get_bd_pins hardware_trigger_1/DATAFRAMEGEN_ERROR] [get_bd_pins xlconcat_0/In1]
  connect_bd_net -net hardware_trigger_1_HGAIN_SATURATION [get_bd_pins hardware_trigger_1/HGAIN_SATURATION] [get_bd_pins xlconcat_1/In1]
  connect_bd_net -net hardware_trigger_2_DATAFRAMEGEN_ERROR [get_bd_pins hardware_trigger_2/DATAFRAMEGEN_ERROR] [get_bd_pins xlconcat_0/In2]
  connect_bd_net -net hardware_trigger_2_HGAIN_SATURATION [get_bd_pins hardware_trigger_2/HGAIN_SATURATION] [get_bd_pins xlconcat_1/In2]
  connect_bd_net -net hardware_trigger_3_DATAFRAMEGEN_ERROR [get_bd_pins hardware_trigger_3/DATAFRAMEGEN_ERROR] [get_bd_pins xlconcat_0/In3]
  connect_bd_net -net hardware_trigger_3_HGAIN_SATURATION [get_bd_pins hardware_trigger_3/HGAIN_SATURATION] [get_bd_pins xlconcat_1/In3]
  connect_bd_net -net hardware_trigger_4_DATAFRAMEGEN_ERROR [get_bd_pins hardware_trigger_4/DATAFRAMEGEN_ERROR] [get_bd_pins xlconcat_0/In4]
  connect_bd_net -net hardware_trigger_4_HGAIN_SATURATION [get_bd_pins hardware_trigger_4/HGAIN_SATURATION] [get_bd_pins xlconcat_1/In4]
  connect_bd_net -net hardware_trigger_5_DATAFRAMEGEN_ERROR [get_bd_pins hardware_trigger_5/DATAFRAMEGEN_ERROR] [get_bd_pins xlconcat_0/In5]
  connect_bd_net -net hardware_trigger_5_HGAIN_SATURATION [get_bd_pins hardware_trigger_5/HGAIN_SATURATION] [get_bd_pins xlconcat_1/In5]
  connect_bd_net -net hardware_trigger_6_DATAFRAMEGEN_ERROR [get_bd_pins hardware_trigger_6/DATAFRAMEGEN_ERROR] [get_bd_pins xlconcat_0/In6]
  connect_bd_net -net hardware_trigger_6_HGAIN_SATURATION [get_bd_pins hardware_trigger_6/HGAIN_SATURATION] [get_bd_pins xlconcat_1/In6]
  connect_bd_net -net hardware_trigger_7_DATAFRAMEGEN_ERROR [get_bd_pins hardware_trigger_7/DATAFRAMEGEN_ERROR] [get_bd_pins xlconcat_0/In7]
  connect_bd_net -net hardware_trigger_7_HGAIN_SATURATION [get_bd_pins hardware_trigger_7/HGAIN_SATURATION] [get_bd_pins xlconcat_1/In7]
  connect_bd_net -net hardware_trigger_8_DATAFRAMEGEN_ERROR [get_bd_pins hardware_trigger_8/DATAFRAMEGEN_ERROR] [get_bd_pins xlconcat_0/In8]
  connect_bd_net -net hardware_trigger_8_HGAIN_SATURATION [get_bd_pins hardware_trigger_8/HGAIN_SATURATION] [get_bd_pins xlconcat_1/In8]
  connect_bd_net -net hardware_trigger_9_DATAFRAMEGEN_ERROR [get_bd_pins hardware_trigger_9/DATAFRAMEGEN_ERROR] [get_bd_pins xlconcat_0/In9]
  connect_bd_net -net hardware_trigger_9_HGAIN_SATURATION [get_bd_pins hardware_trigger_9/HGAIN_SATURATION] [get_bd_pins xlconcat_1/In9]
  connect_bd_net -net trigger_configrator_0_MAX_TRIGGER_LENGTH [get_bd_pins async_pl_ddr_mmu_0/MAX_TRIGGER_LENGTH] [get_bd_pins hardware_trigger_0/MAX_TRIGGER_LENGTH] [get_bd_pins hardware_trigger_1/MAX_TRIGGER_LENGTH] [get_bd_pins hardware_trigger_10/MAX_TRIGGER_LENGTH] [get_bd_pins hardware_trigger_11/MAX_TRIGGER_LENGTH] [get_bd_pins hardware_trigger_12/MAX_TRIGGER_LENGTH] [get_bd_pins hardware_trigger_13/MAX_TRIGGER_LENGTH] [get_bd_pins hardware_trigger_14/MAX_TRIGGER_LENGTH] [get_bd_pins hardware_trigger_15/MAX_TRIGGER_LENGTH] [get_bd_pins hardware_trigger_2/MAX_TRIGGER_LENGTH] [get_bd_pins hardware_trigger_3/MAX_TRIGGER_LENGTH] [get_bd_pins hardware_trigger_4/MAX_TRIGGER_LENGTH] [get_bd_pins hardware_trigger_5/MAX_TRIGGER_LENGTH] [get_bd_pins hardware_trigger_6/MAX_TRIGGER_LENGTH] [get_bd_pins hardware_trigger_7/MAX_TRIGGER_LENGTH] [get_bd_pins hardware_trigger_8/MAX_TRIGGER_LENGTH] [get_bd_pins hardware_trigger_9/MAX_TRIGGER_LENGTH] [get_bd_pins trigger_configrator_0/MAX_TRIGGER_LENGTH]
  connect_bd_net -net trigger_configrator_0_SET_CONFIG [get_bd_pins async_pl_ddr_mmu_0/SET_CONFIG] [get_bd_pins hardware_trigger_0/SET_CONFIG] [get_bd_pins hardware_trigger_1/SET_CONFIG] [get_bd_pins hardware_trigger_10/SET_CONFIG] [get_bd_pins hardware_trigger_11/SET_CONFIG] [get_bd_pins hardware_trigger_12/SET_CONFIG] [get_bd_pins hardware_trigger_13/SET_CONFIG] [get_bd_pins hardware_trigger_14/SET_CONFIG] [get_bd_pins hardware_trigger_15/SET_CONFIG] [get_bd_pins hardware_trigger_2/SET_CONFIG] [get_bd_pins hardware_trigger_3/SET_CONFIG] [get_bd_pins hardware_trigger_4/SET_CONFIG] [get_bd_pins hardware_trigger_5/SET_CONFIG] [get_bd_pins hardware_trigger_6/SET_CONFIG] [get_bd_pins hardware_trigger_7/SET_CONFIG] [get_bd_pins hardware_trigger_8/SET_CONFIG] [get_bd_pins hardware_trigger_9/SET_CONFIG] [get_bd_pins trigger_configrator_0/SET_CONFIG]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins async_pl_ddr_mmu_0/RESET] [get_bd_pins c_counter_binary_0/SCLR] [get_bd_pins util_vector_logic_0/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins DATAFRAMEGEN_ERROR] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlconcat_1_dout [get_bd_pins HGAIN_SATURATION] [get_bd_pins xlconcat_1/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set M_AXI [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M_AXI ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {32} \
   CONFIG.DATA_WIDTH {32} \
   CONFIG.PROTOCOL {AXI4} \
   ] $M_AXI

  set M_AXIS [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS ]

  set M_AXIS_RFDAC [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC ]

  set M_AXIS_RFDAC1 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC1 ]

  set M_AXIS_RFDAC2 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC2 ]

  set M_AXIS_RFDAC3 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC3 ]

  set M_AXIS_RFDAC4 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC4 ]

  set M_AXIS_RFDAC5 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC5 ]

  set M_AXIS_RFDAC6 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC6 ]

  set M_AXIS_RFDAC7 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC7 ]

  set M_AXIS_RFDAC8 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC8 ]

  set M_AXIS_RFDAC9 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC9 ]

  set M_AXIS_RFDAC10 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC10 ]

  set M_AXIS_RFDAC11 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC11 ]

  set M_AXIS_RFDAC12 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC12 ]

  set M_AXIS_RFDAC13 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC13 ]

  set M_AXIS_RFDAC14 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC14 ]

  set M_AXIS_RFDAC15 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS_RFDAC15 ]

  set S_AXI [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {32} \
   CONFIG.ARUSER_WIDTH {0} \
   CONFIG.AWUSER_WIDTH {0} \
   CONFIG.BUSER_WIDTH {0} \
   CONFIG.DATA_WIDTH {32} \
   CONFIG.HAS_BRESP {1} \
   CONFIG.HAS_BURST {1} \
   CONFIG.HAS_CACHE {1} \
   CONFIG.HAS_LOCK {1} \
   CONFIG.HAS_PROT {1} \
   CONFIG.HAS_QOS {1} \
   CONFIG.HAS_REGION {1} \
   CONFIG.HAS_RRESP {1} \
   CONFIG.HAS_WSTRB {1} \
   CONFIG.ID_WIDTH {0} \
   CONFIG.MAX_BURST_LENGTH {256} \
   CONFIG.NUM_READ_OUTSTANDING {1} \
   CONFIG.NUM_READ_THREADS {1} \
   CONFIG.NUM_WRITE_OUTSTANDING {1} \
   CONFIG.NUM_WRITE_THREADS {1} \
   CONFIG.PROTOCOL {AXI4} \
   CONFIG.READ_WRITE_MODE {READ_WRITE} \
   CONFIG.RUSER_BITS_PER_BYTE {0} \
   CONFIG.RUSER_WIDTH {0} \
   CONFIG.SUPPORTS_NARROW_BURST {1} \
   CONFIG.WUSER_BITS_PER_BYTE {0} \
   CONFIG.WUSER_WIDTH {0} \
   ] $S_AXI

  set S_AXIS_LGAIN [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_LGAIN

  set S_AXIS_LGAIN1 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN1 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_LGAIN1

  set S_AXIS_LGAIN2 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN2 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_LGAIN2

  set S_AXIS_LGAIN3 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN3 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_LGAIN3

  set S_AXIS_LGAIN4 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN4 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_LGAIN4

  set S_AXIS_LGAIN5 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN5 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_LGAIN5

  set S_AXIS_LGAIN6 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN6 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_LGAIN6

  set S_AXIS_LGAIN7 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN7 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_LGAIN7

  set S_AXIS_LGAIN8 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN8 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_LGAIN8

  set S_AXIS_LGAIN9 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN9 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_LGAIN9

  set S_AXIS_LGAIN10 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN10 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_LGAIN10

  set S_AXIS_LGAIN11 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN11 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_LGAIN11

  set S_AXIS_LGAIN12 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN12 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_LGAIN12

  set S_AXIS_LGAIN13 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN13 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_LGAIN13

  set S_AXIS_LGAIN14 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN14 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_LGAIN14

  set S_AXIS_LGAIN15 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_LGAIN15 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_LGAIN15

  set S_AXIS_RFADC [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_RFADC

  set S_AXIS_RFADC1 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC1 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_RFADC1

  set S_AXIS_RFADC2 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC2 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_RFADC2

  set S_AXIS_RFADC3 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC3 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_RFADC3

  set S_AXIS_RFADC4 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC4 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_RFADC4

  set S_AXIS_RFADC5 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC5 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_RFADC5

  set S_AXIS_RFADC6 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC6 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_RFADC6

  set S_AXIS_RFADC7 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC7 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_RFADC7

  set S_AXIS_RFADC8 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC8 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_RFADC8

  set S_AXIS_RFADC9 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC9 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_RFADC9

  set S_AXIS_RFADC10 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC10 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_RFADC10

  set S_AXIS_RFADC11 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC11 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_RFADC11

  set S_AXIS_RFADC12 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC12 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_RFADC12

  set S_AXIS_RFADC13 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC13 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_RFADC13

  set S_AXIS_RFADC14 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC14 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_RFADC14

  set S_AXIS_RFADC15 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_RFADC15 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
   ] $S_AXIS_RFADC15


  # Create ports
  set DATAFRAMEGEN_ERROR [ create_bd_port -dir O -from 15 -to 0 -type data DATAFRAMEGEN_ERROR ]
  set EXTERNAL_TRIGGER [ create_bd_port -dir I EXTERNAL_TRIGGER ]
  set HGAIN_SATURATION [ create_bd_port -dir O -from 15 -to 0 -type data HGAIN_SATURATION ]
  set MODE_SWITCH_LOWER_THRESHOLD [ create_bd_port -dir I -from 15 -to 0 MODE_SWITCH_LOWER_THRESHOLD ]
  set MODE_SWITCH_UPPER_THRESHOLD [ create_bd_port -dir I -from 15 -to 0 MODE_SWITCH_UPPER_THRESHOLD ]
  set M_AXIS_ACLK [ create_bd_port -dir I -type clk M_AXIS_ACLK ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {300000000} \
 ] $M_AXIS_ACLK
  set M_AXIS_ARESETN [ create_bd_port -dir I -type rst M_AXIS_ARESETN ]
  set S_AXIS_ACLK [ create_bd_port -dir I -type clk S_AXIS_ACLK ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {125000000} \
 ] $S_AXIS_ACLK
  set S_AXIS_ARESETN [ create_bd_port -dir I -type rst S_AXIS_ARESETN ]
  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_LOW} \
 ] $S_AXIS_ARESETN

  # Create instance: hardware_trigger_blocks
  create_hier_cell_hardware_trigger_blocks_1 [current_bd_instance .] hardware_trigger_blocks

  # Create interface connections
  connect_bd_intf_net -intf_net S_AXIS_LGAIN10_1 [get_bd_intf_ports S_AXIS_LGAIN10] [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_LGAIN10]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN11_1 [get_bd_intf_ports S_AXIS_LGAIN11] [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_LGAIN11]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN12_1 [get_bd_intf_ports S_AXIS_LGAIN12] [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_LGAIN12]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN13_1 [get_bd_intf_ports S_AXIS_LGAIN13] [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_LGAIN13]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN14_1 [get_bd_intf_ports S_AXIS_LGAIN14] [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_LGAIN14]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN15_1 [get_bd_intf_ports S_AXIS_LGAIN15] [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_LGAIN15]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN1_1 [get_bd_intf_ports S_AXIS_LGAIN1] [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_LGAIN1]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN2_1 [get_bd_intf_ports S_AXIS_LGAIN2] [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_LGAIN2]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN3_1 [get_bd_intf_ports S_AXIS_LGAIN3] [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_LGAIN3]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN4_1 [get_bd_intf_ports S_AXIS_LGAIN4] [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_LGAIN4]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN5_1 [get_bd_intf_ports S_AXIS_LGAIN5] [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_LGAIN5]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN6_1 [get_bd_intf_ports S_AXIS_LGAIN6] [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_LGAIN6]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN7_1 [get_bd_intf_ports S_AXIS_LGAIN7] [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_LGAIN7]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN8_1 [get_bd_intf_ports S_AXIS_LGAIN8] [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_LGAIN8]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN9_1 [get_bd_intf_ports S_AXIS_LGAIN9] [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_LGAIN9]
  connect_bd_intf_net -intf_net S_AXIS_LGAIN_1 [get_bd_intf_ports S_AXIS_LGAIN] [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_LGAIN]
  connect_bd_intf_net -intf_net S_AXIS_RFADC10_1 [get_bd_intf_ports S_AXIS_RFADC10] [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_RFADC10]
  connect_bd_intf_net -intf_net S_AXIS_RFADC11_1 [get_bd_intf_ports S_AXIS_RFADC11] [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_RFADC11]
  connect_bd_intf_net -intf_net S_AXIS_RFADC12_1 [get_bd_intf_ports S_AXIS_RFADC12] [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_RFADC12]
  connect_bd_intf_net -intf_net S_AXIS_RFADC13_1 [get_bd_intf_ports S_AXIS_RFADC13] [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_RFADC13]
  connect_bd_intf_net -intf_net S_AXIS_RFADC14_1 [get_bd_intf_ports S_AXIS_RFADC14] [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_RFADC14]
  connect_bd_intf_net -intf_net S_AXIS_RFADC15_1 [get_bd_intf_ports S_AXIS_RFADC15] [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_RFADC15]
  connect_bd_intf_net -intf_net S_AXIS_RFADC1_1 [get_bd_intf_ports S_AXIS_RFADC1] [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_RFADC1]
  connect_bd_intf_net -intf_net S_AXIS_RFADC2_1 [get_bd_intf_ports S_AXIS_RFADC2] [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_RFADC2]
  connect_bd_intf_net -intf_net S_AXIS_RFADC3_1 [get_bd_intf_ports S_AXIS_RFADC3] [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_RFADC3]
  connect_bd_intf_net -intf_net S_AXIS_RFADC4_1 [get_bd_intf_ports S_AXIS_RFADC4] [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_RFADC4]
  connect_bd_intf_net -intf_net S_AXIS_RFADC5_1 [get_bd_intf_ports S_AXIS_RFADC5] [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_RFADC5]
  connect_bd_intf_net -intf_net S_AXIS_RFADC6_1 [get_bd_intf_ports S_AXIS_RFADC6] [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_RFADC6]
  connect_bd_intf_net -intf_net S_AXIS_RFADC7_1 [get_bd_intf_ports S_AXIS_RFADC7] [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_RFADC7]
  connect_bd_intf_net -intf_net S_AXIS_RFADC8_1 [get_bd_intf_ports S_AXIS_RFADC8] [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_RFADC8]
  connect_bd_intf_net -intf_net S_AXIS_RFADC9_1 [get_bd_intf_ports S_AXIS_RFADC9] [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_RFADC9]
  connect_bd_intf_net -intf_net S_AXIS_RFADC_1 [get_bd_intf_ports S_AXIS_RFADC] [get_bd_intf_pins hardware_trigger_blocks/S_AXIS_RFADC]
  connect_bd_intf_net -intf_net S_AXI_1 [get_bd_intf_ports S_AXI] [get_bd_intf_pins hardware_trigger_blocks/S_AXI]
  connect_bd_intf_net -intf_net axi_datamover_0_M_AXI [get_bd_intf_ports M_AXI] [get_bd_intf_pins hardware_trigger_blocks/M_AXI]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_ports M_AXIS] [get_bd_intf_pins hardware_trigger_blocks/M_AXIS]
  connect_bd_intf_net -intf_net hardware_trigger_0_M_AXIS_RFDAC [get_bd_intf_ports M_AXIS_RFDAC] [get_bd_intf_pins hardware_trigger_blocks/M_AXIS_RFDAC]
  connect_bd_intf_net -intf_net hardware_trigger_10_M_AXIS_RFDAC [get_bd_intf_ports M_AXIS_RFDAC10] [get_bd_intf_pins hardware_trigger_blocks/M_AXIS_RFDAC10]
  connect_bd_intf_net -intf_net hardware_trigger_11_M_AXIS_RFDAC [get_bd_intf_ports M_AXIS_RFDAC11] [get_bd_intf_pins hardware_trigger_blocks/M_AXIS_RFDAC11]
  connect_bd_intf_net -intf_net hardware_trigger_12_M_AXIS_RFDAC [get_bd_intf_ports M_AXIS_RFDAC12] [get_bd_intf_pins hardware_trigger_blocks/M_AXIS_RFDAC12]
  connect_bd_intf_net -intf_net hardware_trigger_13_M_AXIS_RFDAC [get_bd_intf_ports M_AXIS_RFDAC13] [get_bd_intf_pins hardware_trigger_blocks/M_AXIS_RFDAC13]
  connect_bd_intf_net -intf_net hardware_trigger_14_M_AXIS_RFDAC [get_bd_intf_ports M_AXIS_RFDAC14] [get_bd_intf_pins hardware_trigger_blocks/M_AXIS_RFDAC14]
  connect_bd_intf_net -intf_net hardware_trigger_15_M_AXIS_RFDAC [get_bd_intf_ports M_AXIS_RFDAC15] [get_bd_intf_pins hardware_trigger_blocks/M_AXIS_RFDAC15]
  connect_bd_intf_net -intf_net hardware_trigger_1_M_AXIS_RFDAC [get_bd_intf_ports M_AXIS_RFDAC1] [get_bd_intf_pins hardware_trigger_blocks/M_AXIS_RFDAC1]
  connect_bd_intf_net -intf_net hardware_trigger_2_M_AXIS_RFDAC [get_bd_intf_ports M_AXIS_RFDAC2] [get_bd_intf_pins hardware_trigger_blocks/M_AXIS_RFDAC2]
  connect_bd_intf_net -intf_net hardware_trigger_3_M_AXIS_RFDAC [get_bd_intf_ports M_AXIS_RFDAC3] [get_bd_intf_pins hardware_trigger_blocks/M_AXIS_RFDAC3]
  connect_bd_intf_net -intf_net hardware_trigger_4_M_AXIS_RFDAC [get_bd_intf_ports M_AXIS_RFDAC4] [get_bd_intf_pins hardware_trigger_blocks/M_AXIS_RFDAC4]
  connect_bd_intf_net -intf_net hardware_trigger_5_M_AXIS_RFDAC [get_bd_intf_ports M_AXIS_RFDAC5] [get_bd_intf_pins hardware_trigger_blocks/M_AXIS_RFDAC5]
  connect_bd_intf_net -intf_net hardware_trigger_6_M_AXIS_RFDAC [get_bd_intf_ports M_AXIS_RFDAC6] [get_bd_intf_pins hardware_trigger_blocks/M_AXIS_RFDAC6]
  connect_bd_intf_net -intf_net hardware_trigger_7_M_AXIS_RFDAC [get_bd_intf_ports M_AXIS_RFDAC7] [get_bd_intf_pins hardware_trigger_blocks/M_AXIS_RFDAC7]
  connect_bd_intf_net -intf_net hardware_trigger_8_M_AXIS_RFDAC [get_bd_intf_ports M_AXIS_RFDAC8] [get_bd_intf_pins hardware_trigger_blocks/M_AXIS_RFDAC8]
  connect_bd_intf_net -intf_net hardware_trigger_9_M_AXIS_RFDAC [get_bd_intf_ports M_AXIS_RFDAC9] [get_bd_intf_pins hardware_trigger_blocks/M_AXIS_RFDAC9]

  # Create port connections
  connect_bd_net -net EXTERNAL_TRIGGER_1 [get_bd_ports EXTERNAL_TRIGGER] [get_bd_pins hardware_trigger_blocks/EXTERNAL_TRIGGER]
  connect_bd_net -net MODE_SWITCH_LOWER_THRESHOLD_1 [get_bd_ports MODE_SWITCH_LOWER_THRESHOLD] [get_bd_pins hardware_trigger_blocks/MODE_SWITCH_LOWER_THRESHOLD]
  connect_bd_net -net MODE_SWITCH_UPPER_THRESHOLD_1 [get_bd_ports MODE_SWITCH_UPPER_THRESHOLD] [get_bd_pins hardware_trigger_blocks/MODE_SWITCH_UPPER_THRESHOLD]
  connect_bd_net -net M_AXIS_ACLK_1 [get_bd_ports M_AXIS_ACLK] [get_bd_pins hardware_trigger_blocks/M_AXIS_ACLK]
  connect_bd_net -net M_AXIS_ARESETN_1 [get_bd_ports M_AXIS_ARESETN] [get_bd_pins hardware_trigger_blocks/M_AXIS_ARESETN]
  connect_bd_net -net S_AXIS_ACLK_1 [get_bd_ports S_AXIS_ACLK] [get_bd_pins hardware_trigger_blocks/S_AXIS_ACLK]
  connect_bd_net -net S_AXIS_ARESETN_1 [get_bd_ports S_AXIS_ARESETN] [get_bd_pins hardware_trigger_blocks/S_AXIS_ARESETN]
  connect_bd_net -net xlconcat_0_dout [get_bd_ports DATAFRAMEGEN_ERROR] [get_bd_pins hardware_trigger_blocks/DATAFRAMEGEN_ERROR]
  connect_bd_net -net xlconcat_1_dout [get_bd_ports HGAIN_SATURATION] [get_bd_pins hardware_trigger_blocks/HGAIN_SATURATION]

  # Create address segments


  # Restore current instance
  current_bd_instance $oldCurInst

  save_bd_design
common::send_msg_id "BD_TCL-1000" "WARNING" "This Tcl script was generated from a block design that has not been validated. It is possible that design <$design_name> may result in errors during validation."

  close_bd_design $design_name 
}
# End of cr_bd_hardware_trigger_blocks()
cr_bd_hardware_trigger_blocks ""
set_property EXCLUDE_DEBUG_LOGIC "0" [get_files hardware_trigger_blocks.bd ] 
set_property GENERATE_SYNTH_CHECKPOINT "1" [get_files hardware_trigger_blocks.bd ] 
set_property IS_ENABLED "1" [get_files hardware_trigger_blocks.bd ] 
set_property IS_GLOBAL_INCLUDE "0" [get_files hardware_trigger_blocks.bd ] 
set_property IS_LOCKED "0" [get_files hardware_trigger_blocks.bd ] 
set_property LIBRARY "xil_defaultlib" [get_files hardware_trigger_blocks.bd ] 
set_property PATH_MODE "RelativeFirst" [get_files hardware_trigger_blocks.bd ] 
set_property PFM_NAME "" [get_files hardware_trigger_blocks.bd ] 
set_property REGISTERED_WITH_MANAGER "1" [get_files hardware_trigger_blocks.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files hardware_trigger_blocks.bd ] 
set_property USED_IN "" [get_files hardware_trigger_blocks.bd ] 
set_property USED_IN_IMPLEMENTATION "0" [get_files hardware_trigger_blocks.bd ] 
set_property USED_IN_SIMULATION "0" [get_files hardware_trigger_blocks.bd ] 
set_property USED_IN_SYNTHESIS "0" [get_files hardware_trigger_blocks.bd ] 

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xczu29dr-ffvf1760-1-e -flow {Vivado Synthesis 2019} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2019" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "1" -objects $obj
set_property -name "options.pblocks" -value "" -objects $obj
set_property -name "options.cells" -value "" -objects $obj
set_property -name "options.slr" -value "0" -objects $obj
set_property -name "options.packthru" -value "0" -objects $obj
set_property -name "options.hierarchical" -value "0" -objects $obj
set_property -name "options.hierarchical_depth" -value "" -objects $obj
set_property -name "options.hierarchical_percentages" -value "0" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
set obj [get_runs synth_1]
set_property -name "constrset" -value "constrs_1" -objects $obj
set_property -name "description" -value "Vivado Synthesis Defaults" -objects $obj
set_property -name "flow" -value "Vivado Synthesis 2019" -objects $obj
set_property -name "name" -value "synth_1" -objects $obj
set_property -name "needs_refresh" -value "0" -objects $obj
set_property -name "part" -value "xczu29dr-ffvf1760-1-e" -objects $obj
set_property -name "srcset" -value "sources_1" -objects $obj
set_property -name "auto_incremental_checkpoint" -value "0" -objects $obj
set_property -name "incremental_checkpoint" -value "" -objects $obj
set_property -name "incremental_checkpoint.more_options" -value "" -objects $obj
set_property -name "include_in_archive" -value "1" -objects $obj
set_property -name "gen_full_bitstream" -value "1" -objects $obj
set_property -name "write_incremental_synth_checkpoint" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj
set_property -name "steps.synth_design.tcl.pre" -value "" -objects $obj
set_property -name "steps.synth_design.tcl.post" -value "" -objects $obj
set_property -name "steps.synth_design.args.flatten_hierarchy" -value "rebuilt" -objects $obj
set_property -name "steps.synth_design.args.gated_clock_conversion" -value "off" -objects $obj
set_property -name "steps.synth_design.args.bufg" -value "12" -objects $obj
set_property -name "steps.synth_design.args.fanout_limit" -value "10000" -objects $obj
set_property -name "steps.synth_design.args.directive" -value "Default" -objects $obj
set_property -name "steps.synth_design.args.retiming" -value "0" -objects $obj
set_property -name "steps.synth_design.args.fsm_extraction" -value "auto" -objects $obj
set_property -name "steps.synth_design.args.keep_equivalent_registers" -value "0" -objects $obj
set_property -name "steps.synth_design.args.resource_sharing" -value "auto" -objects $obj
set_property -name "steps.synth_design.args.control_set_opt_threshold" -value "auto" -objects $obj
set_property -name "steps.synth_design.args.no_lc" -value "0" -objects $obj
set_property -name "steps.synth_design.args.no_srlextract" -value "0" -objects $obj
set_property -name "steps.synth_design.args.shreg_min_size" -value "3" -objects $obj
set_property -name "steps.synth_design.args.max_bram" -value "-1" -objects $obj
set_property -name "steps.synth_design.args.max_uram" -value "-1" -objects $obj
set_property -name "steps.synth_design.args.max_dsp" -value "-1" -objects $obj
set_property -name "steps.synth_design.args.max_bram_cascade_height" -value "-1" -objects $obj
set_property -name "steps.synth_design.args.max_uram_cascade_height" -value "-1" -objects $obj
set_property -name "steps.synth_design.args.cascade_dsp" -value "auto" -objects $obj
set_property -name "steps.synth_design.args.assert" -value "0" -objects $obj
set_property -name "steps.synth_design.args.more options" -value "" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xczu29dr-ffvf1760-1-e -flow {Vivado Implementation 2019} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2019" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.check_timing_verbose" -value "0" -objects $obj
set_property -name "options.delay_type" -value "" -objects $obj
set_property -name "options.setup" -value "0" -objects $obj
set_property -name "options.hold" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.nworst" -value "" -objects $obj
set_property -name "options.unique_pins" -value "0" -objects $obj
set_property -name "options.path_type" -value "" -objects $obj
set_property -name "options.slack_lesser_than" -value "" -objects $obj
set_property -name "options.report_unconstrained" -value "0" -objects $obj
set_property -name "options.warn_on_violation" -value "0" -objects $obj
set_property -name "options.significant_digits" -value "" -objects $obj
set_property -name "options.cell" -value "" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "1" -objects $obj
set_property -name "options.upgrade_cw" -value "0" -objects $obj
set_property -name "options.checks" -value "" -objects $obj
set_property -name "options.ruledecks" -value "" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.check_timing_verbose" -value "0" -objects $obj
set_property -name "options.delay_type" -value "" -objects $obj
set_property -name "options.setup" -value "0" -objects $obj
set_property -name "options.hold" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.nworst" -value "" -objects $obj
set_property -name "options.unique_pins" -value "0" -objects $obj
set_property -name "options.path_type" -value "" -objects $obj
set_property -name "options.slack_lesser_than" -value "" -objects $obj
set_property -name "options.report_unconstrained" -value "0" -objects $obj
set_property -name "options.warn_on_violation" -value "0" -objects $obj
set_property -name "options.significant_digits" -value "" -objects $obj
set_property -name "options.cell" -value "" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.check_timing_verbose" -value "0" -objects $obj
set_property -name "options.delay_type" -value "" -objects $obj
set_property -name "options.setup" -value "0" -objects $obj
set_property -name "options.hold" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.nworst" -value "" -objects $obj
set_property -name "options.unique_pins" -value "0" -objects $obj
set_property -name "options.path_type" -value "" -objects $obj
set_property -name "options.slack_lesser_than" -value "" -objects $obj
set_property -name "options.report_unconstrained" -value "0" -objects $obj
set_property -name "options.warn_on_violation" -value "0" -objects $obj
set_property -name "options.significant_digits" -value "" -objects $obj
set_property -name "options.cell" -value "" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "1" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "1" -objects $obj
set_property -name "options.pblocks" -value "" -objects $obj
set_property -name "options.cells" -value "" -objects $obj
set_property -name "options.slr" -value "0" -objects $obj
set_property -name "options.packthru" -value "0" -objects $obj
set_property -name "options.hierarchical" -value "0" -objects $obj
set_property -name "options.hierarchical_depth" -value "" -objects $obj
set_property -name "options.hierarchical_percentages" -value "0" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "1" -objects $obj
set_property -name "options.verbose" -value "1" -objects $obj
set_property -name "options.cells" -value "" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.cells" -value "" -objects $obj
set_property -name "options.hierarchical" -value "0" -objects $obj
set_property -name "options.hierarchical_depth" -value "" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.cells" -value "" -objects $obj
set_property -name "options.hierarchical" -value "0" -objects $obj
set_property -name "options.hierarchical_depth" -value "" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.check_timing_verbose" -value "0" -objects $obj
set_property -name "options.delay_type" -value "" -objects $obj
set_property -name "options.setup" -value "0" -objects $obj
set_property -name "options.hold" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.nworst" -value "" -objects $obj
set_property -name "options.unique_pins" -value "0" -objects $obj
set_property -name "options.path_type" -value "" -objects $obj
set_property -name "options.slack_lesser_than" -value "" -objects $obj
set_property -name "options.report_unconstrained" -value "0" -objects $obj
set_property -name "options.warn_on_violation" -value "0" -objects $obj
set_property -name "options.significant_digits" -value "" -objects $obj
set_property -name "options.cell" -value "" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.check_timing_verbose" -value "0" -objects $obj
set_property -name "options.delay_type" -value "" -objects $obj
set_property -name "options.setup" -value "0" -objects $obj
set_property -name "options.hold" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.nworst" -value "" -objects $obj
set_property -name "options.unique_pins" -value "0" -objects $obj
set_property -name "options.path_type" -value "" -objects $obj
set_property -name "options.slack_lesser_than" -value "" -objects $obj
set_property -name "options.report_unconstrained" -value "0" -objects $obj
set_property -name "options.warn_on_violation" -value "0" -objects $obj
set_property -name "options.significant_digits" -value "" -objects $obj
set_property -name "options.cell" -value "" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.check_timing_verbose" -value "0" -objects $obj
set_property -name "options.delay_type" -value "" -objects $obj
set_property -name "options.setup" -value "0" -objects $obj
set_property -name "options.hold" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.nworst" -value "" -objects $obj
set_property -name "options.unique_pins" -value "0" -objects $obj
set_property -name "options.path_type" -value "" -objects $obj
set_property -name "options.slack_lesser_than" -value "" -objects $obj
set_property -name "options.report_unconstrained" -value "0" -objects $obj
set_property -name "options.warn_on_violation" -value "0" -objects $obj
set_property -name "options.significant_digits" -value "" -objects $obj
set_property -name "options.cell" -value "" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "1" -objects $obj
set_property -name "options.upgrade_cw" -value "0" -objects $obj
set_property -name "options.checks" -value "" -objects $obj
set_property -name "options.ruledecks" -value "" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "1" -objects $obj
set_property -name "options.checks" -value "" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "1" -objects $obj
set_property -name "options.advisory" -value "0" -objects $obj
set_property -name "options.xpe" -value "" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "1" -objects $obj
set_property -name "options.of_objects" -value "" -objects $obj
set_property -name "options.route_type" -value "" -objects $obj
set_property -name "options.list_all_nets" -value "0" -objects $obj
set_property -name "options.show_all" -value "0" -objects $obj
set_property -name "options.has_routing" -value "0" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "1" -objects $obj
set_property -name "options.check_timing_verbose" -value "0" -objects $obj
set_property -name "options.delay_type" -value "" -objects $obj
set_property -name "options.setup" -value "0" -objects $obj
set_property -name "options.hold" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.nworst" -value "" -objects $obj
set_property -name "options.unique_pins" -value "0" -objects $obj
set_property -name "options.path_type" -value "" -objects $obj
set_property -name "options.slack_lesser_than" -value "" -objects $obj
set_property -name "options.report_unconstrained" -value "0" -objects $obj
set_property -name "options.warn_on_violation" -value "0" -objects $obj
set_property -name "options.significant_digits" -value "" -objects $obj
set_property -name "options.cell" -value "" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "1" -objects $obj
set_property -name "options.cells" -value "" -objects $obj
set_property -name "options.hierarchical" -value "0" -objects $obj
set_property -name "options.hierarchical_depth" -value "" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "1" -objects $obj
set_property -name "options.write_xdc" -value "0" -objects $obj
set_property -name "options.clock_roots_only" -value "0" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "1" -objects $obj
set_property -name "options.delay_type" -value "" -objects $obj
set_property -name "options.setup" -value "0" -objects $obj
set_property -name "options.hold" -value "0" -objects $obj
set_property -name "options.max_paths" -value "" -objects $obj
set_property -name "options.nworst" -value "" -objects $obj
set_property -name "options.unique_pins" -value "0" -objects $obj
set_property -name "options.path_type" -value "" -objects $obj
set_property -name "options.slack_lesser_than" -value "" -objects $obj
set_property -name "options.slack_greater_than" -value "" -objects $obj
set_property -name "options.significant_digits" -value "" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "1" -objects $obj
set_property -name "options.check_timing_verbose" -value "0" -objects $obj
set_property -name "options.delay_type" -value "" -objects $obj
set_property -name "options.setup" -value "0" -objects $obj
set_property -name "options.hold" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.nworst" -value "" -objects $obj
set_property -name "options.unique_pins" -value "0" -objects $obj
set_property -name "options.path_type" -value "" -objects $obj
set_property -name "options.slack_lesser_than" -value "" -objects $obj
set_property -name "options.report_unconstrained" -value "0" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj
set_property -name "options.significant_digits" -value "" -objects $obj
set_property -name "options.cell" -value "" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "1" -objects $obj
set_property -name "options.delay_type" -value "" -objects $obj
set_property -name "options.setup" -value "0" -objects $obj
set_property -name "options.hold" -value "0" -objects $obj
set_property -name "options.max_paths" -value "" -objects $obj
set_property -name "options.nworst" -value "" -objects $obj
set_property -name "options.unique_pins" -value "0" -objects $obj
set_property -name "options.path_type" -value "" -objects $obj
set_property -name "options.slack_lesser_than" -value "" -objects $obj
set_property -name "options.slack_greater_than" -value "" -objects $obj
set_property -name "options.significant_digits" -value "" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj
set_property -name "options.more_options" -value "" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "constrset" -value "constrs_1" -objects $obj
set_property -name "description" -value "Default settings for Implementation." -objects $obj
set_property -name "flow" -value "Vivado Implementation 2019" -objects $obj
set_property -name "name" -value "impl_1" -objects $obj
set_property -name "needs_refresh" -value "0" -objects $obj
set_property -name "part" -value "xczu29dr-ffvf1760-1-e" -objects $obj
set_property -name "pr_configuration" -value "" -objects $obj
set_property -name "srcset" -value "sources_1" -objects $obj
set_property -name "auto_incremental_checkpoint" -value "0" -objects $obj
set_property -name "incremental_checkpoint" -value "" -objects $obj
set_property -name "incremental_checkpoint.more_options" -value "" -objects $obj
set_property -name "include_in_archive" -value "1" -objects $obj
set_property -name "gen_full_bitstream" -value "1" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.init_design.tcl.pre" -value "" -objects $obj
set_property -name "steps.init_design.tcl.post" -value "" -objects $obj
set_property -name "steps.opt_design.is_enabled" -value "1" -objects $obj
set_property -name "steps.opt_design.tcl.pre" -value "" -objects $obj
set_property -name "steps.opt_design.tcl.post" -value "" -objects $obj
set_property -name "steps.opt_design.args.verbose" -value "0" -objects $obj
set_property -name "steps.opt_design.args.directive" -value "Default" -objects $obj
set_property -name "steps.opt_design.args.more options" -value "" -objects $obj
set_property -name "steps.power_opt_design.is_enabled" -value "0" -objects $obj
set_property -name "steps.power_opt_design.tcl.pre" -value "" -objects $obj
set_property -name "steps.power_opt_design.tcl.post" -value "" -objects $obj
set_property -name "steps.power_opt_design.args.more options" -value "" -objects $obj
set_property -name "steps.place_design.tcl.pre" -value "" -objects $obj
set_property -name "steps.place_design.tcl.post" -value "" -objects $obj
set_property -name "steps.place_design.args.directive" -value "Default" -objects $obj
set_property -name "steps.place_design.args.more options" -value "" -objects $obj
set_property -name "steps.post_place_power_opt_design.is_enabled" -value "0" -objects $obj
set_property -name "steps.post_place_power_opt_design.tcl.pre" -value "" -objects $obj
set_property -name "steps.post_place_power_opt_design.tcl.post" -value "" -objects $obj
set_property -name "steps.post_place_power_opt_design.args.more options" -value "" -objects $obj
set_property -name "steps.phys_opt_design.is_enabled" -value "0" -objects $obj
set_property -name "steps.phys_opt_design.tcl.pre" -value "" -objects $obj
set_property -name "steps.phys_opt_design.tcl.post" -value "" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "Default" -objects $obj
set_property -name "steps.phys_opt_design.args.more options" -value "" -objects $obj
set_property -name "steps.route_design.tcl.pre" -value "" -objects $obj
set_property -name "steps.route_design.tcl.post" -value "" -objects $obj
set_property -name "steps.route_design.args.directive" -value "Default" -objects $obj
set_property -name "steps.route_design.args.more options" -value "" -objects $obj
set_property -name "steps.post_route_phys_opt_design.is_enabled" -value "0" -objects $obj
set_property -name "steps.post_route_phys_opt_design.tcl.pre" -value "" -objects $obj
set_property -name "steps.post_route_phys_opt_design.tcl.post" -value "" -objects $obj
set_property -name "steps.post_route_phys_opt_design.args.directive" -value "Default" -objects $obj
set_property -name "steps.post_route_phys_opt_design.args.more options" -value "" -objects $obj
set_property -name "steps.write_bitstream.tcl.pre" -value "" -objects $obj
set_property -name "steps.write_bitstream.tcl.post" -value "" -objects $obj
set_property -name "steps.write_bitstream.args.raw_bitfile" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.mask_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.no_binary_bitfile" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.bin_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.logic_location_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.more options" -value "" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "active_reports" -value "" -objects $obj
set_property -name "active_reports_invalid" -value "" -objects $obj
set_property -name "active_run" -value "0" -objects $obj
set_property -name "hide_unused_data" -value "1" -objects $obj
set_property -name "incl_new_reports" -value "0" -objects $obj
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj
set_property -name "run.step" -value "route_design" -objects $obj
set_property -name "run.type" -value "implementation" -objects $obj
set_property -name "statistics.critical_warning" -value "1" -objects $obj
set_property -name "statistics.error" -value "1" -objects $obj
set_property -name "statistics.info" -value "1" -objects $obj
set_property -name "statistics.warning" -value "1" -objects $obj
set_property -name "view.orientation" -value "Horizontal" -objects $obj
set_property -name "view.type" -value "Graph" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "active_reports" -value "" -objects $obj
set_property -name "active_reports_invalid" -value "" -objects $obj
set_property -name "active_run" -value "0" -objects $obj
set_property -name "hide_unused_data" -value "1" -objects $obj
set_property -name "incl_new_reports" -value "0" -objects $obj
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj
set_property -name "run.step" -value "route_design" -objects $obj
set_property -name "run.type" -value "implementation" -objects $obj
set_property -name "statistics.critical_warning" -value "1" -objects $obj
set_property -name "statistics.error" -value "1" -objects $obj
set_property -name "statistics.info" -value "1" -objects $obj
set_property -name "statistics.warning" -value "1" -objects $obj
set_property -name "view.orientation" -value "Horizontal" -objects $obj
set_property -name "view.type" -value "Graph" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "active_reports" -value "" -objects $obj
set_property -name "active_reports_invalid" -value "" -objects $obj
set_property -name "active_run" -value "0" -objects $obj
set_property -name "hide_unused_data" -value "1" -objects $obj
set_property -name "incl_new_reports" -value "0" -objects $obj
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj
set_property -name "run.step" -value "route_design" -objects $obj
set_property -name "run.type" -value "implementation" -objects $obj
set_property -name "statistics.bram" -value "1" -objects $obj
set_property -name "statistics.clocks" -value "1" -objects $obj
set_property -name "statistics.dsp" -value "1" -objects $obj
set_property -name "statistics.gth" -value "1" -objects $obj
set_property -name "statistics.gtp" -value "1" -objects $obj
set_property -name "statistics.gtx" -value "1" -objects $obj
set_property -name "statistics.gtz" -value "1" -objects $obj
set_property -name "statistics.io" -value "1" -objects $obj
set_property -name "statistics.logic" -value "1" -objects $obj
set_property -name "statistics.mmcm" -value "1" -objects $obj
set_property -name "statistics.pcie" -value "1" -objects $obj
set_property -name "statistics.phaser" -value "1" -objects $obj
set_property -name "statistics.pll" -value "1" -objects $obj
set_property -name "statistics.pl_static" -value "1" -objects $obj
set_property -name "statistics.ps7" -value "1" -objects $obj
set_property -name "statistics.ps" -value "1" -objects $obj
set_property -name "statistics.ps_static" -value "1" -objects $obj
set_property -name "statistics.signals" -value "1" -objects $obj
set_property -name "statistics.total_power" -value "1" -objects $obj
set_property -name "statistics.transceiver" -value "1" -objects $obj
set_property -name "statistics.xadc" -value "1" -objects $obj
set_property -name "view.orientation" -value "Horizontal" -objects $obj
set_property -name "view.type" -value "Graph" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "active_reports" -value "" -objects $obj
set_property -name "active_reports_invalid" -value "" -objects $obj
set_property -name "active_run" -value "0" -objects $obj
set_property -name "hide_unused_data" -value "1" -objects $obj
set_property -name "incl_new_reports" -value "0" -objects $obj
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj
set_property -name "run.step" -value "route_design" -objects $obj
set_property -name "run.type" -value "implementation" -objects $obj
set_property -name "statistics.ths" -value "1" -objects $obj
set_property -name "statistics.tns" -value "1" -objects $obj
set_property -name "statistics.tpws" -value "1" -objects $obj
set_property -name "statistics.whs" -value "1" -objects $obj
set_property -name "statistics.wns" -value "1" -objects $obj
set_property -name "view.orientation" -value "Horizontal" -objects $obj
set_property -name "view.type" -value "Table" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "active_reports" -value "" -objects $obj
set_property -name "active_reports_invalid" -value "" -objects $obj
set_property -name "active_run" -value "0" -objects $obj
set_property -name "hide_unused_data" -value "1" -objects $obj
set_property -name "incl_new_reports" -value "0" -objects $obj
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj
set_property -name "statistics.bram" -value "1" -objects $obj
set_property -name "statistics.bufg" -value "1" -objects $obj
set_property -name "statistics.dsp" -value "1" -objects $obj
set_property -name "statistics.ff" -value "1" -objects $obj
set_property -name "statistics.gt" -value "1" -objects $obj
set_property -name "statistics.io" -value "1" -objects $obj
set_property -name "statistics.lut" -value "1" -objects $obj
set_property -name "statistics.lutram" -value "1" -objects $obj
set_property -name "statistics.mmcm" -value "1" -objects $obj
set_property -name "statistics.pcie" -value "1" -objects $obj
set_property -name "statistics.pll" -value "1" -objects $obj
set_property -name "statistics.uram" -value "1" -objects $obj
set_property -name "view.orientation" -value "Horizontal" -objects $obj
set_property -name "view.type" -value "Graph" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "active_reports" -value "" -objects $obj
set_property -name "active_reports_invalid" -value "" -objects $obj
set_property -name "active_run" -value "0" -objects $obj
set_property -name "hide_unused_data" -value "1" -objects $obj
set_property -name "incl_new_reports" -value "0" -objects $obj
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj
set_property -name "run.step" -value "place_design" -objects $obj
set_property -name "run.type" -value "implementation" -objects $obj
set_property -name "statistics.bram" -value "1" -objects $obj
set_property -name "statistics.bufg" -value "1" -objects $obj
set_property -name "statistics.dsp" -value "1" -objects $obj
set_property -name "statistics.ff" -value "1" -objects $obj
set_property -name "statistics.gt" -value "1" -objects $obj
set_property -name "statistics.io" -value "1" -objects $obj
set_property -name "statistics.lut" -value "1" -objects $obj
set_property -name "statistics.lutram" -value "1" -objects $obj
set_property -name "statistics.mmcm" -value "1" -objects $obj
set_property -name "statistics.pcie" -value "1" -objects $obj
set_property -name "statistics.pll" -value "1" -objects $obj
set_property -name "statistics.uram" -value "1" -objects $obj
set_property -name "view.orientation" -value "Horizontal" -objects $obj
set_property -name "view.type" -value "Graph" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
